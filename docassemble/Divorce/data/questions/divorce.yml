metadata:
  title: Divorce
  short title: Divorce
  comment: This program helps you make the forms to end a marriage or civil union.
  authors:
    - Matt Newsted
---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ILAO:ilao-interview-framework.yml
  - docassemble.ILAO:shared-basic-questions.yml
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
  - users[0].employers: ALPeopleList.using(there_are_any=True)
  - other_parties: ALPeopleList.using(there_are_any=True)
  - other_parties[0].employers: ALPeopleList.using(there_are_any=True)
  - children: ALPeopleList.using(object_type=ALIndividual, there_are_any=True, complete_attribute='complete')
  - children[i].former_addresses: DAList.using(there_are_any=True, object_type=ALAddress, complete_attribute=['complete'])   
  - adult_children: ALPeopleList.using(object_type=ALIndividual, there_are_any=True, complete_attribute='complete')
  - outside_children: ALPeopleList.using(object_type=ALIndividual, there_are_any=True, complete_attribute=['complete'])  
  - custody_cases: DAList.using(object_type=Thing, complete_attribute='complete', there_are_any=True)  
  - other_cases: DAList.using(object_type=Thing, complete_attribute='complete', there_are_any=True)  
  - custodians: ALPeopleList.using(object_type=ALIndividual, there_are_any=True, complete_attribute='complete')
  - other_adults: ALPeopleList.using(object_type=ALIndividual, there_are_any=True, complete_attribute='complete')
  - debts: DAList.using(object_type=Thing, complete_attribute='complete', there_are_any=True)
  - pensions_resp: DAList.using(object_type=Thing, complete_attribute='complete', there_are_any=True)
  - pensions_pet: DAList.using(object_type=Thing, complete_attribute='complete', there_are_any=True)
    
  - property_list: DAList.using(object_type=Thing, complete_attribute='complete', there_are_any=True)
  - real_estate: ALAddress
  - service_address: ALAddress
  - second_service_address: ALAddress  
  - court_list: ALCourtLoader.using(file_name='docassemble.ILAO:data/sources/il_courts.xlsx')
  - minor_children_list: ALPeopleList.using(there_are_any=True, object_Type=ALIndividual, there_is_another=False)
  - support_children_list: ALPeopleList.using(there_are_any=True, object_Type=ALIndividual, there_is_another=False)
    
---
code: |
  al_form_type = 'starts_case'
  ilao_easy_form_title = "Divorce"
  ilao_easy_form_url = "https://www.illinoislegalaid.org/legal-information/divorce"
  form_name = "Divorce"
  github_user = 'IllinoisLegalAidOnline'
  github_repo_name = 'docassemble-Divorce'
  allowed_courts = ['Circuit']
---
# Road map
sections:
  - section_intro: Start
  - section_basic: Basic info
  - section_about_you: About you
  - section_about_spouse: About your spouse
  - section_children: Children and support
  - section_debts: Debts
  - section_property: Property
  - section_filing: Filing details
  - section_download: Download  
---
# interview order block
mandatory: True
code: |
  nav.set_section('section_intro')
  sees_nav_bar
  snapshot_start
  how_to_use
  divorce_filing_reqs
  set_progress(5)
  accept_terms
  divorce_info
  divorce_relief
  if users[0].is_resident:
    if users[0].meets_90_day_requirement == False:
      must_meet_90_day_requirement
  else:
    must_live_in_illinois

  set_progress(10)  
  nav.set_section('section_basic')
  users[0].name.first
  other_parties[0].name.first
  marriage_date
  marriage_in_america
  if previous_divorce == "Yes":
    if not previous_divorce_dismissed:
      earlier_divorce_not_pending
  separation_date
  if divorce_grounds != True:
    must_have_irreconcilable_differences
  
  set_progress(20)
  nav.set_section('section_about_you')
  hide_address
  users[0].address.address
  users[0].residence_county
  users[0].phone_number
  users[0].birthdate
  if users[0].emp_status["Yes"]:
    users[0].employers[0].job_title
    if users[0].has_second_job:
      users[0].employers[1].job_title
  
  users[0].use_former_name
  
  set_progress(30)
  nav.set_section('section_about_spouse')
  if other_parties[0].is_resident:
    other_parties[0].meets_90_day_requirement
  if knows_resp_address:
    other_parties[0].address.address
  other_parties[0].phone_number  
  other_parties[0].birthdate
  if other_parties[0].emp_status["Yes"]:
    other_parties[0].employers[0].job_title
    if other_parties[0].has_second_job:
      other_parties[0].employers[1].job_title
  other_parties[0].is_active_duty
  
  set_progress(40)
  nav.set_section('section_children')
  children_intro
  pet_is_pregnant
  resp_is_pregnant
  
  if any_children_together:
    if children_status['minors'] or children_status['support']: 
      children.gather()
      want_child_support
      current_child_support
      parenting_plan_info
      current_pt_schedule
      taxes_choice
      parenting_class_info
      build_child_lists
      child_detail_update
    elif children_status['adults'] and children_status['minors'] == False and children_status['support'] == False:
      adult_children.gather()
      formatted_adult_child_list

  children_debug   ### DEBUG
  
  if file_with_kids:
    if any_children_together:
      if other_custody_case:
        custody_cases.gather()
      if other_case_involving_kids:
        other_cases.gather()
      if other_custodian:
        custodians.gather()
      if kids_lived_with_other_adult:
        other_adults.gather()
    if has_other_kids_during_marriage:
      outside_children.gather()
 
  want_maintenance
  current_maintenance
  
  set_progress(60)
  nav.set_section('section_debts')
  debts_intro
  if include_debts:
    debts.gather()
    unlisted_debts
    pet_has_nonmarital_debts
    resp_has_nonmarital_debts

  set_progress(70)
  nav.set_section('section_property')
  property_intro
  if include_property:
    property_keep
    property_list.gather()
  retirement_intro
  if retirement_options == "split":
    if enter_resp_pensions:
      pensions_resp.gather()
      resp_pensions_qdro
    if enter_pet_pensions:
      pensions_pet.gather()
      pet_pensions_qdro
  if retirement_options == "own" or retirement_options == "split":
    pensions_other
  real_estate_intro
  if has_real_estate:
    real_estate.address
    attach_legal_desc
  if include_property:
    pet_has_nonmarital_property
    resp_has_nonmarital_property
    property_exchange
    property_other
  
  set_progress(90)
  nav.set_section('section_filing')

  if trial_court_index == -1:
    cook_district
    previous_cook_case_type
    case_type_marriage
  courthouse_info

  if know_resp_location:
    if service_address_choice == "other":
      service_address.address
    if has_second_service_address:  
      if second_service_address_choice == "other":
        second_service_address.address
      other_parties[0].phone_number_alt
    service_method
    service_state
    service_county
  
  e_signature

  set_progress(100)
  nav.set_section('section_download')
  forms_assembling
  snapshot_forms
  get_docs_screen
---
code: |
  stuff_to_snapshot = {
  	'start_time': str(current_datetime().format_datetime()),
  	'started_interview': True, 
  	}

  try:
    stuff_to_snapshot['ip_address'] = device(ip=True)
  except:
    pass

  stuff_to_snapshot['zip'] = showifdef('users[0].address.zip')

  stuff_to_snapshot['with_kids'] = showifdef('file_with_kids')
  
  stuff_to_snapshot['downloaded_forms'] = showifdef('forms_assembling')
  
  store_variables_snapshot(
  	data=stuff_to_snapshot, persistent=True
  	)
  snapshot_interview_state = True
---
code: |
  snapshot_interview_state
  snapshot_start = True  
---
code: |
  reconsider('snapshot_interview_state')
  snapshot_forms = True
---
id: welcome
question: |
  Divorce
subquestion: |
  Welcome to Illinois Legal Aid Online's **Divorce** Easy Form.

  This program helps you make divorce forms to ask the court to end a marriage or civil union.

  The process can be complicated. We will give you basic information about divorce on the next screens and on instructions you can download at the end of the program.

  To learn more, read ILAO's guide about [**getting a divorce**](https://www.illinoislegalaid.org/node/30446).
field: sees_nav_bar
---
id: instructions
continue button field: how_to_use
question: |
  Instructions
subquestion: |
  To use this program you will need to know: 

  * Date and place of your marriage or civil union, 
  * Date you and your spouse separated,
  * Addresses for you and your spouse,
  * Place of employment and income for you and your spouse,
  * Whether you or your spouse receive Social Security,
  * Information about any real estate, personal property, and retirement and bank accounts that you or your spouse own or debts you and your spouse owe.

  If you and your spouse have children, you also need to know:

  * Names and birth dates of all of the children you and your spouse have together or separately, and
  * Information about other court cases that involve the children you and your spouse have together.

  Set aside 20 to 45 minutes to finish this program. You can log in and save your work to continue later. 
 
  ${ collapse_template(help_example) }  

  Click on **{green words}** to learn what they mean. Some pages have a question mark in a circle ${ fa_icon("question-circle", color_css="#0dcaf0" ) } that helps explain things.
---
template: help_example
subject: |
  **You can click sections like this to show more information.**
content: |  
  This is an example of help. Click again to hide.
---
id: divorce filing requirements
continue button field: divorce_filing_reqs
question: |
  Divorce filing requirements
subquestion: |
  You can file a divorce in Illinois if:

  * You and your spouse have lived in Illinois for at least 90 days, and
  * There is no other divorce case already filed and still pending anywhere else (not dismissed).

  **Note:** If your spouse is on active duty with any branch of the US military service, they must sign an *Entry of Appearance* form. This and other blank forms are available on the [**Illinois Courts website**](https://www.illinoiscourts.gov/forms/approved-forms/forms-circuit-court/divorce-child-support-maintenance/).
---
id: divorce info
continue button field: divorce_info
question: |
  Divorce information
subquestion: |
  A divorce can take months or even years. It can depend on how quickly the people can agree to how things will be divided and how children will be taken care of. If the parties do not agree on all terms, the judge will need to decide.

  **Note:** This Easy Form will make many forms. Some will be used when you file the case, some during the case, and some when the judgment is final. Some of the forms are ready while others are partially complete.
  
  Be sure to review your forms and read instructions you can download at the end of the program.
---
id: divorce relief
continue button field: divorce_relief
question: |
  What you can ask for in a divorce
subquestion: |
  A divorce case is started by filing a *Petition for Divorce*. The petition tells the court what you want the court to order. If some of these words are new or confusing, we will try to explain them.

  The divorce petition asks the judge to order:

    * A Judgment of Dissolution of Marriage/Civil Union for you and your spouse.
    * That each party gets to keep all of their non-marital/non-civil union property.
    * A fair division of the marital/civil union property.
    * A fair division of the debts obtained during the marriage/civil union.
    * Each party be assigned their non-marital/non-civil union debt.
    * That maintenance be awarded, if appropriate. 
    * That you be allowed to return to using your former name if you want.
    * For any other relief that is appropriate.
  
  If you have **children of the marriage**, the divorce petition also asks the judge to order:
  
    * That the Parenting Plan for the minor children that you file be approved.
    * Child support for the care or education of the minor children, if appropriate.
    * Support for the care or education of the adult children, if appropriate.

---
id: live in IL
question: |
  Do you live in Illinois?
fields:
  - no label: users[0].is_resident
    datatype: yesnoradio  
---
id: must live in IL
event: must_live_in_illinois
question: |
  Sorry
subquestion: |
  You must live in Illinois if you want to file for divorce in Illinois.
  
  You can use the [**Legal Services Corporation website**](https://www.lsc.gov/about-lsc/what-legal-aid/get-legal-help) to find a legal aid organization in another state.
buttons:
  - Exit: exit
  - Restart: restart
---
id: live in IL for 90 days
question: |
  Have you lived in Illinois for longer than 90 days?
#subquestion: |
#  Answering **Yes** means that you lived in Illinois without taking a break to live in another state.
fields:
  - no label: users[0].meets_90_day_requirement
    datatype: yesnoradio
---
id: must meet 90 day requirement
event: must_meet_90_day_requirement
question: |
  Sorry
subquestion: |
  You must live in Illinois for longer than 90 days if you want to file for divorce in Illinois.
  
  You can use the [**Legal Services Corporation website**](https://www.lsc.gov/about-lsc/what-legal-aid/get-legal-help) to find a legal aid organization in another state.
buttons:
  - Exit: exit
  - Restart: restart
---
id: user name
sets:
    - users[0].name.first
    - users[0].name.last
    - users[0].name.middle
    - users[0].name.suffix
question:  |
  What is your name?
subquestion: |
  The person who starts the divorce case is the Petitioner.
fields:
  - code: |
      users[0].name_fields()
---
sets:
  - other_parties[0].name.first
  - other_parties[0].name.last
  - other_parties[0].name.middle
  - other_parties[0].name.suffix
id: spouse name
question: |
  What is the name of your spouse?
subquestion: |
  The word "spouse" refers to your husband, wife, or domestic partner.

  The person who the divorce case is filed against is the Respondent.
fields:
  - code: |
      other_parties[0].name_fields()
---
id: marriage date
question: |
  When were you married?
subquestion: |
  If you are ending a civil union, enter the date you were united.
fields:
  - Date of marriage or civil union: marriage_date
    datatype: BirthDate
    alMax: ${ today().format("yyyy-MM-dd") }
---
id: marriage location
question: |
  Where were you married?
subquestion: |
  If you are ending a civil union, enter the location where the civil union occurred.
fields:
  - Were you married or united in the United States?: marriage_in_america
    datatype: yesnoradio
  - State: marriage_state
    show if: 
      variable: marriage_in_america
      is: True
    code: |
      states_list()
  - County: marriage_county
    code: |
      court_list._load_courts()["address_county"].unique()      
    js show if: |
      val('marriage_state') === "IL" && val('marriage_in_america')
  - County: marriage_county
    maxlength: 25
    js show if: |
      val('marriage_state') != "IL" && val('marriage_in_america')
  - County and State or Province (separated by a comma): marriage_intl_text
    help: |
      List the county and list the state or province if the country has them.
    required: False
    show if: 
      variable: marriage_in_america
      is: False
  - Country (outside US): marriage_country
    show if: 
      variable: marriage_in_america
      is: False   
---
id: previous divorce filed
question: |
  Have you or your spouse filed an earlier case to dissolve this marriage or civil union?
fields:
  - Filed an earlier divorce?: previous_divorce
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know.: I don't know.
  - Was it filed in the United States?: previous_divorce_in_us
    datatype: yesnoradio
    show if: 
      variable: previous_divorce
      is: "Yes"
  - State: previous_divorce_state
    show if: 
      variable: previous_divorce_in_us
      is: True
    code: |
      states_list()
  - County: previous_divorce_county
    code: |
      court_list._load_courts()["address_county"].unique()      
    js show if: |
      val('previous_divorce_state') === "IL" && val('previous_divorce_in_us')
  - County: previous_divorce_county
    maxlength: 25
    js show if: |
      val('previous_divorce_state') != "IL" && val('previous_divorce_in_us')
  - County and State or Province (separated by a comma): previous_divorce_intl_text
    help: |
      List the county and list the state or province if the country has them.
    required: False
    show if: 
      variable: previous_divorce_in_us
      is: False
  - Country (outside US): previous_divorce_country
    show if: 
      variable: previous_divorce_in_us
      is: False
  - Was the earlier divorce case dismissed?: previous_divorce_dismissed
    datatype: yesnoradio
    help: |
      This means that the earlier case is not pending (ongoing). It could have been dismissed by the person who filed it or by the judge if the person who filed the case did not follow through.
    show if: 
      variable: previous_divorce
      is: "Yes"

---
id: earlier divorce not pending
event: earlier_divorce_not_pending
question: |
  Sorry
subquestion: |
  To use this program, your earlier divorce must not be pending (ongoing). The other divorce case must be dismissed before filing a new one.

   Click **Back** if you made a mistake. Or you can talk with a lawyer to discuss your options. Use [**Get Legal Help**](https://www.illinoislegalaid.org/get-legal-help) to find free or low-cost legal services in your area.
buttons:
  - Exit: exit
  - Restart: restart        
---
id: separation date
question: |
  When did you separate or start living apart?
subquestion: |
  You do not need to live at separate addresses to be "separated."
fields:
  - Separation date: separation_date
    datatype: BirthDate
    alMax: ${ today().format("yyyy-MM-dd") }
    alMin: ${ marriage_date.format("yyyy-MM-dd")}    
---
id: divorce grounds
question: |
  Have irreconcilable differences caused the irretrievalble breakdown of the marriage or civil union?
subquestion: |
  Select **Yes** if:
  
  * You and your spouse have tried to fix the problems in your marriage or civil union, but could not, or
  * The problems are so bad that trying to fix them is not best for your family.

  ${ collapse_template(grounds_help) }  
fields:
  - no label: divorce_grounds
    datatype: yesnoradio
---
template: grounds_help
subject: |
  **Learn more about irreconcilable differences**
content: |  
  **Irreconcilable differences** is the only reason required in Illinois for getting a divorce.

  If you have been separated for 6 months or more, no other proof is needed to qualify for a divorce.

  If you have been separated less than 6 months at the time of your divorce hearing you will have to show the judge that you and your spouse:

  * Separated because you cannot get along anymore, and
  * Tried to fix the problems in your marriage, but could not, or the problems are so bad that trying to fix them is not best for your family.
---
id: must be irreconcilable differences
event: must_have_irreconcilable_differences
question: |
  Sorry
subquestion: |
  To use this program, you and your spouse or partner must have irreconcilable differences that led to the irretrievable breakdown of the marriage or civil union.

  This means that you and your spouse have tried to fix the problems in your marriage or civil union, but could not. Or it could be that the problems are so bad that trying to fix them is not best for your family.
  
   Click **Back** if you made a mistake. Or you can talk with a lawyer to discuss your options. Use [**Get Legal Help**](https://www.illinoislegalaid.org/get-legal-help) to find free or low-cost legal services in your area.
buttons:
  - Exit: exit
  - Restart: restart  


---
id: hide address
question: |
  Do you want to keep your address hidden?
subquestion: |
  You do not need to list where you are staying on your court papers. You can use an address where you can receive court notices instead.
field: hide_address
choices:
  - Yes: True
  - No: False
---
id: get user address
question: |
  % if hide_address:
  What is your mailing address?
  % else:
  What is your home address?
  % endif
subquestion: |
  % if hide_address:
  **This address will appear on your court papers.** You may receive court notices and documents about your case at this address.
  % else:
  **This address will appear on your court papers.** If you do not want this, click **Back** to keep your address hidden.
  % endif
fields:
  - Street address: users[0].address.address
    address autocomplete: True
  - Address line 2: users[0].address.unit
    required: False
  - City: users[0].address.city
  - State: users[0].address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: users[0].address.zip
---
id: user residence county
question: |
  In which county do you live?
subquestion: |
  **Reminder:** You must file the divorce in the county where you or your spouse lives.

  ${ collapse_template(county_lookup_help) }
fields:
  - County: users[0].residence_county
    code:
      court_list._load_courts()["address_county"].unique()

---
id: your contact information
question: |
  What is your contact information?
subquestion: |
  The court or other parties might need to contact you about this case.

  **This information will appear on your court forms.**
  
  If you do not want to list a phone number on your forms, leave it blank.

  If you have an email address, you must list it. Be sure to check your email daily, otherwise you may miss important court documents or information about your case.

  ${ collapse_template(contact_info_help) }  
fields:  
  - Phone number: users[0].phone_number
    datatype: al_international_phone
    required: False
  - label: |
      Do you have an email address?
    field: users[0].has_email_address      
    datatype: yesnoradio
  - note: |
      This email address will appear on your court forms. Be sure to check 
      this email daily, otherwise you may miss important information about 
      your case.
    show if:
      variable: users[0].has_email_address
      is: True
  - Email address: users[0].email    
    datatype: email
    show if: 
      variable: users[0].has_email_address
      is: True
---
template: contact_info_help
subject: |
  **What if I don't want to list my email address?**
content: |  
  If you do not want to enter your personal email address, you can create a new email account to get email about your case.
  
  To make a new email account try one of these email services:
  
  * [**Gmail**](https://accounts.google.com/SignUp)
  * [**Outlook**](https://outlook.live.com/owa/?nlp=1&signup=1)
  * [**Yahoo**](https://login.yahoo.com/account/create?.lang=en-US&.intl=us)
---
id: birthdate
question: |
  When were you born?
fields:
  - Date of birth: users[0].birthdate
    datatype: BirthDate
    alMax: ${ today().format("yyyy-MM-dd") }
---
id: employment status
question: |
  Are you currently employed?
subquestion: |
  Check all that apply.
fields:
  - no label: users[0].emp_status
    datatype: checkboxes
    choices:
      - Yes: Yes
      - No: No
      - I receive Social Security, unemployment or other types of benefits.: ss
    none of the above: False
validation code: |
  if users[0].emp_status['Yes'] and users[0].emp_status['No']:
    validation_error("You cannot select both 'Yes' and 'No.' Please adjust your answers.", field="users[0].emp_status")
---
id: employer info
question: |
  % if j == 0:
  Tell us about your job
  % else:
  Tell us about your second job
  % endif
fields:
  - Job title: users[i].employers[j].job_title
    maxlength: 40    
  - Employer's name: users[i].employers[j].name.text
    maxlength: 40
  - Street address: users[i].employers[j].address.address
    address autocomplete: True
  - Address line 2: users[i].employers[j].address.unit
    required: False
  - City: users[i].employers[j].address.city
  - State: users[i].employers[j].address.state
    code: |
      states_list()
    default: IL
  - ZIP code: users[i].employers[j].address.zip
  - Phone number: users[i].employers[j].phone_number
    datatype: al_international_phone
    required: False
---
id: second job question
question: |
  Do you have another job?
subquestion: |
  So far you told us about your job as ${ users[0].employers[0].job_title } for this employer: ${users[0].employers[0].name.text }.
fields: 
  no label: users[0].has_second_job
  datatype: yesnoradio
---
sets:
  - users[0].aliases[0].first
  - users[0].aliases[0].last
  - users[0].aliases[0].middle
  - users[0].aliases[0].suffix
id: user former name
question: |
  Do you want to go back to a former or maiden name?
fields:
  - no label: users[0].use_former_name
    datatype: yesnoradio
  - note: |
      Enter your former or maiden name.
    show if:
      variable: users[0].use_former_name
      is: True
  - First name: users[0].aliases[0].first
    show if:
      variable: users[0].use_former_name
      is: True
  - Middle name: users[0].aliases[0].middle
    required: False
    show if:
      variable: users[0].use_former_name
      is: True
  - Last name: users[0].aliases[0].last
    show if:
      variable: users[0].use_former_name
      is: True
  - Suffix: users[0].aliases[0].suffix
    code: |
      name_suffix()
    required: False
    show if:
      variable: users[0].use_former_name
      is: True
---
id: spouse birthdate
question: |
  When was ${other_parties[0].name.full(middle="full")} born?
fields:
  - Date of birth: other_parties[0].birthdate
    datatype: BirthDate
    alMax: ${ today().format("yyyy-MM-dd") }
---
id: spouse lives in IL
question: |
  Does ${other_parties[0].name.full(middle="full")} live in Illinois?
fields:
  - no label: other_parties[0].is_resident
    datatype: yesnoradio  
---
id: spouse lives in IL for 90 days
question: |
  Has ${other_parties[0].name.full(middle="full")} lived in Illinois for longer than 90 days?
fields:
  - no label: other_parties[0].meets_90_day_requirement
    datatype: yesnoradio
---
id: know spouse address
question: |
  Do you know ${other_parties[0].name.full(middle="full")}'s current address?
fields:
  - no label: knows_resp_address
    datatype: yesnoradio
---
id: get spouse address
question: |
  What is ${other_parties[0].name.full(middle="full")}'s current address?
fields:
  - Street address: other_parties[0].address.address
    address autocomplete: True
  - Address line 2: other_parties[0].address.unit
    required: False
  - City: other_parties[0].address.city
  - State: other_parties[0].address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: other_parties[0].address.zip
---
id: spouse contact information
question: |
  What are ${other_parties[0].name.full(middle="full")}'s phone number and email address?
subquestion: |
  If you do not know, leave these blank.
fields:
  - Phone: other_parties[0].phone_number
    datatype: al_international_phone
    required: False
  - Email address: other_parties[0].email    
    datatype: email
    required: False      
---
id: spouse employment status
question: |
  Is ${other_parties[0].name.full(middle="full")} currently employed?
subquestion: |
  Check all that apply.
fields:
  - no label: other_parties[0].emp_status
    datatype: checkboxes
    choices:
      - Yes: Yes
      - No: No
      - They receive Social Security, unemployment or other types of benefits.: ss
      - I don't know.: idk
    none of the above: False
validation code: |
  if other_parties[0].emp_status['Yes'] and other_parties[0].emp_status['No']:
    validation_error("You cannot select both 'Yes' and 'No.' Please adjust your answers.", field="other_parties[0].emp_status")
  elif (other_parties[0].emp_status['Yes'] or other_parties[0].emp_status['No']) and other_parties[0].emp_status['idk']:
    validation_error("You cannot select both 'I don't know' and 'Yes' or 'No.' Please adjust your answers.", field="other_parties[0].emp_status")
---
id: spouse employer info
question: |
  % if j == 0:
  Tell us about ${other_parties[0].name.full(middle="full")}'s job
  % else:
  Tell us about ${other_parties[0].name.full(middle="full")}'s second job
  % endif
fields:
  - Job title: other_parties[i].employers[j].job_title
    maxlength: 40
  - Employer's name: other_parties[i].employers[j].name.text
    maxlength: 40
  - Street address: other_parties[i].employers[j].address.address
    address autocomplete: True
  - Address line 2: other_parties[i].employers[j].address.unit
    required: False
  - City: other_parties[i].employers[j].address.city
  - State: other_parties[i].employers[j].address.state
    code: |
      states_list()
    default: IL
  - ZIP code: other_parties[i].employers[j].address.zip
  - Phone number: other_parties[i].employers[j].phone_number
    datatype: al_international_phone
    required: False
---
id: spouse second job question
question: |
  Does ${other_parties[0].name.full(middle="full")} have another job?
subquestion: |
  So far you told us about ${other_parties[0].name.full(middle="full")}'s job as ${ other_parties[0].employers[0].job_title } for this employer: ${other_parties[0].employers[0].name.text }.
fields: 
  no label: other_parties[0].has_second_job
  datatype: yesnoradio
---
id: spouse active duty
question: |
  Is ${other_parties[0].name.full(middle="full")} currently on active duty as a member of the Armed Forces of the United States of America?
subquestion: |
  If your spouse is on active duty with any branch of the US military service, they must sign an *Entry of Appearance* form. This and other blank forms are available on the [**Illinois Courts website**](https://www.illinoiscourts.gov/forms/approved-forms/forms-circuit-court/divorce-child-support-maintenance/).
fields:
  - no label: other_parties[0].is_active_duty
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know.: idk
---
id: children intro
continue button field: children_intro
question: |
  Questions about children
subquestion: |
  The next screens will ask you about pregnancy and children. Based on your answers, the program will make the correct forms.

  **Note:** Even if you don't have any children together, the "Divorce with children" forms may be required. These forms are required if either you or your spouse is pregnant, and the unborn child is or could be a child of the marriage.
---
id: children debug
continue button field: children_debug
question: |
  DEBUG - Which forms - DEBUG
subquestion: |
  Based on your answers, the program will make:

  % if file_with_kids:
  *Petition for Divorce with Children* forms
  % else:
  *Petition for Divorce without Children* forms
  % endif

---
id: petitioner pregnant
question: |
  Pregnancy
fields:
  - Are you currently pregnant?: pet_is_pregnant
    datatype: yesnoradio
  - Is ${other_parties[0].name.full(middle="full")} the other parent of the unborn child?: pet_pregnant_resp_parent
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know.: I don't know.
    show if:
      variable: pet_is_pregnant
      is: True
---
id: respondent pregnant
question: |
  ${other_parties[0].name.full(middle="full")}'s pregnancy
fields:
  - Is ${other_parties[0].name.full(middle="full")} currently pregnant?: resp_is_pregnant
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know.: I don't know.
  - Are you the other parent of the unborn child?: resp_pregnant_pet_parent
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know.: I don't know.
    show if: 
      variable: resp_is_pregnant
      is: "Yes"
---
id: any children together
question: |
  Do you and ${other_parties[0].name.full(middle="full")} have any children together?
subquestion: |
  These can be children born to or adopted by you and ${other_parties[0].name.full(middle="full")}.

  These can also be adult children.
fields:
  - no label: any_children_together
    datatype: yesnoradio
---
id: children information
question: |
  Information about your children
subquestion: |
  The court needs information about your children with ${other_parties[0].name.full(middle="full")} to make sure they will be supported.

  **Note:** Illinois law has additional protections for children under 18 in a divorce. There will be more questions about them than older children.
 
  Check all that apply.
fields:
  - We gave birth to or adopted children who are: children_status
    datatype: checkboxes
    choices:
      - Younger than 18.: minors
      - 18 or older but are still in school or have a disability.: support
      - Adults who do not need support to attend school or because of a disability.: adults
    none of the above: False
validation code: |
  if children_status.all_false():
    validation_error("You must select one option. If you made a mistake, click < Back.", field="children_status")
---
code: |
  children[i].name.first
  children[i].birthdate
  children[i].is_of_marriage
  children[i].has_a_disability
  children[i].is_in_school
  if children[i].age_in_years() < 18:
    children[i].is_resident
    children[i].address.address
    if children[i].has_former_address:
      children[i].former_addresses.gather()
  children[i].complete = True
---
code: |
  children[i].former_addresses[j].address
  children[i].former_addresses[j].complete = True
---
code: |
  if children.number_gathered() >= 7:
    children.there_is_another = False
---
code: |
  if children[i].former_addresses.number_gathered() >= 4:
    children[i].former_addresses.there_is_another = False
---
reconsider: True
code: |
  for child in children:
    if child.age_in_years() < 18:
      child.is_resident
      child.address.address
      if child.has_former_address:
        child.former_addresses.gather()
  
  child_detail_update = True
---
code: |
  adult_children[i].name.first
  adult_children[i].birthdate
  adult_children[i].complete = True
---
sets:
  - children[0].name.first
  - children[0].name.middle
  - children[0].name.last
  - children[0].name.suffix
id: name of first child with respondent
question: |
  Who is your child with ${other_parties[0].name.full(middle="full")}?
subquestion: |
  You only need to include children that you and your spouse gave birth to or adopted who are:
  
  * Younger than 18, or
  * 18 or older but are still in school or have a disability.
fields:
  - code: |
      children[0].name_fields()
---
id: names of other children with respondent
sets:
  - children[i].name.first
  - children[i].name.middle
  - children[i].name.last
  - children[i].name.suffix
question: |
  Who is your ${ ordinal(i) } child with ${other_parties[0].name.full(middle="full")}?
subquestion: |
  You only need to include children that you and your spouse gave birth to or adopted who are:
  
  * Younger than 18, or
  * 18 or older but are still in school or have a disability.
fields:
  - code: |
      children[i].name_fields()
---
id: any other children with respondent
question: |
  Do you have another child with ${other_parties[0].name.full(middle="full")}?
subquestion: |
  So far you have told us about ${comma_and_list(children.full_names())}.

  The divorce forms have room for up to seven children. You only need to include children that you and your spouse gave birth to or adopted who are:
  
  * Younger than 18, or
  * 18 or older but are still in school or have a disability.
fields:
  - "Anyone else?": children.there_is_another
    datatype: yesnoradio
---
id: child age
question: |
  When was ${children[i].name.full(middle="full")} born?
fields:
  - Birth date: children[i].birthdate
    datatype: ThreePartsDate
    alMax: ${ today().format("yyyy-MM-dd") }
---
id: is child of marriage
question: |
  Was ${children[i].name.full(middle="full")} born or adopted after the marriage?
fields: 
  - ${children[i].name.full(middle="full")} was: children[i].is_of_marriage
    datatype: radio
    choices:
      - Born or adopted **before** the marriage.: False
      - Born or adopted **after** the marriage.: True
---
id: does child have a disability
question: |
  Does ${children[i].name.full(middle="full")} have a disability?
fields:
  - no label: children[i].has_a_disability
    datatype: yesnoradio
---
id: is child in school
question: |
  Is ${children[i].name.full(middle="full")} in school?
fields:
  - no label: children[i].is_in_school
    datatype: yesnoradio
---
id: child address
question: |
  Has ${children[i].name.full(middle="full")} lived in Illinois for the last 6 months or more?
fields:
  - Illinois resident for 6 months or more?: children[i].is_resident
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know.: I don't know.
---
id: child address
question: |
  What is ${children[i].name.full(middle="full")}'s current address?
subquestion: |
  **This address will appear on your court papers.** 
fields:
  - Street address: children[i].address.address
    address autocomplete: True
  - Address line 2: children[i].address.unit
    required: False
  - City: children[i].address.city
  - State: children[i].address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: children[i].address.zip
---
id: does child have former address
question: |
  Has ${children[i].name.full(middle="full")} lived at any other addresses in the last five years?
subquestion: |
  This does not include their current address:
  
  ${ children[i].address.on_one_line(bare=True) }
fields:
  - no label: children[i].has_former_address
    datatype: yesnoradio
---
id: child former address detail
question: |
  % if j==0:
  Tell us about ${children[i].name.full(middle="full")}'s former address
  % else:
  Tell us about ${children[i].name.full(middle="full")}'s ${ ordinal(j) } former address
  % endif  
subquestion: |
  You only need to include addresses where they lived in the past five years.

    **This address will appear on your court papers.** 
fields:
  - Street address: children[i].former_addresses[j].address
    address autocomplete: True
  - Address line 2: children[i].former_addresses[j].unit
    required: False
  - City: children[i].former_addresses[j].city
  - State: children[i].former_addresses[j].state
    code: |
      states_list()
    default: IL      
  - ZIP code: children[i].former_addresses[j].zip
---
id: more former addresses
question: |
  Does ${children[i].name.full(middle="full")} have any other addresses from the past five years?
subquestion: |
  The court forms have space for up to four former addresses.
  
  So far you told us about:

  % for former_address in children[i].former_addresses:
    * ${ former_address.on_one_line(bare=True) }
  % endfor
fields:
  - no label: children[i].former_addresses.there_is_another
    datatype: yesnoradio
---
code: |
  if children[i].former_addresses.number_gathered() >= 4:
    children[i].former_addresses.there_is_another = False
  
---
sets:
  - adult_children[0].name.first
  - adult_children[0].name.middle
  - adult_children[0].name.last
  - adult_children[0].name.suffix
id: name of first adult child with respondent
question: |
  Who is your adult child with ${other_parties[0].name.full(middle="full")}?
subquestion: |
  You only need to include adult children that you and your spouse gave birth to or adopted who are adults. These are adult children who do not need support to attend school or because of a disability.
fields:
  - code: |
      adult_children[0].name_fields()
---
id: names of other adult children with respondent
sets:
  - adult_children[i].name.first
  - adult_children[i].name.middle
  - adult_children[i].name.last
  - adult_children[i].name.suffix
question: |
  Who is your ${ ordinal(i) } adult child with ${other_parties[0].name.full(middle="full")}?
subquestion: |
  You only need to include adult children that you and your spouse gave birth to or adopted who are adults. These are adult children who do not need support to attend school or because of a disability.
fields:
  - code: |
      adult_children[i].name_fields()
---
id: any other adult children with respondent
question: |
  Do you have another adult child with ${other_parties[0].name.full(middle="full")}?
subquestion: |
  So far you have told us about ${comma_and_list(adult_children.full_names())}.

  You only need to include adult children that you and your spouse gave birth to or adopted who are adults. These are adult children who do not need support to attend school or because of a disability.
fields:
  - "Anyone else?": adult_children.there_is_another
    datatype: yesnoradio
---
reconsider: True
code: |
  formatted_adult_child_list = [f"{child.name.full(middle='full')} (age {child.age_in_years()})" for child in adult_children]

---
id: adult child age
question: |
  When was ${adult_children[i].name.full(middle="full")} born?
fields:
  - Birth date: adult_children[i].birthdate
    datatype: ThreePartsDate
    alMax: ${ (current_datetime() - date_interval(years=18)).format("yyyy-MM-dd") }
---
id: has other kids during marriage
question: |
  Did you or ${other_parties[0].name.full(middle="full")} have a child by birth or adoption with someone else since the date of marriage?
fields:
  - no label: has_other_kids_during_marriage
    datatype: yesnoradio

---
code: |
  outside_children[i].name.first
  outside_children[i].complete = True
---
code: |
  if outside_children.number_gathered() >= 4:
    outside_children.there_is_another = False
---
sets:
  - outside_children[0].name.first
  - outside_children[0].name.middle
  - outside_children[0].name.last
  - outside_children[0].name.suffix
id: info about first child born or adopted outside marriage
question: |
  Information about child born or adopted outside of marriage
subquestion: |
  You only need to include children that you or ${other_parties[0].name.full(middle="full")} have had by birth or adoption with someone else since the date of marriage.
fields:
  - code: |
      outside_children[0].name_fields()
  - Who's child is this?: outside_children[0].parent
    datatype: radio    
    choices:
      - My child: "My child"
      - ${other_parties[0].name.full(middle="full")}'s child: "My spouse's child"
---
id: info about other children born or adopted outside marriage
sets:
  - outside_children[i].name.first
  - outside_children[i].name.middle
  - outside_children[i].name.last
  - outside_children[i].name.suffix
question: |
  Information about a ${ ordinal(i) } child born or adopted outside of marriage
subquestion: |
  You only need to include children that you or ${other_parties[0].name.full(middle="full")} have had by birth or adoption with someone else since the date of marriage.
fields:
  - code: |
      outside_children[i].name_fields()
  - Who's child is this?: outside_children[i].parent
    datatype: radio    
    choices:
      - My child: "My child"
      - ${other_parties[0].name.full(middle="full")}'s child: "My spouse's child"
---
id: any other children outside marriage
question: |
  Did you or ${other_parties[0].name.full(middle="full")} have another child by birth or adoption with someone else since the date of marriage?
subquestion: |
  So far you have told us about ${comma_and_list(outside_children.full_names())}.

  The divorce forms have room for up to four children. You only need to include children that you or ${other_parties[0].name.full(middle="full")} have had by birth or adoption with someone else since the date of marriage.
fields:
  - "Anyone else?": outside_children.there_is_another
    datatype: yesnoradio

---
id: involvement in other custody case about children
question: |
  Have you been involved in another court case about custody or visitation with any of the children you have with ${other_parties[0].name.full(middle="full")}?
fields:
  - no label: other_custody_case
    datatype: yesnoradio

---
code: |
  custody_cases[i].name.text
  custody_cases[i].county
  custody_cases[i].state
  custody_cases[i].kids_involved
  custody_cases[i].final_order
  custody_cases[i].complete = True
---
code: |
  if custody_cases.number_gathered() >= 3:
    custody_cases.there_is_another = False
---
id: info about first custody case
question: |
  Information about another custody or visitation case
subquestion: |
  You only need to include custody or visitation cases that involve one or more children you have with ${other_parties[0].name.full(middle="full")}.

  This information should be found on the court papers from the other case.
fields:
  - Case number: custody_cases[0].name.text
    maxlength: 25
  - State where case filed: custody_cases[0].state
    code: |
      states_list() 
  - County where case filed: custody_cases[0].county
    code: |
      court_list._load_courts()["address_county"].unique()      
    js show if: |
      val('custody_cases[0].state') === "IL"
  - County where case filed: custody_cases[0].county
    maxlength: 25
    js show if: |
      val('custody_cases[0].state') != "IL"
  - Names of children involved in the case: custody_cases[0].kids_involved
    maxlength: 45
    help: |
      If more than one child, separate names by commas.
  - Has a final order been entered in the case?: custody_cases[0].final_order
    datatype: yesnoradio
  - Date of final order: custody_cases[0].final_order_date
    datatype: ThreePartsDate
    alMax: ${ today().format("yyyy-MM-dd") }
    show if:
      variable: custody_cases[0].final_order
      is: True
---
id: info about other custody cases
question: |
  Information about a ${ ordinal(i) } custody or visitation case
subquestion: |
  You only need to include custody or visitation cases that involve one or more children you have with ${other_parties[0].name.full(middle="full")}.

  This information should be found on the court papers from the other case.  
fields:
  - Case number: custody_cases[i].name.text
    maxlength: 25
  - State where case filed: custody_cases[i].state
    code: |
      states_list() 
  - County where case filed: custody_cases[i].county
    code: |
      court_list._load_courts()["address_county"].unique()      
    js show if: |
      val('custody_cases[i].state') === "IL"
  - County where case filed: custody_cases[i].county
    maxlength: 25
    js show if: |
      val('custody_cases[i].state') != "IL"
  - Names of children involved in the case: custody_cases[i].kids_involved
    maxlength: 45
    help: |
      If more than one child, separate names by commas.
  - Has a final order been entered in the case?: custody_cases[i].final_order
    datatype: yesnoradio
  - Date of final order: custody_cases[i].final_order_date
    datatype: ThreePartsDate
    alMax: ${ today().format("yyyy-MM-dd") }
    show if:
      variable: custody_cases[i].final_order
      is: True
---
id: any other custody cases
question: |
  Have you been involved in any other court cases about custody or visitation with any of the children you have with ${other_parties[0].name.full(middle="full")}?
subquestion: |
  So far you have told us about:

  % for case in custody_cases:
  * Case number: ${case.name.text} in ${case.county}, ${case.state}
  % endfor  

  The divorce forms have room for up to three cases. You only need to include custody or visitation cases that involve one or more children you have with ${other_parties[0].name.full(middle="full")}.
fields:
  - "Any other cases?": custody_cases.there_is_another
    datatype: yesnoradio
---
id: another court case that impacts children
question: |
  Do you know of another court case, not custody or visitation, that might affect any of the children you have with ${other_parties[0].name.full(middle="full")}?
subquestion: |
  These include adoption, juvenile, or Order of Protection cases. There could be other cases, too. You can enter details about the cases that might affect your children on the next screens.
fields:
  - no label: other_case_involving_kids
    datatype: yesnoradio
---
code: |
  other_cases[i].name.text
  other_cases[i].county
  other_cases[i].state
  other_cases[i].kids_involved
  other_cases[i].final_order
  other_cases[i].type
  other_cases[i].complete = True
---
code: |
  if other_cases.number_gathered() >= 3:
    other_cases.there_is_another = False
---
id: info about first other case
question: |
  Information about another case
subquestion: |
  You only need to include cases that involve one or more children you have with ${other_parties[0].name.full(middle="full")} that **are not** custody or visitation cases. 

  This information should be found on the court papers from the other case.
fields:
  - Case number: other_cases[0].name.text
    maxlength: 25
  - State where case filed: other_cases[0].state
    code: |
      states_list() 
  - County where case filed: other_cases[0].county
    code: |
      court_list._load_courts()["address_county"].unique()      
    js show if: |
      val('other_cases[0].state') === "IL"
  - County where case filed: other_cases[0].county
    maxlength: 25
    js show if: |
      val('other_cases[0].state') != "IL"
  - Names of children involved in the case: other_cases[0].kids_involved
    maxlength: 45
    help: |
      If more than one child, separate names by commas.
  - Has a final order been entered in the case?: other_cases[0].final_order
    datatype: yesnoradio
  - Date of final order: other_cases[0].final_order_date
    datatype: ThreePartsDate
    alMax: ${ today().format("yyyy-MM-dd") }
    show if:
      variable: other_cases[0].final_order
      is: True
  - Type of case: other_cases[0].type
    datatype: radio
    choices:
      - Adoption: Adoption
      - Juvenile: Juvenile
      - Order of Protection: Order of Protection
      - Other: Other
  - Other type of case involving your children: other_cases[0].other_type
    maxlength: 30
    show if:
      variable: other_cases[0].type
      is: 'Other'
---
id: info about other cases
question: |
  Information about a ${ ordinal(i) } other case
subquestion: |
  You only need to include cases that involve one or more children you have with ${other_parties[0].name.full(middle="full")} that **are not** custody or visitation cases. 

  This information should be found on the court papers from the other case.  
fields:
  - Case number: other_cases[i].name.text
    maxlength: 25
  - State where case filed: other_cases[i].state
    code: |
      states_list() 
  - County where case filed: other_cases[i].county
    code: |
      court_list._load_courts()["address_county"].unique()      
    js show if: |
      val('other_cases[i].state') === "IL"
  - County where case filed: other_cases[i].county
    maxlength: 25
    js show if: |
      val('other_cases[i].state') != "IL"
  - Names of children involved in the case: other_cases[i].kids_involved
    maxlength: 45
    help: |
      If more than one child, separate names by commas.
  - Has a final order been entered in the case?: other_cases[i].final_order
    datatype: yesnoradio
  - Date of final order: other_cases[i].final_order_date
    datatype: ThreePartsDate
    alMax: ${ today().format("yyyy-MM-dd") }
    show if:
      variable: other_cases[i].final_order
      is: True
  - Type of case: other_cases[i].type
    datatype: radio
    choices:
      - Adoption: Adoption
      - Juvenile: Juvenile
      - Order of Protection: Order of Protection
      - Other: Other
  - Other type of case involving your children: other_cases[i].other_type
    maxlength: 30
    show if:
      variable: other_cases[i].type
      is: 'Other'
---
id: any other cases
question: |
  Have you been involved in any other court cases with any of the children you have with ${other_parties[0].name.full(middle="full")}?
subquestion: |
  So far you have told us about:

  % for case in other_cases:
  * Case number: ${case.name.text} in ${case.county}, ${case.state}
  % endfor  

  The divorce forms have room for up to three cases. You only need to include cases that involve one or more children you have with ${other_parties[0].name.full(middle="full")} that **are not** custody or visitation cases.
fields:
  - "Any other cases?": other_cases.there_is_another
    datatype: yesnoradio
---
id: another custodian
question: |
  Do you know of another person who has custody or rights to any of the children you have with ${other_parties[0].name.full(middle="full")}?
subquestion: |
  This person could have:

  * Physical custody of one or more of your children, or
  * Rights to legal custody, physical custody, or visitation with your children.
fields:
  - no label: other_custodian
    datatype: yesnoradio
---
code: |
  custodians[i].name.first
  custodians[i].complete = True
---
code: |
  if custodians.number_gathered() >= 3:
    custodians.there_is_another = False
---
sets:
  - custodians[0].name.first
  - custodians[0].name.middle
  - custodians[0].name.last
  - custodians[0].name.suffix
id: info about first custodian
question: |
  Information about other person with custody or rights to your children
subquestion: |
  You only need to include people who have:

  * Physical custody of one or more of your children you have with ${other_parties[0].name.full(middle="full")}, or
  * Rights to legal custody, physical custody, or visitation with your children you have with ${other_parties[0].name.full(middle="full")}.
fields:
  - code: |
      custodians[0].name_fields()
  - Street address: custodians[0].address.address
    address autocomplete: True
  - Address line 2: custodians[0].address.unit
    required: False
  - City: custodians[0].address.city
  - State: custodians[0].address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: custodians[0].address.zip
  - Names of children involved: custodians[0].kids_involved
    maxlength: 45
    help: |
      If more than one child, separate names by commas.
---
id: info about other custodians
sets:
  - custodians[i].name.first
  - custodians[i].name.middle
  - custodians[i].name.last
  - custodians[i].name.suffix
question: |
  Information about a ${ ordinal(i) } other person with custody or rights to your children
subquestion: |
  You only need to include people who have:

  * Physical custody of one or more of your children you have with ${other_parties[0].name.full(middle="full")}, or
  * Rights to legal custody, physical custody, or visitation with your children you have with ${other_parties[0].name.full(middle="full")}.
fields:
  - code: |
      custodians[i].name_fields()
  - Street address: custodians[i].address.address
    address autocomplete: True
  - Address line 2: custodians[i].address.unit
    required: False
  - City: custodians[i].address.city
  - State: custodians[i].address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: custodians[i].address.zip
  - Names of children involved: custodians[i].kids_involved
    maxlength: 45
    help: |
      If more than one child, separate names by commas.
---
id: any other custodians
question: |
  Do you know of another person who has custody or rights to any of the children you have with ${other_parties[0].name.full(middle="full")}?
subquestion: |
  So far you have told us about ${comma_and_list(custodians.complete_elements().full_names())}.

  The divorce forms have room for up to three people. You only need to include people who have:

  * Physical custody of one or more of your children you have with ${other_parties[0].name.full(middle="full")}, or
  * Rights to legal custody, physical custody, or visitation with your children you have with ${other_parties[0].name.full(middle="full")}.
fields:
  - "Anyone else?": custodians.there_is_another
    datatype: yesnoradio
---
id: children lived with another adult in last 5 years
question: |
  Have any of your children with ${other_parties[0].name.full(middle="full")} lived with another adult without either parent in the last five years?
fields:
  - no label: kids_lived_with_other_adult
    datatype: yesnoradio
---
code: |
  other_adults[i].name.first
  other_adults[i].complete = True
---
code: |
  if other_adults.number_gathered() >= 3:
    other_adults.there_is_another = False
---
sets:
  - other_adults[0].name.first
  - other_adults[0].name.middle
  - other_adults[0].name.last
  - other_adults[0].name.suffix
id: info about first custodian
question: |
  Information about other adult your children lived with in last five years
subquestion: |
  You only need to include this information if any of your children with ${other_parties[0].name.full(middle="full")} lived with another adult without either parent in the last five years.
fields:
  - code: |
      other_adults[0].name_fields()
  - Street address: other_adults[0].address.address
    address autocomplete: True
  - Address line 2: other_adults[0].address.unit
    required: False
  - City: other_adults[0].address.city
  - State: other_adults[0].address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: other_adults[0].address.zip
  - Names of children involved: other_adults[0].kids_involved
    maxlength: 45
    help: |
      If more than one child, separate names by commas.
  - This person's relationship to your children: other_adults[0].relationship
    maxlength: 35
---
id: info about other other_adults
sets:
  - other_adults[i].name.first
  - other_adults[i].name.middle
  - other_adults[i].name.last
  - other_adults[i].name.suffix
question: |
    Information about a ${ ordinal(i) } other adult your children lived with in last five years
subquestion: |
  You only need to include this information if any of your children with ${other_parties[0].name.full(middle="full")} lived with another adult without either parent in the last five years.
fields:
  - code: |
      other_adults[i].name_fields()
  - Street address: other_adults[i].address.address
    address autocomplete: True
  - Address line 2: other_adults[i].address.unit
    required: False
  - City: other_adults[i].address.city
  - State: other_adults[i].address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: other_adults[i].address.zip
  - Names of children involved: other_adults[i].kids_involved
    maxlength: 45
    help: |
      If more than one child, separate names by commas.
  - This person's relationship to your children: other_adults[i].relationship
    maxlength: 35
---
id: any other other_adults
question: |
  Have any of your children with ${other_parties[0].name.full(middle="full")} lived with another adult without either parent in the last five years?
subquestion: |
  So far you have told us about ${comma_and_list(other_adults.complete_elements().full_names())}.

  The divorce forms have room for up to three people. You only need to include this information if any of your children with ${other_parties[0].name.full(middle="full")} lived with another adult without either parent in the last five years.
fields:
  - "Anyone else?": other_adults.there_is_another
    datatype: yesnoradio
---
id: child support currently being paid
question: |
  Is any child support currently being paid for the children of the marriage?
fields:
  - no label: current_child_support
    datatype: yesnoradio
---
id: want child support
question: |
  Do you want the court to order child support for for the children of the marriage?
subquestion: |
  You can select **Yes** if you want ${other_parties[0].name.full(middle="full")} to pay or if you think you will pay child support.
  
  Selecting **Yes** will give you the forms to help set up a child support order.
fields:
  - no label: want_child_support
    datatype: yesnoradio
---
id: current parenting time schedule
question: |
  Is there currently a schedule for when the children are with you or ${other_parties[0].name.full(middle="full")}?
subquestion: |
  This is often called a Parenting Time schedule. It is sometimes part of a Parenting Plan.
fields:
  - no label: current_pt_schedule
    datatype: yesnoradio
---
id: parenting plan info
continue button field: parenting_plan_info
question: |
  About Parenting Plans
subquestion: |
  A Parenting Plan lists who is responsible for decision-making for the children and includes a schedule for when the children are with you and when they are with ${other_parties[0].name.full(middle="full")}.

  The law requires that you file a suggested Parenting Plan **within 120 days** of the date your petition is filed or the date your spouse was notified. You and ${other_parties[0].name.full(middle="full")} can each file your own Parenting Plan, or you can file an agreed Parenting Plan.

  A judge may not require a Parenting Plan to be filed, so ask the judge during your first court date whether they want you to file one.
  
  Use ILAO's [**Parenting Plan Easy Form**](https://www.illinoislegalaid.org/node/30906) to create the forms you need.
---
id: parenting class info
continue button field: parenting_class_info
question: |
  Parenting class required
subquestion: |
  The law requires that parents complete a class about parenting and divorce when they have minor children.
  
  Ask the **{Circuit Clerk}** for the name and contact information for the court approved class you must attend.
  
  There is normally a fee for the class. If you have an Order for Waiver of Court Fees you do not have to pay the fee. You can register for this class as soon as you file your divorce or wait until the judge orders you to go.
terms:
  Circuit Clerk: |
      The **Circuit Clerk** is the clerk’s office is where you will file your divorce forms. The Circuit Clerk will:
      
      * Accept your divorce forms,
      * Collect fees for filing your divorce case, and
      * Help schedule court dates.
      
      The Circuit Clerk cannot give you legal advice. 
---
id: children and taxes
question: |
  How will the children be claimed as dependents on state and federal tax returns?
subquestion: |
  Select the different options below to see what each means.
fields:
  - no label: taxes_choice
    datatype: radio
    choices:
      - One parent will claim all children: all
      - Parents will take turns on even and odd tax years: turns
      - Parents will split how many children they claim on their taxes: split
      - I don't know what I want right now. I will decide later.: idk
  - Who will claim the children as dependents for all tax years?: tax_all
    datatype: radio
    choices:
      - Me: Me
      - ${other_parties[0].name.full(middle="full")}: Them
    show if:
      variable: taxes_choice
      is: "all"
  - Which tax years do you want to claim the children as dependents?: tax_turns
    datatype: radio
    choices:
      - Even: even
      - Odd: odd
    help: |
      ${other_parties[0].name.full(middle="full")} will get to claim them on the other tax years.
    show if:
      variable: taxes_choice
      is: "turns"
  - note: |
      Both you and ${other_parties[0].name.full(middle="full")} will get to claim one-half of the children each tax year.
    show if:
      variable: taxes_choice
      is: "split"   
  - If odd number of children, who will claim the children in **odd** tax years?: tax_split_odd
    datatype: radio
    choices:
      - Me: Me
      - ${other_parties[0].name.full(middle="full")}: Them
    help: |
      As the children get older, there may be a time when an odd number of them are dependents.
    show if:
      variable: taxes_choice
      is: "split"      
  - If odd number of children, who will claim the children in **even** tax years?: tax_split_even
    datatype: radio
    choices:
      - Me: Me
      - ${other_parties[0].name.full(middle="full")}: Them
    help: |
      As the children get older, there may be a time when an odd number of them are dependents.
    show if:
      variable: taxes_choice
      is: "split"      
---
reconsider: True
code: |
  file_with_kids = False
  if pet_is_pregnant:
    if pet_pregnant_resp_parent != "No":
      file_with_kids = True
  if resp_is_pregnant == "Yes":
    if resp_pregnant_pet_parent != "No":
      file_with_kids = True
  # this will need work  
  if any_children_together:
    if children_status['minors'] or children_status['support']: 
      file_with_kids = True
---
reconsider: True
code: |
  minor_children_list.clear()
  any_minor_children = False
  support_children_list.clear()
  any_support_children = False
  
  for child in children:
    if child.age_in_years() < 18:
      minor_children_list.append(child)
      any_minor_children = True
    else:
      support_children_list.append(child)
      any_support_children = True

  build_child_lists = True
---
id: current maintenance
question: |
  Is maintenance (alimony) currently being paid from one spouse to the other?
fields:
  - no label: current_maintenance
    datatype: yesnoradio
---
id: want maintenance
question: |
  Do you want ${other_parties[0].name.full(middle="full")} to pay you maintenance (alimony)?
subquestion: |
  A judge can make one spouse pay the other spouse money on an ongoing basis after a divorce. This is called "maintenance." It used to be called "spousal support" or "alimony."
  
  To learn more, read ILAO's article, [**What are maintenance payments after a divorce?**](https://www.illinoislegalaid.org/node/30356)
fields:
  - no label: want_maintenance
    datatype: yesnoradio


---
id: debts intro
continue button field: debts_intro
question: |
  Debts
subquestion: |
  "Marital debt" means debts that a couple takes on during their marriage. Spouses are responsible for each other's expenses for the family during their marriage.

  * Marital debt will be divided in the divorce. If you and ${other_parties[0].name.full(middle="full")} can't agree how it will be divided, the judge will decide for you. You can also use a mediator to help you decide.
  * Your divorce Petition will ask for a fair division of the marital debts obtained during the marriage/civil union.
  
  "Non-marital debts" are debts that you or ${other_parties[0].name.full(middle="full")} acquired outside the marriage. Each party will be assigned their own non-marital debt.

  * Your divorce Petition will ask that each party be assigned their non-marital/non-civil union debt.
  
  **Note:** You do not have to enter the details of the debts now. The information will be listed on the divorce judgment, which is used at the end of the case.

  To learn more, read ILAO's article about [**dividing property and debt in a divorce**](https://www.illinoislegalaid.org/node/30326).
---
id: include debts
question: |
  Do you want to add information about debts?
subquestion: |
  If you enter details about the debts now, they will be listed on the draft form of the final divorce judgment.
fields:
  - no label: include_debts
    datatype: yesnoradio
---
id: more debts
question: |
  Do you want to list any other marital debts?
subquestion: |
  So far you have told us about:

  % for debt in debts:
    * $${ thousands( debt.amount, show_decimals=True) } owed to ${ debt.name.text}
  % endfor

  You can list up to 14 marital debts.
fields:
  - Add another?: debts.there_is_another
    datatype: yesnoradio
---
id: debt information
question: |
  Details for the ${ordinal(i)} marital debt 
fields:
  - Name of creditor: debts[i].name.text
    maxlength: 45
    help: |
      The creditor is the company, institution, or person you owe money to.
  - Total amount owed: debts[i].amount
    datatype: currency
    min: 0
    required: False
  - How will this be divided?: debts[i].payment_division
    datatype: radio
    choices:
      - I will pay for all of it (100%).: Me
      - ${other_parties[0].name.full(middle="full")} will pay for all of it (100%).: them
      - Each of us will pay some of it. (Enter % below): split
      - I don't know. I will decide later.: idk
  - What percent of the debt will you pay?: debts[i].pet_percent
    help: |
      Enter the percent you want to pay from 1-99%. ${other_parties[0].name.full(middle="full")} will pay the other %.
      
      For example, if you want to pay half, enter 50%. ${other_parties[0].name.full(middle="full")} will pay the other half.
    datatype: integer
    min: 1
    max: 99
    show if:
      variable: debts[i].payment_division
      is: "split"
---
code: |
  debts[i].name.text
  debts[i].complete = True 
---
code: |
  if debts.number_gathered() == 14:
    debts.there_is_another = False
---
id: unlisted debts
question: |
  How do you want other marital debts to be divided?
subquestion: |
  If there are other marital debts you did not list, they can be divided.

  **Note:** You can select more than one of the top two options.
fields:
  - no label: unlisted_debts
    datatype: checkboxes
    choices:
      - Each of us will be responsible for 50% of each joint debt.: joint
        help: |
          Joint debts are debts that are in both your and ${other_parties[0].name.full(middle="full")}'s name.
      - Each of us will pay all of the debts in their own name.: name
    none of the above: |
      I don't know. I will decide later.
---
id: user non-marital debts
question: |
  Do you want to list your non-marital debts?
subquestion: |
  "Non-marital debts" are debts that you acquired outside the marriage. These can include:

  * Debts you owned or acquired before marriage,
  * Debts that you got after a legal separation, or
  * Debts specifically excluded in an agreement between the spouses (for example, a pre-nuptial agreement).

  Your divorce Petition will ask that each party be assigned their non-marital/non-civil union debt.
  
  **Note:** You do not have to enter the details of your non-marital debts now. The information will be listed on the divorce judgment, which is used at the end of the case.

  To learn more, read ILAO's article about [**dividing property and debt in a divorce**](https://www.illinoislegalaid.org/node/30326).
fields:
  - Include your non-marital debts?: pet_has_nonmarital_debts
    datatype: yesnoradio
  - List your non-marital debts: pet_nonmarital_debts
    input type: area
    rows: 3
    maxlength: 100
    show if:
      variable: pet_has_nonmarital_debts
      is: True
---
id: respondent non-marital debts
question: |
  Do you want to list ${other_parties[0].name.full(middle="full")}'s non-marital debts?
subquestion: |
  "Non-marital debts" are debts that ${other_parties[0].name.full(middle="full")} acquired outside the marriage. These can include:

  * Debts ${other_parties[0].name.full(middle="full")} owned or acquired before marriage,
  * Debts that ${other_parties[0].name.full(middle="full")} got after a legal separation, or
  * Debts specifically excluded in an agreement between the spouses (for example, a pre-nuptial agreement).

    Your divorce Petition will ask that each party be assigned their non-marital/non-civil union debt.
  
  **Note:** You do not have to enter the details of ${other_parties[0].name.full(middle="full")}'s non-marital debts now. The information will be listed on the divorce judgment, which is used at the end of the case.

  To learn more, read ILAO's article about [**dividing property and debt in a divorce**](https://www.illinoislegalaid.org/node/30326).
fields:
  - Include ${other_parties[0].name.full(middle="full")}'s non-marital debts?: resp_has_nonmarital_debts
    datatype: yesnoradio
  - List ${other_parties[0].name.full(middle="full")}'s non-marital debts: resp_nonmarital_debts
    input type: area
    rows: 3
    maxlength: 100
    show if:
      variable: resp_has_nonmarital_debts
      is: True

---
id: property intro
continue button field: property_intro
question: |
  Property and accounts
subquestion: |
  "Marital property" is any property or money that either spouse got during the marriage. It includes real estate, personal property, bank accounts, and pets.

  * Marital property will be divided in the divorce. If you and ${other_parties[0].name.full(middle="full")} can't agree how it will be divided, the judge will decide for you. You can also use a mediator to help you decide.
  * Your divorce Petition will ask for a fair division of the marital/civil union property.
  
  "Non-marital property" is property that you or ${other_parties[0].name.full(middle="full")} got outside the marriage. Your divorce Petition will ask that each party gets to keep all of their non-marital/non-civil union property. Non-marital property includes:
  
  * Property owned or acquired before marriage,
  * Property received as a gift, or an inheritance, or left to the person in a will,
  * Property received by the spouse after a legal separation,
  * Property specifically excluded in an agreement between the spouses (for example, a pre-nuptial agreement),
  * Property received by a court judgment awarded to a spouse from the other spouse, or
  * Property received in exchange for any of the above.

  **Note:** You do not have to enter the details of the property now. The information will be listed on the divorce judgment, which is used at the end of the case.

  To learn more, read ILAO's article about [**dividing property and debt in a divorce**](https://www.illinoislegalaid.org/node/30326).
---
id: include personal property and bank accounts
question: |
  Do you want to add information about personal property and bank accounts?
subquestion: |
  Personal property is things like cars, furniture, electronics, household items, or keepsakes.
  
  These will be listed on the draft form of the final divorce judgment. You can say what property goes to each person. This is not final. The judge may decide differently, or you may reach an different agreement on how to divide the property.
  
  Select **Yes** if you want to add information about property in your own name, pets, how property exchanges will be handled, or anything else.

  **Note:** This section does not include retirement accounts. Those will be asked about later.
fields:
  - no label: include_property
    datatype: yesnoradio
---
id: keep property in own name
question: |
  Do you want each person to keep the property and bank accounts in their own name or possession?
subquestion: |
  You can also explain how property and accounts will be divided on the next screens.

  If you aren't sure, select **No**.
fields:
  - no label: property_keep
    datatype: yesnoradio

---
id: more property
question: |
  Do you want to list any other property or accounts?
subquestion: |
  So far you have told us about:

  % for item in property_list:
    * ${ item.name.text}
  % endfor

  You can list up to 14 items of property or bank accounts.
fields:
  - Add another?: property_list.there_is_another
    datatype: yesnoradio
---
id: property information
question: |
  Details for the ${ordinal(i)} property or account
subquestion: |
  **Note:** Do not list any account numbers. Also, you can list pets on another screen.
fields:
  - Description of the property or account: property_list[i].name.text
    maxlength: 45
    help: |
      You can list a group of items like "bedroom furniture" or "kitchen items." If you are listing a car, describe things like make and model. For example: Chevy Malibu.
  - Who do you want to get this property or account?: property_list[i].party
    datatype: radio
    choices:
      - Me: pet
      - ${other_parties[0].name.full(middle="full")}: res
---
code: |
  property_list[i].name.text
  property_list[i].complete = True 
---
code: |
  if property_list.number_gathered() == 14:
    property_list.there_is_another = False


---
id: retirement intro
continue button field: retirement_intro
question: |
  Retirement accounts and pensions
subquestion: |
  Retirement accounts and pensions can be divided in a divorce. However, the court cannot divide all retirement accounts between spouses. They may only divide the parts that are considered "marital property." If a spouse pays into a retirement account or pension during the marriage, at least part of that account or pension is marital property. It does not matter that only one spouse's income was paid into the account.

  A retirement account divided by the court at the time of the divorce does not mean that the money can be used right away.
 
  To learn more, read ILAO's article about [**dividing retirement accounts in a divorce**](https://www.illinoislegalaid.org/node/30331).

  **Note:** You do not have to enter the details of the retirement accounts and pensions now. The information will be listed on the divorce judgment, which is used at the end of the case.
  
---
id: include retirement
question: |
  Do you want to add information about retirement accounts and pensions?
subquestion: |
  These will appear on the draft form of the final divorce judgment.
fields:
  - no label: retirement_options
    datatype: radio
    choices:
      - Yes, I want each person to get the retirement accounts and pensions in their own name.: own
      - Yes, I want the retirement accounts and pensions to be split.: split
      - No, I don't want to enter information about this now. It can be decided later.: later
---
id: enter resp pensions
question: |
  Do you want to enter information about ${other_parties[0].name.full(middle="full")}'s retirement accounts and pensions now?
subquestion: |
  **Note:** These are retirement accounts and pensions that are in ${other_parties[0].name.full(middle="full")}'s name.
  
  If you select **No**, you can add this to your divorce judgment later.
fields:
  - Enter info about ${other_parties[0].name.full(middle="full")}'s retirement accounts and pensions?: enter_resp_pensions
    datatype: yesnoradio

---
id: more respondent pensions
question: |
  Do you want to list any other of ${other_parties[0].name.full(middle="full")}'s retirement accounts or pensions?
subquestion: |
  So far you have told us about:

  % for pension in pensions_resp:
    * ${ pension.name.text}
  % endfor

  You can list up to 3 retirement accounts or pensions.
fields:
  - Add another?: pensions_resp.there_is_another
    datatype: yesnoradio
---
id: respondent pension information
question: |
  Details for ${other_parties[0].name.full(middle="full")}'s ${ordinal(i)} retirement account or pension 
fields:
  - Account name: pensions_resp[i].name.text
    maxlength: 40
  - Do you want a portion of this account?: pensions_resp[i].payment_division
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know. I will decide later.: idk
  - What percent of the account do you want?: pensions_resp[i].pet_percent
    help: |
      Enter the percent you want to receive from 1-100%. ${other_parties[0].name.full(middle="full")} will receive the other %.
      
      For example, if you want three quarters, enter 75%. ${other_parties[0].name.full(middle="full")} will receive 25%.
    datatype: integer
    min: 1
    max: 100
    show if:
      variable: pensions_resp[i].payment_division
      is: "Yes"
---
code: |
  pensions_resp[i].name.text
  pensions_resp[i].complete = True 
---
code: |
  if pensions_resp.number_gathered() == 3:
    pensions_resp.there_is_another = False
---
id: qdro for resp pensions
question: |
  Who do you want to prepare the papwerwork for ${other_parties[0].name.full(middle="full")}'s retirement accounts and pensions?
subquestion: |
  The person you select will have to prepare a Qualified Domestic Relations Order (QDRO) or Qualified Illinois Domestic Relations Order (QILDRO) after the divorce is final to make sure you receive your share.
  
  You can usually contact the retirement account or pension plan administrator to get the forms you need.
fields:
  - Who will prepare the QDROs to divide ${other_parties[0].name.full(middle="full")}'s retirement accounts and pensions?: resp_pensions_qdro
    datatype: radio
    choices:
      - I will prepare the paperwork.: Me
      - ${other_parties[0].name.full(middle="full")} will prepare the paperwork.: Them
      - I don't know. I will decide later.: idk

---
id: enter user pensions
question: |
  Do you want to enter information about your retirement accounts and pensions now?
subquestion: |
  **Note:** These are retirement accounts and pensions that are in your name.

  If you select **No**, you can add this to your divorce judgment later.
fields:
  - Enter info about your retirement accounts and pensions?: enter_pet_pensions
    datatype: yesnoradio
---
id: more user pensions
question: |
  Do you want to list any other of your retirement accounts or pensions?
subquestion: |
  So far you have told us about:

  % for pension in pensions_pet:
    * ${ pension.name.text}
  % endfor

  You can list up to 3 retirement accounts or pensions.
fields:
  - Add another?: pensions_pet.there_is_another
    datatype: yesnoradio
---
id: user pension information
question: |
  Details for your ${ordinal(i)} retirement account or pension 
fields:
  - Account name: pensions_pet[i].name.text
    maxlength: 40
  - Do you want ${other_parties[0].name.full(middle="full")} to receive part of this account?: pensions_pet[i].payment_division
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know. I will decide later.: idk
  - What percent of the account do you want ${other_parties[0].name.full(middle="full")} to receive?: pensions_pet[i].pet_percent
    help: |
      Enter the percent you want ${other_parties[0].name.full(middle="full")} to receive from 1-100%. You will receive the other %.
      
      For example, if you want ${other_parties[0].name.full(middle="full")} to get a quarter, enter 25%. You will receive the other 75%.
    datatype: integer
    min: 1
    max: 100
    show if:
      variable: pensions_pet[i].payment_division
      is: "Yes"
---
code: |
  pensions_pet[i].name.text
  pensions_pet[i].complete = True 
---
code: |
  if pensions_pet.number_gathered() == 3:
    pensions_pet.there_is_another = False
---
id: qdro for pet pensions
question: |
  Who do you want to prepare the papwerwork for your retirement accounts and pensions?
subquestion: |
  The person you select will have to prepare a Qualified Domestic Relations Order (QDRO) or Qualified Illinois Domestic Relations Order (QILDRO) after the divorce is final to make sure you receive your share.
  
  You can usually contact the retirement account or pension plan administrator to get the forms you need.
fields:
  - Who will prepare the QDROs to divide your retirement accounts and pensions?: pet_pensions_qdro
    datatype: radio
    choices:
      - I will prepare the paperwork.: Me
      - ${other_parties[0].name.full(middle="full")} will prepare the paperwork.: Them
      - I don't know. I will decide later.: idk
---
id: other pension orders 
question: |
  Do you want the final divorce judgment to say anything else about retirement accounts or pensions?
fields:
  - Anything else about retirement accounts or pensions?: pensions_other
    datatype: yesnoradio
  - Describe the accounts and who you want to get them. Use each person's name to be clear.: pensions_other_text
    input type: area
    rows: 4
    maxlength: 275    
    label above field: True
    show if:
      variable: pensions_other
      is: True
---


---
id: real estate intro
continue button field: real_estate_intro
question: |
  Real estate
subquestion: |
  "Marital real estate" is any real property that either spouse got during the marriage.

  * Marital real estate will be divided in the divorce. It can be sold, with each spouse receiving part of the proceeds, or kept by one of the people in the divorce. If one person keeps it, they will have to "buy out" the other person's share.
  * If you and ${other_parties[0].name.full(middle="full")} can't agree how it will be divided, the judge will decide for you. You can also use a mediator to help you decide.
  * Your divorce Petition will ask for a fair division of the marital/civil union property.
  
  "Non-marital real estate" is real property that you or ${other_parties[0].name.full(middle="full")} got outside the marriage. Your divorce Petition will ask that each party gets to keep all of their non-marital/non-civil union property. Non-marital real estate includes:
  
  * Real property owned or acquired before marriage,
  * Real property received as a gift, or an inheritance, or left to the person in a will,
  * Real property received by the spouse after a legal separation,
  * Real property specifically excluded in an agreement between the spouses (for example, a pre-nuptial agreement),
  * Real property received by a court judgment awarded to a spouse from the other spouse, or
  * Real property received in exchange for any of the above.

  **Note:** You do not have to enter the details of the marital real estate now. The information will be listed on the divorce judgment, which is used at the end of the case.

  To learn more, read ILAO's article about the [**factors that go into dividing the family home in a divorce**](https://www.illinoislegalaid.org/node/30321).  
---
id: have real estate
question: |
  Do you and ${other_parties[0].name.full(middle="full")} own any marital real estate?
subquestion: |
  Real estate is property consisting of land or buildings like a house or an apartment.
fields:
  - no label: has_real_estate
    datatype: yesnoradio
---
id: real estate address
question: |
  What is the address of the marital real estate?
fields:
  - Street address: real_estate.address
    address autocomplete: True
  - Address line 2: real_estate.unit
    required: False
  - City: real_estate.city
  - State: real_estate.state
    code: |
      states_list()
    default: IL      
  - ZIP code: real_estate.zip
---
id: attach legal description
question: |
  Will you attach a legal description of the real estate to the final divorce judgment?
subquestion: |
  You can find the legal description on the deed or other property documents. These can be found at the office of the Recorder of Deeds in the county where the property is located.

  **Note:** You do not need to attach the legal description to the Petition.
fields:
  - no label: attach_legal_desc
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know. I will decide later.: I don't know.

---
id: user non-marital property
question: |
  Do you want to list your non-marital property?
subquestion: |
  Non-marital property includes real estate, personal property, retirement accounts, or bank or other financial accounts that you did not get during the marriage. Non-marital property includes:
  
  * Property owned or acquired before marriage,
  * Property received as a gift, or an inheritance, or left to the person in a will,
  * Property received by the spouse after a legal separation,
  * Property specifically excluded in an agreement between the spouses (for example, a pre-nuptial agreement),
  * Property received by a court judgment awarded to a spouse from the other spouse, or
  * Property received in exchange for any of the above. 
  
  This will be listed on the draft form of the final divorce judgment. The judge may decide differently, or you may reach an different agreement on how to divide the property.

  If ${other_parties[0].name.full(middle="full")} has any of this non-marital property, they will need to deliver it to you within 30 days after the divorce judgment is entered.
  
  **Note:** Do not list account numbers.
fields:
  - Include your non-marital property?: pet_has_nonmarital_property
    datatype: yesnoradio
  - List your non-marital property: pet_nonmarital_property
    input type: area
    rows: 5
    maxlength: 210
    show if:
      variable: pet_has_nonmarital_property
      is: True
---
id: respondent non-marital property
question: |
  Do you want to list ${other_parties[0].name.full(middle="full")}'s non-marital property?
subquestion: |
  Non-marital property includes real estate, personal property, retirement accounts, or bank or other financial accounts that you did not get during the marriage. Non-marital property includes:
  
  * Property owned or acquired before marriage,
  * Property received as a gift, or an inheritance, or left to the person in a will,
  * Property received by the spouse after a legal separation,
  * Property specifically excluded in an agreement between the spouses (for example, a pre-nuptial agreement),
  * Property received by a court judgment awarded to a spouse from the other spouse, or
  * Property received in exchange for any of the above. 
  
  This will be listed on the draft form of the final divorce judgment. The judge may decide differently, or you may reach an different agreement on how to divide the property.

  If you have any of this non-marital property, you will need to deliver it to ${other_parties[0].name.full(middle="full")} within 30 days after the divorce judgment is entered.

  **Note:** Do not list account numbers.
fields:
  - Include ${other_parties[0].name.full(middle="full")}'s non-marital property?: resp_has_nonmarital_property
    datatype: yesnoradio
  - List ${other_parties[0].name.full(middle="full")}'s non-marital property: resp_nonmarital_property
    input type: area
    rows: 5
    maxlength: 210
    show if:
      variable: resp_has_nonmarital_property
      is: True
---
id: property exchange in 30 days from judgment
question: |
  Do you want any exchange of personal property to happen within 30 days after the divorce judgment is entered?
subquestion: |
  Adding this requirement can help motivate ${other_parties[0].name.full(middle="full")} to turn over your personal property or accounts after the divorce.

  If you aren't sure, select **No**.
fields:
  - no label: property_exchange
    datatype: yesnoradio
---
id: other property orders 
question: |
  Do you want the final divorce judgment to say anything else about property?
subquestion: |
  **Note:** This includes **pets**.
fields:
  - Anything else about property or pets?: property_other
    datatype: yesnoradio
  - Describe the things and who you want to get them. Use each person's name to be clear.: property_other_text
    input type: area
    rows: 5
    maxlength: 300    
    label above field: True
    show if:
      variable: property_other
      is: True

---
id: case county
question: |
  Where do you want to file your divorce?
subquestion: |
  **Note:** You must file the divorce in the county where you or your spouse lives.

  ${ collapse_template(county_lookup_help) }
fields:
  - County: trial_court_index
    datatype: integer
    code: |
      court_county_lookup()
---
depends on:
  - trial_court_index
code: |
  trial_court = court_list.as_court('trial_court', trial_court_index)
---
code: |
  def court_county_lookup(lowercase=False):
    all_court_counties = court_list._load_courts()['address_county'].items()
    filtered_courts = [(-1, "cook")] if lowercase else [(-1, "Cook")]
    for court in all_court_counties:
      if court[1] != "Cook":
        court_name = court[1].lower() if lowercase else court[1]
        filtered_courts.append((court[0],court_name))
    return sorted( filtered_courts, key=lambda y: y[1])
---
depends on:
  - trial_court_index
code: |
  if trial_court_index == -1:
    trial_court = court_list.as_court('trial_court', 15)
    trial_court.address.county = "Cook"
  else:
    trial_court = court_list.as_court('trial_court', trial_court_index)
---
depends on:
  - trial_court_index
  - cook_district
code: |
  if trial_court_index == -1:
    trial_court = court_list.as_court('trial_court', cook_district)
  else:
    trial_court = court_list.as_court('trial_court', trial_court_index)
    
  court_name = str(trial_court.name)
  court_street_address = str(trial_court.address.address)
  court_city = str(trial_court.address.city)
  court_state = str(trial_court.address.state)
  court_zip = str(trial_court.address.zip)
  courthouse_info = court_name + ", " + court_street_address + ", " + court_city + ", " + court_state + " " + court_zip
---
id: Cook County district
question: |
  In which Cook County courthouse will you file your case?
subquestion: |
  You might want to pick the courthouse that is most convenient for you.

  ${ collapse_template(cook_district_help) }  
field: cook_district
choices:
  - First Municipal District, Daley Center, 50 W. Washington Street, Chicago: 15
  - Second Municipal District, 5600 Old Orchard Road, Skokie: 16
  - Third Municipal District, 2121 Euclid Avenue, Rolling Meadows: 17
  - Fourth Municipal District, 1500 Maybrook Drive, Maywood: 18
  - Fifth Municipal District, 10220 S. 76th Avenue, Bridgeview: 19
  - Sixth Municipal District, 16501 South Kedzie Parkway, Markham: 20
---
template: cook_district_help
subject: |
  **What if I am not sure?**
content: |  
  Visit [**Illinois Court Help**](https://www.ilcourthelp.gov/), or you can call or text (833) 411-1121 for assistance.
---
id: any previous cook cases
question: |
  Have you filed any divorce or parentage cases with ${other_parties[0].name.full(middle="full")} in Cook County before?
subquestion: |
  This will help the court clerk in Cook County assign your case to the correct location. If you were involved in more than one, choose the most recent.
fields:
  - no label: previous_cook_case_type
    datatype: radio
    choices:
      - I was in an earlier **divorce** case with ${other_parties[0].name.full(middle="full")}.: divorce
      - I was in an earlier **parentage** case with ${other_parties[0].name.full(middle="full")} involving children we had together.: parentage
      - No earlier divorce or parentage cases were filed in Cook County.: none
  - Date case was filed: previous_cook_case_date
    datatype: ThreePartsDate
    alMax: ${ today().format("yyyy-MM-dd") }
    required: False
    js show if: |
      val("previous_cook_case_type") === "divorce" || val("previous_cook_case_type") === "parentage" 
  - Case number: previous_cook_case_number
    maxlength: 24
    required: False
    js show if: |
      val("previous_cook_case_type") === "divorce" || val("previous_cook_case_type") === "parentage" 
  - Name of judge: previous_cook_case_judge
    maxlength: 45
    required: False
    js show if: |
      val("previous_cook_case_type") === "divorce" || val("previous_cook_case_type") === "parentage" 
---
id: cook case type
question: |
  What kind of case are you filing?
subquestion: |
  This information is used by the Cook County Circuit Clerk.
fields:
  - I am filing a petition to end a: case_type_marriage
    datatype: radio
    choices:
      - "Marriage": True
      - "Civil union": False
---
id: know respondent location
question: |
  Do you have an address where ${other_parties[0].name.full(middle="full")} can be found?
subquestion: |
  The law requires that ${other_parties[0].name.full(middle="full")} be notified of your divorce case. This is usually done by having the sheriff or an authorized person "serve" ${other_parties[0].name.full(middle="full")} by hand-delivering the court papers. This can done at ${other_parties[0].name.full(middle="full")}'s home, work, or another location.

  **Note:** This could be a different address from ${other_parties[0].name.full(middle="full")}'s current address.
  
  If you don't know where they can be found, you can still get divorced. However, some of the terms of the divorce can't be decided until ${other_parties[0].name.full(middle="full")} is properly notified of the court case. You can ask the court to let you notify them by another method.

  To learn more, read ILAO's article about [**divorcing someone who cannot be found**](https://www.illinoislegalaid.org/node/30371).
fields:
  - Have an address where ${other_parties[0].name.full(middle="full")} can be served?: know_resp_location
    datatype: yesnoradio
---
id: service address choice
question: |
  Where can ${other_parties[0].name.full(middle="full")} be found?
subquestion: |
  This is where they will be served with Divorce court papers.
fields:
  - no label: service_address_choice
    datatype: radio
    code: service_list
---
reconsider: True
code: |
  service_list = []
  if knows_resp_address == True:
    service_list.append( { "home": other_parties[0].name.full(middle="full") + "'s home address (" + other_parties[0].address.on_one_line(bare=True) + ")" })
  if other_parties[0].emp_status['Yes'] and other_parties[0].employers[0].address.address != "":
    service_list.append({ "work": other_parties[0].name.full(middle="full")+ "'s work address (" + other_parties[0].employers[0].address.on_one_line(bare=True) + ")" })
  if other_parties[0].emp_status['Yes']:
    if other_parties[0].has_second_job and other_parties[0].employers[1].address.address != "":
      service_list.append({ "their other work": other_parties[0].name.full(middle="full")+ "'s other work address (" + other_parties[0].employers[1].address.on_one_line(bare=True) + ")" })
  service_list.append({ "other": "An address I will enter" })
---
id: other service address
question: |
  Enter the address where ${other_parties[0].name.full(middle="full")} can be found
fields:
  - Street address: service_address.address
    address autocomplete: True
  - Address line 2: service_address.unit
    required: False
  - City: service_address.city
  - State: service_address.state
    code: |
      states_list()
  - ZIP code: service_address.zip
    required: False
---    
id: have another service address
question: |
  Do you want to add another address where ${other_parties[0].name.full(middle="full")} can be found?
fields:
  - no label: has_second_service_address
    datatype: yesnoradio
---
id: second service address choice
question: |
  Where else can ${other_parties[0].name.full(middle="full")} be found?
fields:
  - no label: second_service_address_choice
    datatype: radio
    code: alt_service_list
---
reconsider: True
code: |
  alt_service_list = []
  if knows_resp_address == True and service_address_choice != "home":
    alt_service_list.append( { "home": other_parties[0].name.full(middle="full") + "'s home address (" + other_parties[0].address.on_one_line(bare=True) + ")" })
  if other_parties[0].emp_status['Yes'] and other_parties[0].employers[0].address.address != "" and service_address_choice != "work":
    alt_service_list.append({ "work": other_parties[0].name.full(middle="full")+ "'s work address (" + other_parties[0].employers[0].address.on_one_line(bare=True) + ")" })
  if other_parties[0].emp_status['Yes'] and service_address_choice != "their other work":
    if other_parties[0].has_second_job and other_parties[0].employers[1].address.address != "":
      alt_service_list.append({ "their other work": other_parties[0].name.full(middle="full")+ "'s other work address (" + other_parties[0].employers[1].address.on_one_line(bare=True) + ")" })
  
  alt_service_list.append({ "other": "An address I will enter" })
---
sets: service_state
depends on:
  - service_address_choice
  - service_address.state
  - other_parties[0].address.state
  - other_parties[0].employers[0].address.state
  - other_parties[0].employers[1].address.state
code: |  
  if service_address_choice == "other":
    service_state = service_address.state
  elif service_address_choice == "home":
    service_state = other_parties[0].address.state        
  elif service_address_choice == "work":
    service_state = other_parties[0].employers[0].address.state
  else:
    service_state = other_parties[0].employers[1].address.state
---
depends on:
  - service_address_choice
id: service county
question: |
  In which county can the sheriff find ${other_parties[0].name.full(middle="full")}?
subquestion: |
  You said the sheriff can serve court papers on ${other_parties[0].name.full(middle="full")} at:
  
  % if service_address_choice == "other":
  * ${ service_address.on_one_line(bare=True) }
  % elif service_address_choice == "home":
  * ${ other_parties[0].address.on_one_line(bare=True) }        
  % elif service_address_choice == "work":
  * ${ other_parties[0].employers[0].address.on_one_line(bare=True) }
  % else:
  * ${ other_parties[0].employers[1].address.on_one_line(bare=True) } 
  % endif
  
  Enter the county below. If this is a different county from where you are filing your case, we will make a letter that you can send to the sheriff to help serve ${other_parties[0].name.full(middle="full")}.
  
  ${ collapse_template(county_lookup_help) }
fields:
  - County where ${other_parties[0].name.full(middle="full")} can be served: service_county
    maxlength: 40
    show if:
      code: |
        service_state != "IL"
  - County where ${other_parties[0].name.full(middle="full")} can be served: service_county
    code: |
      court_list._load_courts()["address_county"].unique()
    show if:
      code: |
        service_state == "IL"
---
template: county_lookup_help
subject: |
  **How do I look up the county?**
content: |  
  You can use this [**City-to-County Finder**](https://www.statsamerica.org/CityCountyFinder/) to find the county.
---
id: second other service address
question: |
  Enter another address where ${other_parties[0].name.full(middle="full")} can be found
fields:
  - Street address: second_service_address.address
    address autocomplete: True
  - Address line 2: second_service_address.unit
    required: False
  - City: second_service_address.city
  - State: second_service_address.state
    code: |
      states_list()
  - ZIP code: second_service_address.zip
    required: False
---
id: respondent alt contact info
question: |
  Do you know other ways ${other_parties[0].name.full(middle="full")} can be contacted?
subquestion: |
  You alread told us:
  
  % if other_parties[0].phone_number != "":
  * ${other_parties[0].name.full(middle="full")}'s phone: ${ phone_number_formatted(other_parties[0].phone_number) }
  % else:
  * ${other_parties[0].name.full(middle="full")}'s phone: None entered
  % endif
  % if other_parties[0].email != "":
  * ${other_parties[0].name.full(middle="full")}'s email: ${ other_parties[0].email }
  % else:
  * ${other_parties[0].name.full(middle="full")}'s email: None entered
  % endif
   
  If you do not know other contact information for ${other_parties[0].name.full(middle="full")}, leave these blank.
fields:
  - Phone: other_parties[0].phone_number_alt
    datatype: al_international_phone
    required: False
  - Email address: other_parties[0].email_alt    
    datatype: email
    required: False
---
id: service method
question: |
  Who do you want to deliver court papers to ${other_parties[0].name.full(middle="full")}?
subquestion: |
  This is called service. In Illinois, **Sheriffs usually serve Divorce court papers.**
  
  Note: There may be a charge for a special process server or a licensed private detective.
fields:
  - no label: service_method
    datatype: radio
    choices:
      - Sheriff (most common): sheriff
      - Special process server: sps
      - Licensed private detective: detective
      - I don't know. I will decide and complete the Summons later.: idk
---
id: e-signature
question: |
  Do you want to add your e-signature to your ${ form_name }?
subquestion: |
  This program can put “**/s/ ${users[0].name.full(middle='full')}**” where you would sign your name. The court will accept this as your signature.

  If you do not add your **{e-signature}** now, you must sign your paper forms before you file and deliver them.

  <div class="alert alert-info ilao-info" role="alert">
    <h6 class="alert-heading">What it means to sign your forms</h6>
    <p>By signing your <i>Motion to Approve Process Server Who is Not Licensed</i>, you are certifying that:</p>
    <p><ul>
      <li>Everything on the forms is true and correct, and</li>
      <li>You understand that making a false statement on the form is perjury, which can result in criminal penalties.</li>
    </ul></p>
  <p>See the <a href="https://www.ilga.gov/legislation/ilcs/documents/073500050k1-109.htm"><b>Code of Civil Procedure, 735 ILCS 5/1-109</b></a> for more information.</p>
    <p>By signing your <i>Notice of Court Date for Motion</i> (if needed), you are certifying that:</p>
    <p><ul>
      <li>You read the document,</li>
      <li>You believe it to be true and correct, and</li>
      <li>You are not filing it for an improper purpose.</li>
    </ul></p>
    <p>See the <a href="https://ilcourtsaudio.blob.core.windows.net/antilles-resources/resources/9ce1fce9-895f-463e-b87d-f9b7631f8fde/Rule%20137.pdf"><b>Illinois Supreme Court Rule 137</b></a> for more information.</p>
  </div>
fields:
  - "Add e-signature?": e_signature
    datatype: yesnoradio
terms:
  - "e-signature": |
      An e-signature is an electronic signature. It is a digital version of a signature that has the same effect as a hand-written signature. 
---
id: forms assembling
continue button field: forms_assembling
question: |
  Almost done
subquestion: |
  After you click **Next**, it may take a few moments to finish making your forms.
  
  ###### You do not need to refresh your screen. Hang in there!
  
  [NEWLINE]
---
id: get docs screen
event: get_docs_screen
question: |
  Download
subquestion: |
  
  Your forms are ready. View and download your forms below. Click **Make changes** to fix any mistakes.

  This program **does not file** your divorce forms. You will need to do this yourself. Learn about [**e-filing in Illinois**](https://www.illinoiscourts.gov/eservices/information-for-filers-without-lawyers).

  ${ action_button_html(url_action('review_answers'), label=':edit: Make changes', color='success', size="md") }
  
  ${ al_user_bundle.download_list_html() }

  [NEWLINE]

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

  **Note:** This program **does not file** your forms. Learn about [**e-filing in Illinois**](https://www.illinoiscourts.gov/eservices/information-for-filers-without-lawyers).
  
  Thank you for using ILAO Easy Forms!
under: |
  % if not user_logged_in():
  [${fa_icon("sign-in-alt", color="#0079d0", size="sm")} **Sign-in**](${url_of('login', next=interview_url())}) or [**create**](${url_of('register', next=interview_url())}) an ILAO Easy Form account to save your progress (optional).
  % endif 

  &nbsp;
  ${ action_button_html(interview_url(i="docassemble.ILAO:feedback.yml", easy_form_interview=ilao_easy_form_url, easy_form_title=ilao_easy_form_title, easy_form_page=current_context().question_id, easy_form_variable=current_context().variable, local=False,reset=1), label=':comment: Was this program helpful?', color="#181c36", size="md", new_window=True) }
---
generic object: ALDocumentBundle
template: x.get_email_copy
content: |
  Send a copy of your forms to your email
---
generic object: ALDocumentBundle
template: x.send_email_template
subject: |
  Divorce forms
content: |
  Your forms are attached.
  
  Thanks for using ILAO Easy Forms!
  
  [Illinois Legal Aid Online](https://www.illinoislegalaid.org)
---






---
objects:
  - instructions_no_kids: ALDocument.using(title="Instructions", filename="instructions.pdf", has_addendum=False)
  - instructions_kids: ALDocument.using(title="Instructions", filename="instructions.pdf", has_addendum=False)
  - cook_cover_sheet: ALDocument.using(title="Domestic Relations Cover Sheet", filename="cook_cover_sheet.pdf", has_addendum=False)
  - petition_no_kids: ALDocument.using(title="Petition for Dissolution", filename="petition.pdf", has_addendum=False)
  - petition_kids: ALDocument.using(title="Petition for Dissolution", filename="petition.pdf", has_addendum=False)
  - additional_kids_petition: ALDocument.using(title="Additional Children Information - Petition", filename="additional_kids_petition.pdf", has_addendum=False)
  - other_children_info: ALDocument.using(title="Other Information about Children - Petition", filename="other_children_info.pdf", has_addendum=False)
  - judgment_no_kids: ALDocument.using(title="Judgment for Dissolution", filename="judgment.pdf", has_addendum=False)
  - judgment_kids: ALDocument.using(title="Judgment for Dissolution", filename="judgment.pdf", has_addendum=False)
  - additional_kids_judgment: ALDocument.using(title="Additional Children Information - Judgment", filename="additional_kids_petition.pdf", has_addendum=False)
  - additional_debts: ALDocument.using(title="Additional Debts", filename="additional_debts.pdf", has_addendum=False)
  - additional_property: ALDocument.using(title="Additional Personal Property and Bank Accounts", filename="additional_property.pdf", has_addendum=False)
  - certification_agreement: ALDocument.using(title="Certification Agreement (optional)", filename="certification_agreement.pdf", has_addendum=False)
  - IDPH_certificate_instructions: ALDocument.using(title="IDPH Certificate instructions", filename="IDPH_certificate_instructions.pdf", has_addendum=False)
  - IDPH_certificate_of_dissolution: ALDocument.using(title="IDPH Certificate of Dissolution (blank)", filename="IDPH_certificate_of_dissolution.pdf", has_addendum=False)
  - child_support_instructions: ALDocument.using(title="Child support instructions", filename="child_support_instructions.pdf", has_addendum=False)
  - child_support_order: ALDocument.using(title="Order for Support", filename="child_support_order.pdf", has_addendum=False)
  - support_information_sheet: ALDocument.using(title="Suppport Information Sheet", filename="support_information_sheet.pdf", has_addendum=False)
  - income_withholding_instructions: ALDocument.using(title="Income withholding instructions", filename="income_withholding_instructions.pdf", has_addendum=False)
  - income_withholding_for_support: ALDocument.using(title="Income withholding for support (blank)", filename="income_withholding_for_support.pdf", has_addendum=False)
  - income_withholding_letter_to_employer: ALDocument.using(title="Income withholding letter to employer (blank)", filename="income_withholding_letter_to_employer.pdf", has_addendum=False)
  - divorce_summons: ALDocument.using(title="Summons", filename="divorce_summons.pdf", has_addendum=False)
  - letter_to_sheriff: ALDocument.using(title="Letter to Sheriff (optional)", filename="letter_to_sheriff.pdf", has_addendum=False)
  - divorce_appearance: ALDocument.using(title="Appearance for spouse (optional)", filename="divorce_appearance.pdf", has_addendum=False)



---
code: |
  instructions_no_kids.enabled = False
  instructions_kids.enabled = False
  petition_bundle.enabled = True
  petition_no_kids.enabled = False
  petition_kids.enabled = False
  additional_kids_petition.enabled = False
  other_children_info.enabled = False
  judgment_bundle.enabled = True
  judgment_no_kids.enabled = False
  judgment_kids.enabled = False
  additional_kids_judgment.enabled = False
  additional_debts.enabled = False
  additional_property.enabled = False
  child_support_instructions.enabled = False
  child_support_order.enabled = False
  support_information_sheet.enabled = False
  income_withholding_instructions.enabled = False
  income_withholding_for_support.enabled = False
  income_withholding_letter_to_employer.enabled = False
  divorce_summons.enabled = True
  letter_to_sheriff.enabled = False
  divorce_appearance.enabled = False
  certification_agreement.enabled = True
  IDPH_certificate_instructions.enabled = True
  IDPH_certificate_of_dissolution.enabled = True
  cook_cover_sheet.enabled = False

  if file_with_kids:
    instructions_kids.enabled = True
    petition_kids.enabled = True
    if any_children_together:
      if children.number() > 3:
        additional_kids_petition.enabled = True
      if has_other_kids_during_marriage or other_custody_case or other_case_involving_kids or other_custodian or kids_lived_with_other_adult:
        other_children_info.enabled = True
      if want_child_support:
        child_support_instructions.enabled = True
        child_support_order.enabled = True
        support_information_sheet.enabled = True
        income_withholding_instructions.enabled = True
        income_withholding_for_support.enabled = True
        income_withholding_letter_to_employer.enabled = True
  
    elif has_other_kids_during_marriage:
        other_children_info.enabled = True
  
    judgment_kids.enabled = True
    if any_children_together:
      if children_status['minors'] or children_status['support']:
        if any_minor_children:
          if minor_children_list.number() > 3:
            additional_kids_judgment.enabled = True
        if any_support_children:
          if support_children_list.number() > 3:
            additional_kids_judgment.enabled = True
      if has_other_kids_during_marriage and outside_children.number() > 3:
        additional_kids_judgment.enabled = True
  
  else:
    instructions_no_kids.enabled = True
    petition_no_kids.enabled = True
    judgment_no_kids.enabled = True
    
  if include_debts and debts.number() > 5:
    additional_debts.enabled = True
  if include_property and property_list.number() > 5:
    additional_property.enabled = True

  if (trial_court.address.county != service_county) or service_state != "IL":
    letter_to_sheriff.enabled = True
    divorce_appearance.enabled = True
  
  if trial_court_index == -1:
    cook_cover_sheet.enabled = True  
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[instructions_no_kids, instructions_kids, cook_cover_sheet, petition_bundle, divorce_summons, letter_to_sheriff, divorce_appearance, child_support_instructions, child_support_order, support_information_sheet, income_withholding_instructions, income_withholding_for_support, income_withholding_letter_to_employer, judgment_bundle, certification_agreement, IDPH_certificate_instructions, IDPH_certificate_of_dissolution], filename="divorce_forms.pdf", title="All forms")
  #- al_court_bundle: ALDocumentBundle.using(elements=[instructions_kids, cook_cover_sheet], filename="divorce_forms.pdf", title="All forms")
---
objects:
  - petition_bundle: ALDocumentBundle.using(elements=[petition_no_kids, petition_kids, additional_kids_petition, other_children_info], filename="petition.pdf", title="Petition for Dissolution")
  - judgment_bundle: ALDocumentBundle.using(elements=[judgment_no_kids, judgment_kids, additional_kids_judgment, additional_debts, additional_property], filename="judgment.pdf", title="Judgment for Dissolution")   
---
attachment:
  variable name: instructions_kids[i]
  name: instructions_kids
  filename: instructions_kids
  editable: False
  skip undefined: True
  pdf template file: instructions_kids.pdf  
  fields:
      - "fake": ${ "" }
---
attachment:
  variable name: instructions_no_kids[i]
  name: instructions_no_kids
  filename: instructions_no_kids
  editable: False
  skip undefined: True
  pdf template file: instructions_no_kids.pdf  
  fields:
      - "fake": ${ "" }

---
attachment:
  variable name: cook_cover_sheet[i]
  name: cook_cover_sheet
  filename: cook_cover_sheet
  skip undefined: True
  editable: False
  pdf template file: cook_cover_sheet.pdf
  fields:
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent": ${ other_parties[0].name.full(middle="full") }
    - "marriage_checkbox": ${ case_type_marriage }
    - "civil_union_checkbox": ${ not case_type_marriage }
    - "div_checkbox": ${ True }

    - "involves_minors_yes": ${ file_with_kids }
    - "involves_minors_no": ${ not file_with_kids }
    - "previous_divorce_yes": ${ True if previous_cook_case_type == "divorce" else '' }
    - "previous_divorce_no": ${ True if not previous_cook_case_type == "divorce" or previous_cook_case_type == "none" else '' }
    - "previous_parentage_yes": ${ True if previous_cook_case_type == "parentage" else '' }
    - "previous_parentage_no": ${ True if not previous_cook_case_type == "parentage" or previous_cook_case_type == "none" else '' }
    - "previous_cook_case_date": ${ format_date(previous_cook_case_date, format='MMM d, yyyy') if previous_cook_case_type == "divorce" or previous_cook_case_type == "parentage" else '' }
    - "previous_cook_case_number": ${ previous_cook_case_number if previous_cook_case_type == "divorce" or previous_cook_case_type == "parentage" else '' }
    - "previous_cook_case_judge": ${ previous_cook_case_judge if previous_cook_case_type == "divorce" or previous_cook_case_type == "parentage" else '' }

    - "pro_se_cb": ${ True }
    - "petitioner__2": ${ users[0].name.full(middle="full") }
    - "preparer_address_line_1": ${ users[0].address.line_one(bare=True) }
    - "preparer_address_line_2": ${ users[0].address.line_two() }
    - "preparer_phone": ${ phone_number_formatted(users[0].phone_number) }
    - "preparer_email": ${ users[0].email if users[0].has_email_address else ""}
    #- "cook_e_notice_cb": ${ cook_e_notice }
    #- "cook_e_notice_email": ${ users[0].email if cook_e_notice else ""}

---
attachment:
  variable name: petition_no_kids[i]
  name: petition_no_kids
  filename: petition_no_kids
  skip undefined: True
  editable: False
  pdf template file: petition_no_kids.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent__1": ${ other_parties[0].name.full(middle="full") }
    - "user_is_resident": ${ True }
    - "user_resident_90": ${ True }
    - "user_residence_county": ${ users[0].residence_county }
    - "user_age": ${ users[0].age_in_years() }
    - "user_emp_yes": ${ True if users[0].emp_status["Yes"] else "" }
    - "user_emp_no": ${ True if users[0].emp_status["No"] else "" }
    - "user_emp_ss": ${ True if users[0].emp_status["ss"] else "" }
    - "user_job_title": ${ users[0].employers[0].job_title if users[0].emp_status["Yes"] else "" }
    - "user_employer": ${ users[0].employers[0].name.text if users[0].emp_status["Yes"] else "" }
    - "user_former_name_yes": ${ users[0].use_former_name }
    - "user_former_name_no": ${ not users[0].use_former_name }
    - "user_former_name": ${ users[0].aliases[0].full(middle="full") if users[0].use_former_name else "" }
      
    - "resp_is_resident": ${ other_parties[0].is_resident }
    - "resp_is_not_resident": ${ not other_parties[0].is_resident }
    - "resp_resident_90": ${ True if other_parties[0].is_resident and other_parties[0].meets_90_day_requirement else "" }
    - "resp_not_resident_90": ${ True if other_parties[0].is_resident == False or not other_parties[0].meets_90_day_requirement else "" }
    - "resp_age": ${ other_parties[0].age_in_years() }
    - "resp_know_address_yes": ${ knows_resp_address }
    - "resp_know_address_no": ${ not knows_resp_address }
    - "resp_address": ${ other_parties[0].address.on_one_line(bare=True) if knows_resp_address else "" }
    - "resp_emp_yes": ${ True if other_parties[0].emp_status["Yes"] else "" }
    - "resp_emp_no": ${ True if other_parties[0].emp_status["No"] else "" }
    - "resp_emp_idk": ${ True if other_parties[0].emp_status["idk"] else "" }
    - "resp_emp_ss": ${ True if other_parties[0].emp_status["ss"] else "" }
    - "resp_job_title": ${ other_parties[0].employers[0].job_title if other_parties[0].emp_status["Yes"] else "" }
    - "resp_employer": ${ other_parties[0].employers[0].name.text if other_parties[0].emp_status["Yes"] else "" }
    - "resp_active_duty_yes": ${ True if other_parties[0].is_active_duty == "Yes" else "" }
    - "resp_active_duty_no": ${ True if other_parties[0].is_active_duty == "No" else "" }
    - "resp_active_duty_idk": ${ True if other_parties[0].is_active_duty == "idk" else "" }

    - "marriage_date": ${ marriage_date }
    - "marriage_location": ${ marriage_county + ", " + marriage_state if marriage_in_america else marriage_intl_text + ", " + marriage_country }
    - "prior_divorce_no": ${ previous_divorce == "No"}
    - "prior_divorce_idk": ${ previous_divorce == "I don't know."}
    - "prior_divorce_yes": ${ previous_divorce == "Yes" } 
    - "prior_divorce_location": ${ previous_divorce_county + ", " + previous_divorce_state if previous_divorce == "Yes" and previous_divorce_in_us else previous_divorce_intl_text + ", " + previous_divorce_country }
    - "separation_date": ${ separation_date }
    - "pet_preg_no": ${ not pet_is_pregnant}
    - "pet_preg_resp_parent_no": ${ True if pet_is_pregnant and pet_pregnant_resp_parent == "No" else ""}
    - "resp_preg_no": ${ True if resp_is_pregnant != "Yes" else "" }
    - "resp_preg_pet_parent_no": ${ True if resp_is_pregnant == "Yes" and resp_pregnant_pet_parent != "Yes" else "" }
    - "no_children_cb": ${ not any_children_together }
    - "only_adult_children_cb": ${ True if any_children_together and children_status['adults'] else "" }
    - "adult_children_list": ${ comma_and_list(formatted_adult_child_list) if any_children_together and children_status['adults'] else "" }
      
    - "current_maintenance_yes": ${ current_maintenance }
    - "current_maintenance_no": ${ not current_maintenance }

    - "user_signature": ${ users[0].name.full(middle="full") if e_signature else '' }
    - "user__2": ${ users[0].name.full(middle="full") }
    - "user_address": ${ users[0].address.on_one_line(bare=True) }
    - "user_hide_address_cb": ${ True if hide_address else '' }
    - "user_phone": ${ phone_number_formatted(users[0].phone_number) }
    - "user_atty_number": ${ '' }
    - "user_email": ${ users[0].email if users[0].has_email_address else "" }

    
---
attachment:
  variable name: petition_kids[i]
  name: petition_kids
  filename: petition_kids
  skip undefined: True
  editable: False
  pdf template file: petition_kids.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent__1": ${ other_parties[0].name.full(middle="full") }
    - "user_is_resident": ${ True }
    - "user_resident_90": ${ True }
    - "user_residence_county": ${ users[0].residence_county }
    - "user_age": ${ users[0].age_in_years() }
    - "user_emp_yes": ${ True if users[0].emp_status["Yes"] else "" }
    - "user_emp_no": ${ True if users[0].emp_status["No"] else "" }
    - "user_emp_ss": ${ True if users[0].emp_status["ss"] else "" }
    - "user_job_title": ${ users[0].employers[0].job_title if users[0].emp_status["Yes"] else "" }
    - "user_employer": ${ users[0].employers[0].name.text if users[0].emp_status["Yes"] else "" }
    - "user_former_name_yes": ${ users[0].use_former_name }
    - "user_former_name_no": ${ not users[0].use_former_name }
    - "user_former_name": ${ users[0].aliases[0].full(middle="full") if users[0].use_former_name else "" }
      
    - "resp_is_resident": ${ other_parties[0].is_resident }
    - "resp_is_not_resident": ${ not other_parties[0].is_resident }
    - "resp_resident_90": ${ True if other_parties[0].is_resident and other_parties[0].meets_90_day_requirement else "" }
    - "resp_not_resident_90": ${ True if other_parties[0].is_resident == False or not other_parties[0].meets_90_day_requirement else "" }
    - "resp_age": ${ other_parties[0].age_in_years() }
    - "resp_know_address_yes": ${ knows_resp_address }
    - "resp_know_address_no": ${ not knows_resp_address }
    - "resp_address": ${ other_parties[0].address.on_one_line(bare=True) if knows_resp_address else "" }
    - "resp_emp_yes": ${ True if other_parties[0].emp_status["Yes"] else "" }
    - "resp_emp_no": ${ True if other_parties[0].emp_status["No"] else "" }
    - "resp_emp_idk": ${ True if other_parties[0].emp_status["idk"] else "" }
    - "resp_emp_ss": ${ True if other_parties[0].emp_status["ss"] else "" }
    - "resp_job_title": ${ other_parties[0].employers[0].job_title if other_parties[0].emp_status["Yes"] else "" }
    - "resp_employer": ${ other_parties[0].employers[0].name.text if other_parties[0].emp_status["Yes"] else "" }
    - "resp_active_duty_yes": ${ True if other_parties[0].is_active_duty == "Yes" else "" }
    - "resp_active_duty_no": ${ True if other_parties[0].is_active_duty == "No" else "" }
    - "resp_active_duty_idk": ${ True if other_parties[0].is_active_duty == "idk" else "" }

    - "marriage_date": ${ marriage_date }
    - "marriage_location": ${ marriage_county + ", " + marriage_state if marriage_in_america else marriage_intl_text + ", " + marriage_country }
    - "prior_divorce_no": ${ previous_divorce == "No"}
    - "prior_divorce_idk": ${ previous_divorce == "I don't know."}
    - "prior_divorce_yes": ${ previous_divorce == "Yes" } 
    - "prior_divorce_location": ${ previous_divorce_county + ", " + previous_divorce_state if previous_divorce == "Yes" and previous_divorce_in_us else previous_divorce_intl_text + ", " + previous_divorce_country }
    - "separation_date": ${ separation_date }
    - "pet_preg_yes": ${ pet_is_pregnant } 
    - "pet_preg_no": ${ not pet_is_pregnant}
    - "pet_preg_resp_parent_yes": ${ True if pet_is_pregnant and pet_pregnant_resp_parent == "Yes" else "" } 
    - "pet_preg_resp_parent_no": ${ True if pet_is_pregnant and pet_pregnant_resp_parent == "No" else ""}
    - "pet_preg_resp_parent_idk": ${ True if pet_is_pregnant and pet_pregnant_resp_parent == "I don't know." else "" }
    - "resp_preg_yes": ${ True if resp_is_pregnant == "Yes" else "" } 
    - "resp_preg_no": ${ True if resp_is_pregnant != "Yes" else "" }
    - "resp_preg_idk": ${ True if resp_is_pregnant == "I don't know." else "" }
    - "resp_preg_pet_parent_yes": ${ True if resp_is_pregnant == "Yes" and resp_pregnant_pet_parent == "Yes" else "" } 
    - "resp_preg_pet_parent_no": ${ True if resp_is_pregnant == "Yes" and resp_pregnant_pet_parent == "No" else "" }
    - "resp_preg_pet_parent_idk": ${ True if resp_is_pregnant == "Yes" and resp_pregnant_pet_parent == "I don't know." else "" }
    - "child_name_0": ${ children[0].name.full(middle="full") if children_status['minors'] or children_status['support'] else "" }
    - "child_age_0": |
        % if children_status['minors'] or children_status['support']:
        % if children[0].age_in_years() > 1:
        ${ children[0].age_in_years() }
        % else:
        ${ str(children[0].age_in_months()) + ' months' }
        % endif
        % else:
        ${ "" }
        % endif
    - "child_born_before_marriage_0": ${ not children[0].is_of_marriage if children_status['minors'] or children_status['support'] else "" }
    - "child_born_after_marriage_0": ${ children[0].is_of_marriage if children_status['minors'] or children_status['support'] else "" }
    - "child_disability_yes_0": ${ children[0].has_a_disability if children_status['minors'] or children_status['support'] else "" }
    - "child_disability_no_0": ${ not children[0].has_a_disability if children_status['minors'] or children_status['support'] else "" }
    - "child_in_school_0": ${ children[0].is_in_school if children_status['minors'] or children_status['support'] else "" }
    - "child_not_in_school_0": ${ not children[0].is_in_school if children_status['minors'] or children_status['support'] else "" }
    - "child_resident_yes_0": ${ True if children[0].is_resident == "Yes" and (children_status['minors'] or children_status['support']) else "" }
    - "child_resident_no_0": ${ True if children[0].is_resident == "No" and (children_status['minors'] or children_status['support']) else "" }
    - "child_resident_idk_0": ${ True if children[0].is_resident == "I don't know." and (children_status['minors'] or children_status['support']) else "" }
    - "child_address_0": ${ children[0].address.on_one_line(bare=True) if children_status['minors'] or children_status['support'] else "" }
    - "child_past_address_0_0": ${ children[0].former_addresses[0].on_one_line(bare=True) if children[0].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_1_0": ${ children[0].former_addresses[1].on_one_line(bare=True) if children[0].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_2_0": ${ children[0].former_addresses[2].on_one_line(bare=True) if children[0].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_3_0": ${ children[0].former_addresses[3].on_one_line(bare=True) if children[0].has_former_address and (children_status['minors'] or children_status['support']) else "" }

    - "child_name_1": ${ children[1].name.full(middle="full") if children_status['minors'] or children_status['support'] else "" }
    - "child_age_1": |
        % if children_status['minors'] or children_status['support']:
        % if children[1].age_in_years() > 1:
        ${ children[1].age_in_years() }
        % else:
        ${ str(children[1].age_in_months()) + ' months' }
        % endif
        % else:
        ${ "" }
        % endif
    - "child_born_before_marriage_1": ${ not children[1].is_of_marriage if children_status['minors'] or children_status['support'] else "" }
    - "child_born_after_marriage_1": ${ children[1].is_of_marriage if children_status['minors'] or children_status['support'] else "" }
    - "child_disability_yes_1": ${ children[1].has_a_disability if children_status['minors'] or children_status['support'] else "" }
    - "child_disability_no_1": ${ not children[1].has_a_disability if children_status['minors'] or children_status['support'] else "" }
    - "child_in_school_1": ${ children[1].is_in_school if children_status['minors'] or children_status['support'] else "" }
    - "child_not_in_school_1": ${ not children[1].is_in_school if children_status['minors'] or children_status['support'] else "" }
    - "child_resident_yes_1": ${ True if children[1].is_resident == "Yes" and (children_status['minors'] or children_status['support']) else "" }
    - "child_resident_no_1": ${ True if children[1].is_resident == "No" and (children_status['minors'] or children_status['support']) else "" }
    - "child_resident_idk_1": ${ True if children[1].is_resident == "I don't know." and (children_status['minors'] or children_status['support']) else "" }
    - "child_address_1": ${ children[1].address.on_one_line(bare=True) if children_status['minors'] or children_status['support'] else "" }
    - "child_past_address_0_1": ${ children[1].former_addresses[0].on_one_line(bare=True) if children[1].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_1_1": ${ children[1].former_addresses[1].on_one_line(bare=True) if children[1].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_2_1": ${ children[1].former_addresses[2].on_one_line(bare=True) if children[1].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_3_1": ${ children[1].former_addresses[3].on_one_line(bare=True) if children[1].has_former_address and (children_status['minors'] or children_status['support']) else "" }

    - "child_name_2": ${ children[2].name.full(middle="full") if children_status['minors'] or children_status['support'] else "" }
    - "child_age_2": |
        % if children_status['minors'] or children_status['support']:
        % if children[2].age_in_years() > 1:
        ${ children[2].age_in_years() }
        % else:
        ${ str(children[2].age_in_months()) + ' months' }
        % endif
        % else:
        ${ "" }
        % endif
    - "child_born_before_marriage_2": ${ not children[2].is_of_marriage if children_status['minors'] or children_status['support'] else "" }
    - "child_born_after_marriage_2": ${ children[2].is_of_marriage if children_status['minors'] or children_status['support'] else "" }
    - "child_disability_yes_2": ${ children[2].has_a_disability if children_status['minors'] or children_status['support'] else "" }
    - "child_disability_no_2": ${ not children[2].has_a_disability if children_status['minors'] or children_status['support'] else "" }
    - "child_in_school_2": ${ children[2].is_in_school if children_status['minors'] or children_status['support'] else "" }
    - "child_not_in_school_2": ${ not children[2].is_in_school if children_status['minors'] or children_status['support'] else "" }
    - "child_resident_yes_2": ${ True if children[2].is_resident == "Yes" and (children_status['minors'] or children_status['support']) else "" }
    - "child_resident_no_2": ${ True if children[2].is_resident == "No" and (children_status['minors'] or children_status['support']) else "" }
    - "child_resident_idk_2": ${ True if children[2].is_resident == "I don't know." and (children_status['minors'] or children_status['support']) else "" }
    - "child_address_2": ${ children[2].address.on_one_line(bare=True) if children_status['minors'] or children_status['support'] else "" }
    - "child_past_address_0_2": ${ children[2].former_addresses[0].on_one_line(bare=True) if children[2].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_1_2": ${ children[2].former_addresses[1].on_one_line(bare=True) if children[2].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_2_2": ${ children[2].former_addresses[2].on_one_line(bare=True) if children[2].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_3_2": ${ children[2].former_addresses[3].on_one_line(bare=True) if children[2].has_former_address and (children_status['minors'] or children_status['support']) else "" }

    - "additional_children_cb": ${ True if (children_status['minors'] or children_status['support']) and children.number() > 3 else "" }

    - "has_other_kids_during_marriage_no": ${ not has_other_kids_during_marriage }
    - "has_other_kids_during_marriage_yes": ${ has_other_kids_during_marriage }
    - "other_custody_case_no": ${ not other_custody_case if children_status['minors'] or children_status['support'] else "" }
    - "other_custody_case_yes": ${ other_custody_case if children_status['minors'] or children_status['support'] else "" }
    - "other_case_involving_kids_no": ${ not other_case_involving_kids if children_status['minors'] or children_status['support'] else "" }
    - "other_case_involving_kids_yes": ${ other_case_involving_kids if children_status['minors'] or children_status['support'] else "" }
    - "other_custodian_no": ${ not other_custodian if children_status['minors'] or children_status['support'] else "" }
    - "other_custodian_yes": ${ other_custodian if children_status['minors'] or children_status['support'] else "" }
    - "kids_lived_with_other_adult_no": ${ not kids_lived_with_other_adult if children_status['minors'] or children_status['support'] else "" }
    - "kids_lived_with_other_adult_yes": ${ kids_lived_with_other_adult if children_status['minors'] or children_status['support'] else "" }
    - "current_child_support_yes": ${ current_child_support if children_status['minors'] or children_status['support'] else "" }
    - "current_child_support_no": ${ not current_child_support if children_status['minors'] or children_status['support'] else "" }
    - "current_maintenance_yes": ${ current_maintenance }
    - "current_maintenance_no": ${ not current_maintenance }
    - "current_pt_schedule_yes": ${ current_pt_schedule if children_status['minors'] or children_status['support'] else "" }
    - "current_pt_schedule_no": ${ not current_pt_schedule if children_status['minors'] or children_status['support'] else "" }

    - "user_signature": ${ users[0].name.full(middle="full") if e_signature else '' }
    - "user__2": ${ users[0].name.full(middle="full") }
    - "user_address": ${ users[0].address.on_one_line(bare=True) }
    - "user_hide_address_cb": ${ True if hide_address else '' }
    - "user_phone": ${ phone_number_formatted(users[0].phone_number) }
    - "user_atty_number": ${ '' }
    - "user_email": ${ users[0].email if users[0].has_email_address else "" }

---
attachment:
  variable name: additional_kids_petition[i]
  name: additional_kids_petition
  filename: additional_kids_petition
  skip undefined: True
  editable: False
  pdf template file: additional_kids_petition.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent__1": ${ other_parties[0].name.full(middle="full") }

    - "child_name_3": ${ children[3].name.full(middle="full") if children_status['minors'] or children_status['support'] else "" }
    - "child_age_3": |
        % if children_status['minors'] or children_status['support']:
        % if children[3].age_in_years() > 1:
        ${ children[3].age_in_years() }
        % else:
        ${ str(children[3].age_in_months()) + ' months' }
        % endif
        % else:
        ${ "" }
        % endif
    - "child_born_before_marriage_3": ${ not children[3].is_of_marriage if children_status['minors'] or children_status['support'] else "" }
    - "child_born_after_marriage_3": ${ children[3].is_of_marriage if children_status['minors'] or children_status['support'] else "" }
    - "child_disability_yes_3": ${ children[3].has_a_disability if children_status['minors'] or children_status['support'] else "" }
    - "child_disability_no_3": ${ not children[3].has_a_disability if children_status['minors'] or children_status['support'] else "" }
    - "child_in_school_3": ${ children[3].is_in_school if children_status['minors'] or children_status['support'] else "" }
    - "child_not_in_school_3": ${ not children[3].is_in_school if children_status['minors'] or children_status['support'] else "" }
    - "child_resident_yes_3": ${ True if children[3].is_resident == "Yes" and (children_status['minors'] or children_status['support']) else "" }
    - "child_resident_no_3": ${ True if children[3].is_resident == "No" and (children_status['minors'] or children_status['support']) else "" }
    - "child_resident_idk_3": ${ True if children[3].is_resident == "I don't know." and (children_status['minors'] or children_status['support']) else "" }
    - "child_address_3": ${ children[3].address.on_one_line(bare=True) if children_status['minors'] or children_status['support'] else "" }
    - "child_past_address_0_3": ${ children[3].former_addresses[0].on_one_line(bare=True) if children[3].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_1_3": ${ children[3].former_addresses[1].on_one_line(bare=True) if children[3].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_2_3": ${ children[3].former_addresses[2].on_one_line(bare=True) if children[3].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_3_3": ${ children[3].former_addresses[3].on_one_line(bare=True) if children[3].has_former_address and (children_status['minors'] or children_status['support']) else "" }

    - "child_name_4": ${ children[4].name.full(middle="full") if children_status['minors'] or children_status['support'] else "" }
    - "child_age_4": |
        % if children_status['minors'] or children_status['support']:
        % if children[4].age_in_years() > 1:
        ${ children[4].age_in_years() }
        % else:
        ${ str(children[4].age_in_months()) + ' months' }
        % endif
        % else:
        ${ "" }
        % endif
    - "child_born_before_marriage_4": ${ not children[4].is_of_marriage if children_status['minors'] or children_status['support'] else "" }
    - "child_born_after_marriage_4": ${ children[4].is_of_marriage if children_status['minors'] or children_status['support'] else "" }
    - "child_disability_yes_4": ${ children[4].has_a_disability if children_status['minors'] or children_status['support'] else "" }
    - "child_disability_no_4": ${ not children[4].has_a_disability if children_status['minors'] or children_status['support'] else "" }
    - "child_in_school_4": ${ children[4].is_in_school if children_status['minors'] or children_status['support'] else "" }
    - "child_not_in_school_4": ${ not children[4].is_in_school if children_status['minors'] or children_status['support'] else "" }
    - "child_resident_yes_4": ${ True if children[4].is_resident == "Yes" and (children_status['minors'] or children_status['support']) else "" }
    - "child_resident_no_4": ${ True if children[4].is_resident == "No" and (children_status['minors'] or children_status['support']) else "" }
    - "child_resident_idk_4": ${ True if children[4].is_resident == "I don't know." and (children_status['minors'] or children_status['support']) else "" }
    - "child_address_4": ${ children[4].address.on_one_line(bare=True) if children_status['minors'] or children_status['support'] else "" }
    - "child_past_address_0_4": ${ children[4].former_addresses[0].on_one_line(bare=True) if children[4].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_1_4": ${ children[4].former_addresses[1].on_one_line(bare=True) if children[4].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_2_4": ${ children[4].former_addresses[2].on_one_line(bare=True) if children[4].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_3_4": ${ children[4].former_addresses[3].on_one_line(bare=True) if children[4].has_former_address and (children_status['minors'] or children_status['support']) else "" }

    - "child_name_5": ${ children[5].name.full(middle="full") if children_status['minors'] or children_status['support'] else "" }
    - "child_age_5": |
        % if children_status['minors'] or children_status['support']:
        % if children[5].age_in_years() > 1:
        ${ children[5].age_in_years() }
        % else:
        ${ str(children[5].age_in_months()) + ' months' }
        % endif
        % else:
        ${ "" }
        % endif
    - "child_born_before_marriage_5": ${ not children[5].is_of_marriage if children_status['minors'] or children_status['support'] else "" }
    - "child_born_after_marriage_5": ${ children[5].is_of_marriage if children_status['minors'] or children_status['support'] else "" }
    - "child_disability_yes_5": ${ children[5].has_a_disability if children_status['minors'] or children_status['support'] else "" }
    - "child_disability_no_5": ${ not children[5].has_a_disability if children_status['minors'] or children_status['support'] else "" }
    - "child_in_school_5": ${ children[5].is_in_school if children_status['minors'] or children_status['support'] else "" }
    - "child_not_in_school_5": ${ not children[5].is_in_school if children_status['minors'] or children_status['support'] else "" }
    - "child_resident_yes_5": ${ True if children[5].is_resident == "Yes" and (children_status['minors'] or children_status['support']) else "" }
    - "child_resident_no_5": ${ True if children[5].is_resident == "No" and (children_status['minors'] or children_status['support']) else "" }
    - "child_resident_idk_5": ${ True if children[5].is_resident == "I don't know." and (children_status['minors'] or children_status['support']) else "" }
    - "child_address_5": ${ children[5].address.on_one_line(bare=True) if children_status['minors'] or children_status['support'] else "" }
    - "child_past_address_0_5": ${ children[5].former_addresses[0].on_one_line(bare=True) if children[5].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_1_5": ${ children[5].former_addresses[1].on_one_line(bare=True) if children[5].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_2_5": ${ children[5].former_addresses[2].on_one_line(bare=True) if children[5].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_3_5": ${ children[5].former_addresses[3].on_one_line(bare=True) if children[5].has_former_address and (children_status['minors'] or children_status['support']) else "" }

    - "child_name_6": ${ children[6].name.full(middle="full") if children_status['minors'] or children_status['support'] else "" }
    - "child_age_6": |
        % if children_status['minors'] or children_status['support']:
        % if children[6].age_in_years() > 1:
        ${ children[6].age_in_years() }
        % else:
        ${ str(children[6].age_in_months()) + ' months' }
        % endif
        % else:
        ${ "" }
        % endif
    - "child_born_before_marriage_6": ${ not children[6].is_of_marriage if children_status['minors'] or children_status['support'] else "" }
    - "child_born_after_marriage_6": ${ children[6].is_of_marriage if children_status['minors'] or children_status['support'] else "" }
    - "child_disability_yes_6": ${ children[6].has_a_disability if children_status['minors'] or children_status['support'] else "" }
    - "child_disability_no_6": ${ not children[6].has_a_disability if children_status['minors'] or children_status['support'] else "" }
    - "child_in_school_6": ${ children[6].is_in_school if children_status['minors'] or children_status['support'] else "" }
    - "child_not_in_school_6": ${ not children[6].is_in_school if children_status['minors'] or children_status['support'] else "" }
    - "child_resident_yes_6": ${ True if children[6].is_resident == "Yes" and (children_status['minors'] or children_status['support']) else "" }
    - "child_resident_no_6": ${ True if children[6].is_resident == "No" and (children_status['minors'] or children_status['support']) else "" }
    - "child_resident_idk_6": ${ True if children[6].is_resident == "I don't know." and (children_status['minors'] or children_status['support']) else "" }
    - "child_address_6": ${ children[6].address.on_one_line(bare=True) if children_status['minors'] or children_status['support'] else "" }
    - "child_past_address_0_6": ${ children[6].former_addresses[0].on_one_line(bare=True) if children[6].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_1_6": ${ children[6].former_addresses[1].on_one_line(bare=True) if children[6].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_2_6": ${ children[6].former_addresses[2].on_one_line(bare=True) if children[6].has_former_address and (children_status['minors'] or children_status['support']) else "" }
    - "child_past_address_3_6": ${ children[6].former_addresses[3].on_one_line(bare=True) if children[6].has_former_address and (children_status['minors'] or children_status['support']) else "" }

---
attachment:
  variable name: other_children_info[i]
  name: other_children_info
  filename: other_children_info
  skip undefined: True
  editable: False
  pdf template file: other_children_info.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent__1": ${ other_parties[0].name.full(middle="full") }

    - "has_other_kids_during_marriage_no": ${ not has_other_kids_during_marriage }
    - "has_other_kids_during_marriage_yes": ${ has_other_kids_during_marriage }
    - "outside_child_0": ${ outside_children[0].name.full(middle="full") if has_other_kids_during_marriage else "" }
    - "outside_child_pet_0": ${ True if outside_children[0].parent == "My child" and has_other_kids_during_marriage else "" }
    - "outside_child_resp_0": ${ True if outside_children[0].parent == "My spouse's child" and has_other_kids_during_marriage else "" }
    - "outside_child_1": ${ outside_children[1].name.full(middle="full") if has_other_kids_during_marriage else "" }
    - "outside_child_pet_1": ${ True if outside_children[1].parent == "My child" and has_other_kids_during_marriage else "" }
    - "outside_child_resp_1": ${ True if outside_children[1].parent == "My spouse's child" and has_other_kids_during_marriage else "" }
    - "outside_child_2": ${ outside_children[2].name.full(middle="full") if has_other_kids_during_marriage else "" }
    - "outside_child_pet_2": ${ True if outside_children[2].parent == "My child" and has_other_kids_during_marriage else "" }
    - "outside_child_resp_2": ${ True if outside_children[2].parent == "My spouse's child" and has_other_kids_during_marriage else "" }
    - "outside_child_3": ${ outside_children[3].name.full(middle="full") if has_other_kids_during_marriage else "" }
    - "outside_child_pet_3": ${ True if outside_children[3].parent == "My child" and has_other_kids_during_marriage else "" }
    - "outside_child_resp_3": ${ True if outside_children[3].parent == "My spouse's child" and has_other_kids_during_marriage else "" }
    
    - "other_custody_case_no": ${ not other_custody_case if children_status['minors'] or children_status['support'] else "" }
    - "other_custody_case_yes": ${ other_custody_case if children_status['minors'] or children_status['support'] else "" }
    - "custody_case_number_0": ${ custody_cases[0].name.text if other_custody_case else "" }
    - "custody_case_location_0": ${ custody_cases[0].county + ", " + custody_cases[0].state if other_custody_case else "" }
    - "custody_case_kids_0": ${ custody_cases[0].kids_involved if other_custody_case else "" }
    - "custody_case_final_yes_0": ${ True if custody_cases[0].final_order and other_custody_case else "" }
    - "custody_case_final_no_0": ${ True if not custody_cases[0].final_order and other_custody_case else "" }
    - "custody_case_final_date_0": ${ custody_cases[0].final_order_date if custody_cases[0].final_order and other_custody_case else ""  }
    - "custody_case_number_1": ${ custody_cases[1].name.text if other_custody_case else "" }
    - "custody_case_location_1": ${ custody_cases[1].county + ", " + custody_cases[1].state if other_custody_case else "" }
    - "custody_case_kids_1": ${ custody_cases[1].kids_involved if other_custody_case else "" }
    - "custody_case_final_yes_1": ${ True if custody_cases[1].final_order and other_custody_case else "" }
    - "custody_case_final_no_1": ${ True if not custody_cases[1].final_order and other_custody_case else "" }
    - "custody_case_final_date_1": ${ custody_cases[1].final_order_date if custody_cases[1].final_order and other_custody_case else ""  }
    - "custody_case_number_2": ${ custody_cases[2].name.text if other_custody_case else "" }
    - "custody_case_location_2": ${ custody_cases[2].county + ", " + custody_cases[2].state if other_custody_case else "" }
    - "custody_case_kids_2": ${ custody_cases[2].kids_involved if other_custody_case else "" }
    - "custody_case_final_yes_2": ${ True if custody_cases[2].final_order and other_custody_case else "" }
    - "custody_case_final_no_2": ${ True if not custody_cases[2].final_order and other_custody_case else "" }
    - "custody_case_final_date_2": ${ custody_cases[2].final_order_date and other_custody_case if custody_cases[2].final_order else ""  }
    
    - "other_case_involving_kids_no": ${ not other_case_involving_kids if children_status['minors'] or children_status['support'] else "" }
    - "other_case_involving_kids_yes": ${ other_case_involving_kids if children_status['minors'] or children_status['support'] else "" }
    - "other_case_number_0": ${ other_cases[0].name.text if other_case_involving_kids else "" }
    - "other_case_location_0": ${ other_cases[0].county + ", " + other_cases[0].state if other_case_involving_kids else "" }
    - "other_case_kids_0": ${ other_cases[0].kids_involved if other_case_involving_kids else "" }
    - "other_case_final_yes_0": ${ True if other_cases[0].final_order and other_case_involving_kids else "" }
    - "other_case_final_no_0": ${ True if not other_cases[0].final_order and other_case_involving_kids else "" }
    - "other_case_final_date_0": ${ other_cases[0].final_order_date if other_cases[0].final_order and other_case_involving_kids else "" }
    - "other_case_adoption_0": ${ True if other_cases[0].type == "Adoption" and other_case_involving_kids else "" }
    - "other_case_juvenile_0": ${ True if other_cases[0].type == "Juvenile" and other_case_involving_kids else "" }
    - "other_case_op_0": ${ True if other_cases[0].type == "Order of Protection" and other_case_involving_kids else "" }
    - "other_case_other_0": ${ True if other_cases[0].type == "Other" and other_case_involving_kids else "" }
    - "other_case_other_text_0": ${ other_cases[0].other_type if other_cases[0].type == "Other" and other_case_involving_kids else "" }
    - "other_case_number_1": ${ other_cases[1].name.text if other_case_involving_kids else "" }
    - "other_case_location_1": ${ other_cases[1].county + ", " + other_cases[1].state if other_case_involving_kids else "" }
    - "other_case_kids_1": ${ other_cases[1].kids_involved if other_case_involving_kids else "" }
    - "other_case_final_yes_1": ${ True if other_cases[1].final_order and other_case_involving_kids else "" }
    - "other_case_final_no_1": ${ True if not other_cases[1].final_order and other_case_involving_kids else "" }
    - "other_case_final_date_1": ${ other_cases[1].final_order_date if other_cases[1].final_order and other_case_involving_kids else "" }
    - "other_case_adoption_1": ${ True if other_cases[1].type == "Adoption" and other_case_involving_kids else "" }
    - "other_case_juvenile_1": ${ True if other_cases[1].type == "Juvenile" and other_case_involving_kids else "" }
    - "other_case_op_1": ${ True if other_cases[1].type == "Order of Protection" and other_case_involving_kids else "" }
    - "other_case_other_1": ${ True if other_cases[1].type == "Other" and other_case_involving_kids else "" }
    - "other_case_other_text_1": ${ other_cases[1].other_type if other_cases[1].type == "Other" and other_case_involving_kids else "" }
    - "other_case_number_2": ${ other_cases[2].name.text if other_case_involving_kids else "" }
    - "other_case_location_2": ${ other_cases[2].county + ", " + other_cases[2].state if other_case_involving_kids else "" }
    - "other_case_kids_2": ${ other_cases[2].kids_involved if other_case_involving_kids else "" }
    - "other_case_final_yes_2": ${ True if other_cases[2].final_order and other_case_involving_kids else "" }
    - "other_case_final_no_2": ${ True if not other_cases[2].final_order and other_case_involving_kids else "" }
    - "other_case_final_date_2": ${ other_cases[2].final_order_date if other_cases[2].final_order and other_case_involving_kids else "" }
    - "other_case_adoption_2": ${ True if other_cases[2].type == "Adoption" and other_case_involving_kids else "" }
    - "other_case_juvenile_2": ${ True if other_cases[2].type == "Juvenile" and other_case_involving_kids else "" }
    - "other_case_op_2": ${ True if other_cases[2].type == "Order of Protection" and other_case_involving_kids else "" }
    - "other_case_other_2": ${ True if other_cases[2].type == "Other" and other_case_involving_kids else "" }
    - "other_case_other_text_2": ${ other_cases[2].other_type if other_cases[2].type == "Other" and other_case_involving_kids else "" }
    
    - "other_custodian_no": ${ not other_custodian if children_status['minors'] or children_status['support'] else "" }
    - "other_custodian_yes": ${ other_custodian if children_status['minors'] or children_status['support'] else "" }
    - "custodian_name_0": ${ custodians[0].name.full(middle="full") if other_custodian else "" }
    - "custodian_address_0": ${ custodians[0].address.on_one_line(bare=True) if other_custodian else "" }
    - "custodian_kids_0": ${ custodians[0].kids_involved if other_custodian else "" }
    - "custodian_name_1": ${ custodians[1].name.full(middle="full") if other_custodian else "" }
    - "custodian_address_1": ${ custodians[1].address.on_one_line(bare=True) if other_custodian else "" }
    - "custodian_kids_1": ${ custodians[1].kids_involved if other_custodian else "" }
    - "custodian_name_2": ${ custodians[2].name.full(middle="full") if other_custodian else "" }
    - "custodian_address_2": ${ custodians[2].address.on_one_line(bare=True) if other_custodian else "" }
    - "custodian_kids_2": ${ custodians[2].kids_involved if other_custodian else "" }
    
    - "kids_lived_with_other_adult_no": ${ not kids_lived_with_other_adult if children_status['minors'] or children_status['support'] else "" }
    - "kids_lived_with_other_adult_yes": ${ kids_lived_with_other_adult if children_status['minors'] or children_status['support'] else "" }
    - "other_adult_name_0": ${ other_adults[0].name.full(middle="full") if kids_lived_with_other_adult else "" }
    - "other_adult_kids_0": ${ other_adults[0].kids_involved if kids_lived_with_other_adult else "" }
    - "other_adult_relationship_0": ${ other_adults[0].relationship if kids_lived_with_other_adult else "" }
    - "other_adult_address_0": ${ other_adults[0].address.on_one_line(bare=True) if kids_lived_with_other_adult else "" }
    - "other_adult_name_1": ${ other_adults[1].name.full(middle="full") if kids_lived_with_other_adult else "" }
    - "other_adult_kids_1": ${ other_adults[1].kids_involved if kids_lived_with_other_adult else "" }
    - "other_adult_relationship_1": ${ other_adults[1].relationship if kids_lived_with_other_adult else "" }
    - "other_adult_address_1": ${ other_adults[1].address.on_one_line(bare=True) if kids_lived_with_other_adult else "" }
    - "other_adult_name_2": ${ other_adults[2].name.full(middle="full") if kids_lived_with_other_adult else "" }
    - "other_adult_kids_2": ${ other_adults[2].kids_involved if kids_lived_with_other_adult else "" }
    - "other_adult_relationship_2": ${ other_adults[2].relationship if kids_lived_with_other_adult else "" }
    - "other_adult_address_2": ${ other_adults[2].address.on_one_line(bare=True) if kids_lived_with_other_adult else "" }

---
attachment:
  variable name: judgment_no_kids[i]
  name: judgment_no_kids
  filename: judgment_no_kids
  skip undefined: True
  editable: True
  pdf template file: judgment_no_kids.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent__1": ${ other_parties[0].name.full(middle="full") }
    - "marriage_date": ${ marriage_date }
    - "marriage_location": ${ marriage_county + ", " + marriage_state if marriage_in_america else marriage_intl_text + ", " + marriage_country }
    - "no_children_cb": ${ not any_children_together }
    - "only_adult_children_cb": ${ True if any_children_together and children_status['adults'] else "" }
    - "adult_children_list": ${ comma_and_list(formatted_adult_child_list) if any_children_together and children_status['adults'] else "" }
    - "has_real_estate_yes": ${ has_real_estate }
    - "has_real_estate_no": ${ not has_real_estate }
    - "real_estate_address": ${ real_estate.on_one_line(bare=True) if has_real_estate else "" }
    - "attach_legal_desc_yes": ${ True if has_real_estate and attach_legal_desc == "Yes" else "" }
    - "attach_legal_desc_no": ${ True if has_real_estate and attach_legal_desc == "No" else "" }
    - "debt_creditor_0": ${ debts[0].name.text if include_debts else "" }
    - "debt_amount_0": ${ thousands(debts[0].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_0": ${ True if debts[0].payment_division == "Me" or debts[0].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_0": |
        % if include_debts:
        % if debts[0].payment_division == "Me":
        100
        % elif debts[0].payment_division == "split":
        ${ debts[0].pet_percent }
        % endif
        % endif
    - "debt_res_pay_0": ${True if debts[0].payment_division == "them" or debts[0].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_0": |
        % if include_debts:
        % if debts[0].payment_division == "them":
        100
        % elif debts[0].payment_division == "split":
        ${ 100 - debts[0].pet_percent }
        % endif
        % endif
    - "debt_creditor_1": ${ debts[1].name.text if include_debts else "" }
    - "debt_amount_1": ${ thousands(debts[1].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_1": ${ True if debts[1].payment_division == "Me" or debts[1].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_1": |
        % if include_debts:
        % if debts[1].payment_division == "Me":
        100
        % elif debts[1].payment_division == "split":
        ${ debts[1].pet_percent }
        % endif
        % endif
    - "debt_res_pay_1": ${True if debts[1].payment_division == "them" or debts[1].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_1": |
        % if include_debts:
        % if debts[1].payment_division == "them":
        100
        % elif debts[1].payment_division == "split":
        ${ 100 - debts[1].pet_percent }
        % endif
        % endif
    - "debt_creditor_2": ${ debts[2].name.text if include_debts else "" }
    - "debt_amount_2": ${ thousands(debts[2].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_2": ${ True if debts[2].payment_division == "Me" or debts[2].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_2": |
        % if include_debts:
        % if debts[2].payment_division == "Me":
        100
        % elif debts[2].payment_division == "split":
        ${ debts[2].pet_percent }
        % endif
        % endif
    - "debt_res_pay_2": ${True if debts[2].payment_division == "them" or debts[2].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_2": |
        % if include_debts:
        % if debts[2].payment_division == "them":
        100
        % elif debts[2].payment_division == "split":
        ${ 100 - debts[2].pet_percent }
        % endif
        % endif
    - "debt_creditor_3": ${ debts[3].name.text if include_debts else "" }
    - "debt_amount_3": ${ thousands(debts[3].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_3": ${ True if debts[3].payment_division == "Me" or debts[3].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_3": |
        % if include_debts:
        % if debts[3].payment_division == "Me":
        100
        % elif debts[3].payment_division == "split":
        ${ debts[3].pet_percent }
        % endif
        % endif
    - "debt_res_pay_3": ${True if debts[3].payment_division == "them" or debts[3].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_3": |
        % if include_debts:
        % if debts[3].payment_division == "them":
        100
        % elif debts[3].payment_division == "split":
        ${ 100 - debts[3].pet_percent }
        % endif
        % endif
    - "debt_creditor_4": ${ debts[4].name.text if include_debts else "" }
    - "debt_amount_4": ${ thousands(debts[4].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_4": ${ True if debts[4].payment_division == "Me" or debts[4].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_4": |
        % if include_debts:
        % if debts[4].payment_division == "Me":
        100
        % elif debts[4].payment_division == "split":
        ${ debts[4].pet_percent }
        % endif
        % endif
    - "debt_res_pay_4": ${True if debts[4].payment_division == "them" or debts[4].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_4": |
        % if include_debts:
        % if debts[4].payment_division == "them":
        100
        % elif debts[4].payment_division == "split":
        ${ 100 - debts[4].pet_percent }
        % endif
        % endif

    - "additional_debts_cb": ${ True if include_debts and debts.number() > 5 else "" }
    - "unlisted_debts_split": ${ True if include_debts and unlisted_debts["joint"] else "" }
    - "unlisted_debts_own": ${ True if include_debts and unlisted_debts["name"] else "" }
    - "retire_own_yes": ${ True if retirement_options == "own" else "" }
    - "retire_own_no": ${ True if retirement_options == "split" else "" }
    - "res_pension_name_0": ${ pensions_resp[0].name.text if retirement_options == "split" else "" }
    - "res_pension_yes_0": ${ True if pensions_resp[0].payment_division == "Yes" and retirement_options == "split" else "" }
    - "res_pension_pct_0": ${ pensions_resp[0].pet_percent if pensions_resp[0].payment_division == "Yes" and retirement_options == "split" else "" }
    - "res_pension_no_0": ${ True if pensions_resp[0].payment_division == "No" and retirement_options == "split" else "" }
    - "res_pension_name_1": ${ pensions_resp[1].name.text if retirement_options == "split" else "" }
    - "res_pension_yes_1": ${ True if pensions_resp[1].payment_division == "Yes" and retirement_options == "split" else "" }
    - "res_pension_pct_1": ${ pensions_resp[1].pet_percent if pensions_resp[1].payment_division == "Yes" and retirement_options == "split" else "" }
    - "res_pension_no_1": ${ True if pensions_resp[1].payment_division == "No" and retirement_options == "split" else "" }
    - "res_pension_name_2": ${ pensions_resp[2].name.text if retirement_options == "split" else "" }
    - "res_pension_yes_2": ${ True if pensions_resp[2].payment_division == "Yes" and retirement_options == "split" else "" }
    - "res_pension_pct_2": ${ pensions_resp[2].pet_percent if pensions_resp[2].payment_division == "Yes" and retirement_options == "split" else "" }
    - "res_pension_no_2": ${ True if pensions_resp[2].payment_division == "No" and retirement_options == "split" else "" }
    - "res_qdro_pet": ${ True if resp_pensions_qdro == "Me" and retirement_options == "split" else "" }
    - "res_qdro_res": ${ True if resp_pensions_qdro == "Them" and retirement_options == "split" else "" }

    - "pet_pension_name_0": ${ pensions_pet[0].name.text if retirement_options == "split" else "" }
    - "pet_pension_yes_0": ${ True if pensions_pet[0].payment_division == "Yes" and retirement_options == "split" else "" }
    - "pet_pension_pct_0": ${ pensions_pet[0].pet_percent if pensions_pet[0].payment_division == "Yes" and retirement_options == "split" else "" }
    - "pet_pension_no_0": ${ True if pensions_pet[0].payment_division == "No" and retirement_options == "split" else "" }
    - "pet_pension_name_1": ${ pensions_pet[1].name.text if retirement_options == "split" else "" }
    - "pet_pension_yes_1": ${ True if pensions_pet[1].payment_division == "Yes" and retirement_options == "split" else "" }
    - "pet_pension_pct_1": ${ pensions_pet[1].pet_percent if pensions_pet[1].payment_division == "Yes" and retirement_options == "split" else "" }
    - "pet_pension_no_1": ${ True if pensions_pet[1].payment_division == "No" and retirement_options == "split" else "" }
    - "pet_pension_name_2": ${ pensions_pet[2].name.text if retirement_options == "split" else "" }
    - "pet_pension_yes_2": ${ True if pensions_pet[2].payment_division == "Yes" and retirement_options == "split" else "" }
    - "pet_pension_pct_2": ${ pensions_pet[2].pet_percent if pensions_pet[2].payment_division == "Yes" and retirement_options == "split" else "" }
    - "pet_pension_no_2": ${ True if pensions_pet[2].payment_division == "No" and retirement_options == "split" else "" }
    - "pet_qdro_pet": ${ True if pet_pensions_qdro == "Me" and retirement_options == "split" else "" }
    - "pet_qdro_res": ${ True if pet_pensions_qdro == "Them" and retirement_options == "split" else "" }
    - "other_pension_cb": ${pensions_other if retirement_options == "own" or retirement_options == "split" else "" }
    - "other_pension_text": ${pensions_other_text if (retirement_options == "own" or retirement_options == "split") and pensions_other else "" }

    - "property_keep_own": ${True if include_property and property_keep else "" }
    - "property_divide_shared": ${True if include_property and property_list.number() > 0 else "" }
    - "property_name_0": ${ property_list[0].name.text if include_property and property_list.number() > 0 else "" }
    - "property_to_pet_0": ${ property_list[0].party == "pet" if include_property and property_list.number() > 0 else "" }
    - "property_to_res_0": ${ property_list[0].party == "res" if include_property and property_list.number() > 0 else "" }
    - "property_name_1": ${ property_list[1].name.text if include_property and property_list.number() > 1 else "" }
    - "property_to_pet_1": ${ property_list[1].party == "pet" if include_property and property_list.number() > 1 else "" }
    - "property_to_res_1": ${ property_list[1].party == "res" if include_property and property_list.number() > 1 else "" }
    - "property_name_2": ${ property_list[2].name.text if include_property and property_list.number() > 2 else "" }
    - "property_to_pet_2": ${ property_list[2].party == "pet" if include_property and property_list.number() > 2 else "" }
    - "property_to_res_2": ${ property_list[2].party == "res" if include_property and property_list.number() > 2 else "" }
    - "property_name_3": ${ property_list[3].name.text if include_property and property_list.number() > 3 else "" }
    - "property_to_pet_3": ${ property_list[3].party == "pet" if include_property and property_list.number() > 3 else "" }
    - "property_to_res_3": ${ property_list[3].party == "res" if include_property and property_list.number() > 3 else "" }
    - "property_name_4": ${ property_list[4].name.text if include_property and property_list.number() > 4 else "" }
    - "property_to_pet_4": ${ property_list[4].party == "pet" if include_property and property_list.number() > 4 else "" }
    - "property_to_res_4": ${ property_list[4].party == "res" if include_property and property_list.number() > 4 else "" }
    - "additional_property_cb": ${ True if include_property and property_list.number() > 5 else "" }
    - "property_exchange_yes": ${ True if include_property and property_exchange else "" }
    - "property_other": ${ True if include_property and property_other else "" }
    - "property_other_text": ${ property_other_text if include_property and property_other else ""}
    - "non_marital_prop_pet": ${ pet_nonmarital_property if include_property and pet_has_nonmarital_property else "" }
    - "non_marital_prop_res": ${ resp_nonmarital_property if include_property and resp_has_nonmarital_property else ""  }
    
    - "pet_nonmarital_debt": ${ pet_nonmarital_debts if include_debts and pet_has_nonmarital_debts else "" }
    - "res_nonmarital_debt": ${ resp_nonmarital_debts if include_debts and resp_has_nonmarital_debts else "" }
    
    - "user_former_name_yes": ${ users[0].use_former_name }
    - "user_former_name_first": ${ users[0].aliases[0].first if users[0].use_former_name else "" }
    - "user_former_name_middle": ${ users[0].aliases[0].middle if users[0].use_former_name else "" }
    - "user_former_name_last": |
        % if users[0].use_former_name:
        % if users[0].aliases[0].suffix != "":
        ${ users[0].aliases[0].last + ", " + users[0].aliases[0].suffix }
        % else:
        ${ users[0].aliases[0].last }
        % endif
        % endif

---
attachment:
  variable name: judgment_kids[i]
  name: judgment_kids
  filename: judgment_kids
  skip undefined: True
  editable: True
  pdf template file: judgment_kids.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent__1": ${ other_parties[0].name.full(middle="full") }
    - "marriage_date": ${ marriage_date }
    - "marriage_location": ${ marriage_county + ", " + marriage_state if marriage_in_america else marriage_intl_text + ", " + marriage_country }
    - "no_minor_children_cb": ${ True if any_minor_children == False else "" }
    - "minor_child_name_0": |
        % if children_status['minors'] or children_status['support']:
        % if any_minor_children:
        % if minor_children_list.number() > 0:
        ${ minor_children_list[0].name.full(middle="full") }
        % endif
        % endif
        % endif
    - "minor_child_name_1": |
        % if children_status['minors'] or children_status['support']:
        % if any_minor_children:
        % if minor_children_list.number() > 1:
        ${ minor_children_list[1].name.full(middle="full") }
        % endif
        % endif
        % endif
    - "minor_child_name_2": |
        % if children_status['minors'] or children_status['support']:
        % if any_minor_children:
        % if minor_children_list.number() > 2:
        ${ minor_children_list[2].name.full(middle="full") }
        % endif
        % endif
        % endif
    - "additional_minor_children_cb": |
        % if children_status['minors'] or children_status['support']:
        % if any_minor_children:
        % if minor_children_list.number() > 3:
        True
        % endif
        % endif
        % endif
    - "no_support_children_cb": ${ True if any_support_children == False else "" }
    - "support_child_name_0": |
        % if children_status['minors'] or children_status['support']:
        % if any_support_children:
        % if support_children_list.number() > 0:
        ${ support_children_list[0].name.full(middle="full") }
        % endif
        % endif
        % endif
    - "support_child_name_1": |
        % if children_status['minors'] or children_status['support']:
        % if any_support_children:
        % if support_children_list.number() > 1:
        ${ support_children_list[1].name.full(middle="full") }
        % endif
        % endif
        % endif
    - "support_child_name_2": |
        % if children_status['minors'] or children_status['support']:
        % if any_support_children:
        % if support_children_list.number() > 2:
        ${ support_children_list[2].name.full(middle="full") }
        % endif
        % endif
        % endif
    - "additional_support_children_cb": |
        % if children_status['minors'] or children_status['support']:
        % if any_support_children:
        % if support_children_list.number() > 3:
        True
        % endif
        % endif
        % endif
    - "no_outside_children_cb": ${ True if not has_other_kids_during_marriage else "" }
    - "outside_child_name_0": ${ outside_children[0].name.full(middle="full") if has_other_kids_during_marriage and outside_children.number() > 0 else "" }
    - "outside_child_name_1": ${ outside_children[1].name.full(middle="full") if has_other_kids_during_marriage and outside_children.number() > 1 else "" }
    - "outside_child_name_2": ${ outside_children[2].name.full(middle="full") if has_other_kids_during_marriage and outside_children.number() > 2 else "" }
    - "additional_outside_children_cb": ${ True if has_other_kids_during_marriage and outside_children.number() > 3 else "" }

    - "has_real_estate_yes": ${ has_real_estate }
    - "has_real_estate_no": ${ not has_real_estate }
    - "real_estate_address": ${ real_estate.on_one_line(bare=True) if has_real_estate else "" }
    - "attach_legal_desc_yes": ${ True if has_real_estate and attach_legal_desc == "Yes" else "" }
    - "attach_legal_desc_no": ${ True if has_real_estate and attach_legal_desc == "No" else "" }

    - "claim_deps_all_pet": ${ True if taxes_choice == "all" and tax_all == "Me" else "" }
    - "claim_deps_all_res": ${ True if taxes_choice == "all" and tax_all == "Them" else "" }
    - "claim_deps_even_pet": ${ True if taxes_choice == "turns" and tax_turns == "even" else "" }
    - "claim_deps_even_res": ${ True if taxes_choice == "turns" and tax_turns == "odd" else "" }
    - "claim_deps_odd_pet": ${ True if taxes_choice == "turns" and tax_turns == "odd" else "" }
    - "claim_deps_odd_res": ${ True if taxes_choice == "turns" and tax_turns == "even" else "" }
    - "claim_dep_half_cb": ${ True if taxes_choice == "split" else "" }
    - "claim_deps_half_odd_pet": ${ True if taxes_choice == "split" and tax_split_odd == "Me" else "" }
    - "claim_deps_half_odd_res": ${ True if taxes_choice == "split" and tax_split_odd == "Them" else "" }
    - "claim_deps_half_even_pet": ${ True if taxes_choice == "split" and tax_split_even == "Me" else "" }
    - "claim_deps_half_even_res": ${ True if taxes_choice == "split" and tax_split_even == "Them" else "" }

    - "debt_creditor_0": ${ debts[0].name.text if include_debts else "" }
    - "debt_amount_0": ${ thousands(debts[0].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_0": ${ True if debts[0].payment_division == "Me" or debts[0].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_0": |
        % if include_debts:
        % if debts[0].payment_division == "Me":
        100
        % elif debts[0].payment_division == "split":
        ${ debts[0].pet_percent }
        % endif
        % endif
    - "debt_res_pay_0": ${True if debts[0].payment_division == "them" or debts[0].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_0": |
        % if include_debts:
        % if debts[0].payment_division == "them":
        100
        % elif debts[0].payment_division == "split":
        ${ 100 - debts[0].pet_percent }
        % endif
        % endif
    - "debt_creditor_1": ${ debts[1].name.text if include_debts else "" }
    - "debt_amount_1": ${ thousands(debts[1].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_1": ${ True if debts[1].payment_division == "Me" or debts[1].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_1": |
        % if include_debts:
        % if debts[1].payment_division == "Me":
        100
        % elif debts[1].payment_division == "split":
        ${ debts[1].pet_percent }
        % endif
        % endif
    - "debt_res_pay_1": ${True if debts[1].payment_division == "them" or debts[1].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_1": |
        % if include_debts:
        % if debts[1].payment_division == "them":
        100
        % elif debts[1].payment_division == "split":
        ${ 100 - debts[1].pet_percent }
        % endif
        % endif
    - "debt_creditor_2": ${ debts[2].name.text if include_debts else "" }
    - "debt_amount_2": ${ thousands(debts[2].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_2": ${ True if debts[2].payment_division == "Me" or debts[2].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_2": |
        % if include_debts:
        % if debts[2].payment_division == "Me":
        100
        % elif debts[2].payment_division == "split":
        ${ debts[2].pet_percent }
        % endif
        % endif
    - "debt_res_pay_2": ${True if debts[2].payment_division == "them" or debts[2].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_2": |
        % if include_debts:
        % if debts[2].payment_division == "them":
        100
        % elif debts[2].payment_division == "split":
        ${ 100 - debts[2].pet_percent }
        % endif
        % endif
    - "debt_creditor_3": ${ debts[3].name.text if include_debts else "" }
    - "debt_amount_3": ${ thousands(debts[3].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_3": ${ True if debts[3].payment_division == "Me" or debts[3].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_3": |
        % if include_debts:
        % if debts[3].payment_division == "Me":
        100
        % elif debts[3].payment_division == "split":
        ${ debts[3].pet_percent }
        % endif
        % endif
    - "debt_res_pay_3": ${True if debts[3].payment_division == "them" or debts[3].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_3": |
        % if include_debts:
        % if debts[3].payment_division == "them":
        100
        % elif debts[3].payment_division == "split":
        ${ 100 - debts[3].pet_percent }
        % endif
        % endif
    - "debt_creditor_4": ${ debts[4].name.text if include_debts else "" }
    - "debt_amount_4": ${ thousands(debts[4].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_4": ${ True if debts[4].payment_division == "Me" or debts[4].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_4": |
        % if include_debts:
        % if debts[4].payment_division == "Me":
        100
        % elif debts[4].payment_division == "split":
        ${ debts[4].pet_percent }
        % endif
        % endif
    - "debt_res_pay_4": ${True if debts[4].payment_division == "them" or debts[4].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_4": |
        % if include_debts:
        % if debts[4].payment_division == "them":
        100
        % elif debts[4].payment_division == "split":
        ${ 100 - debts[4].pet_percent }
        % endif
        % endif

    - "additional_debts_cb": ${ True if include_debts and debts.number() > 5 else "" }
    - "unlisted_debts_split": ${ True if include_debts and unlisted_debts["joint"] else "" }
    - "unlisted_debts_own": ${ True if include_debts and unlisted_debts["name"] else "" }
    - "retire_own_yes": ${ True if retirement_options == "own" else "" }
    - "retire_own_no": ${ True if retirement_options == "split" else "" }
    - "res_pension_name_0": ${ pensions_resp[0].name.text if retirement_options == "split" else "" }
    - "res_pension_yes_0": ${ True if pensions_resp[0].payment_division == "Yes" and retirement_options == "split" else "" }
    - "res_pension_pct_0": ${ pensions_resp[0].pet_percent if pensions_resp[0].payment_division == "Yes" and retirement_options == "split" else "" }
    - "res_pension_no_0": ${ True if pensions_resp[0].payment_division == "No" and retirement_options == "split" else "" }
    - "res_pension_name_1": ${ pensions_resp[1].name.text if retirement_options == "split" else "" }
    - "res_pension_yes_1": ${ True if pensions_resp[1].payment_division == "Yes" and retirement_options == "split" else "" }
    - "res_pension_pct_1": ${ pensions_resp[1].pet_percent if pensions_resp[1].payment_division == "Yes" and retirement_options == "split" else "" }
    - "res_pension_no_1": ${ True if pensions_resp[1].payment_division == "No" and retirement_options == "split" else "" }
    - "res_pension_name_2": ${ pensions_resp[2].name.text if retirement_options == "split" else "" }
    - "res_pension_yes_2": ${ True if pensions_resp[2].payment_division == "Yes" and retirement_options == "split" else "" }
    - "res_pension_pct_2": ${ pensions_resp[2].pet_percent if pensions_resp[2].payment_division == "Yes" and retirement_options == "split" else "" }
    - "res_pension_no_2": ${ True if pensions_resp[2].payment_division == "No" and retirement_options == "split" else "" }
    - "res_qdro_pet": ${ True if resp_pensions_qdro == "Me" and retirement_options == "split" else "" }
    - "res_qdro_res": ${ True if resp_pensions_qdro == "Them" and retirement_options == "split" else "" }

    - "pet_pension_name_0": ${ pensions_pet[0].name.text if retirement_options == "split" else "" }
    - "pet_pension_yes_0": ${ True if pensions_pet[0].payment_division == "Yes" and retirement_options == "split" else "" }
    - "pet_pension_pct_0": ${ pensions_pet[0].pet_percent if pensions_pet[0].payment_division == "Yes" and retirement_options == "split" else "" }
    - "pet_pension_no_0": ${ True if pensions_pet[0].payment_division == "No" and retirement_options == "split" else "" }
    - "pet_pension_name_1": ${ pensions_pet[1].name.text if retirement_options == "split" else "" }
    - "pet_pension_yes_1": ${ True if pensions_pet[1].payment_division == "Yes" and retirement_options == "split" else "" }
    - "pet_pension_pct_1": ${ pensions_pet[1].pet_percent if pensions_pet[1].payment_division == "Yes" and retirement_options == "split" else "" }
    - "pet_pension_no_1": ${ True if pensions_pet[1].payment_division == "No" and retirement_options == "split" else "" }
    - "pet_pension_name_2": ${ pensions_pet[2].name.text if retirement_options == "split" else "" }
    - "pet_pension_yes_2": ${ True if pensions_pet[2].payment_division == "Yes" and retirement_options == "split" else "" }
    - "pet_pension_pct_2": ${ pensions_pet[2].pet_percent if pensions_pet[2].payment_division == "Yes" and retirement_options == "split" else "" }
    - "pet_pension_no_2": ${ True if pensions_pet[2].payment_division == "No" and retirement_options == "split" else "" }
    - "pet_qdro_pet": ${ True if pet_pensions_qdro == "Me" and retirement_options == "split" else "" }
    - "pet_qdro_res": ${ True if pet_pensions_qdro == "Them" and retirement_options == "split" else "" }
    - "other_pension_cb": ${pensions_other if retirement_options == "own" or retirement_options == "split" else "" }
    - "other_pension_text": ${pensions_other_text if (retirement_options == "own" or retirement_options == "split") and pensions_other else "" }

    - "property_keep_own": ${True if include_property and property_keep else "" }
    - "property_divide_shared": ${True if include_property and property_list.number() > 0 else "" }
    - "property_name_0": ${ property_list[0].name.text if include_property and property_list.number() > 0 else "" }
    - "property_to_pet_0": ${ property_list[0].party == "pet" if include_property and property_list.number() > 0 else "" }
    - "property_to_res_0": ${ property_list[0].party == "res" if include_property and property_list.number() > 0 else "" }
    - "property_name_1": ${ property_list[1].name.text if include_property and property_list.number() > 1 else "" }
    - "property_to_pet_1": ${ property_list[1].party == "pet" if include_property and property_list.number() > 1 else "" }
    - "property_to_res_1": ${ property_list[1].party == "res" if include_property and property_list.number() > 1 else "" }
    - "property_name_2": ${ property_list[2].name.text if include_property and property_list.number() > 2 else "" }
    - "property_to_pet_2": ${ property_list[2].party == "pet" if include_property and property_list.number() > 2 else "" }
    - "property_to_res_2": ${ property_list[2].party == "res" if include_property and property_list.number() > 2 else "" }
    - "property_name_3": ${ property_list[3].name.text if include_property and property_list.number() > 3 else "" }
    - "property_to_pet_3": ${ property_list[3].party == "pet" if include_property and property_list.number() > 3 else "" }
    - "property_to_res_3": ${ property_list[3].party == "res" if include_property and property_list.number() > 3 else "" }
    - "property_name_4": ${ property_list[4].name.text if include_property and property_list.number() > 4 else "" }
    - "property_to_pet_4": ${ property_list[4].party == "pet" if include_property and property_list.number() > 4 else "" }
    - "property_to_res_4": ${ property_list[4].party == "res" if include_property and property_list.number() > 4 else "" }
    - "additional_property_cb": ${ True if include_property and property_list.number() > 5 else "" }
    - "property_exchange_yes": ${ True if include_property and property_exchange else "" }
    - "property_other": ${ True if include_property and property_other else "" }
    - "property_other_text": ${ property_other_text if include_property and property_other else ""}
    - "non_marital_prop_pet": ${ pet_nonmarital_property if include_property and pet_has_nonmarital_property else "" }
    - "non_marital_prop_res": ${ resp_nonmarital_property if include_property and resp_has_nonmarital_property else ""  }
    
    - "pet_nonmarital_debt": ${ pet_nonmarital_debts if include_debts and pet_has_nonmarital_debts else "" }
    - "res_nonmarital_debt": ${ resp_nonmarital_debts if include_debts and resp_has_nonmarital_debts else "" }
    
    - "user_former_name_yes": ${ users[0].use_former_name }
    - "user_former_name_first": ${ users[0].aliases[0].first if users[0].use_former_name else "" }
    - "user_former_name_middle": ${ users[0].aliases[0].middle if users[0].use_former_name else "" }
    - "user_former_name_last": |
        % if users[0].use_former_name:
        % if users[0].aliases[0].suffix != "":
        ${ users[0].aliases[0].last + ", " + users[0].aliases[0].suffix }
        % else:
        ${ users[0].aliases[0].last }
        % endif
        % endif

---
attachment:
  variable name: additional_kids_judgment[i]
  name: additional_kids_judgment
  filename: additional_kids_judgment
  skip undefined: True
  editable: True
  pdf template file: additional_kids_judgment.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent__1": ${ other_parties[0].name.full(middle="full") }
    - "no_additional_minor_children_cb": |
        % if any_minor_children:
        % if minor_children_list.number() > 3:
        False
        % else:
        True
        % endif
        % else:
        True
        % endif
    - "minor_child_name_3": |
        % if any_minor_children:
        % if minor_children_list.number() > 3:
        ${ minor_children_list[3].name.full(middle="full") }
        % endif
        % endif
    - "minor_child_name_4": |
        % if any_minor_children:
        % if minor_children_list.number() > 4:
        ${ minor_children_list[4].name.full(middle="full") }
        % endif
        % endif
    - "minor_child_name_5": |
        % if any_minor_children:
        % if minor_children_list.number() > 5:
        ${ minor_children_list[5].name.full(middle="full") }
        % endif
        % endif
    - "minor_child_name_6": |
        % if any_minor_children:
        % if minor_children_list.number() > 6:
        ${ minor_children_list[6].name.full(middle="full") }
        % endif
        % endif
    - "no_additional_support_children_cb": |
        % if any_support_children:
        % if support_children_list.number() > 3:
        False
        % else:
        True
        % endif
        % else:
        True
        % endif
    - "support_child_name_3": |
        % if any_support_children:
        % if support_children_list.number() > 3:
        ${ support_children_list[3].name.full(middle="full") }
        % endif
        % endif
    - "support_child_name_4": |
        % if any_support_children:
        % if support_children_list.number() > 4:
        ${ support_children_list[4].name.full(middle="full") }
        % endif
        % endif
    - "support_child_name_5": |
        % if any_support_children:
        % if support_children_list.number() > 5:
        ${ support_children_list[5].name.full(middle="full") }
        % endif
        % endif
    - "support_child_name_6": |
        % if any_support_children:
        % if support_children_list.number() > 6:
        ${ support_children_list[6].name.full(middle="full") }
        % endif
        % endif
    - "no_outside_support_children": |
        % if has_other_kids_during_marriage:
        % if outside_children.number() > 3:
        False
        % else:
        True
        % endif
        % else:
        True
        % endif
    - "outside_child_name_3": ${ outside_children[3].name.full(middle="full") if has_other_kids_during_marriage and outside_children.number() > 3 else "" }
    - "outside_child_name_4": ${ outside_children[4].name.full(middle="full") if has_other_kids_during_marriage and outside_children.number() > 4 else "" }
    - "outside_child_name_5": ${ outside_children[5].name.full(middle="full") if has_other_kids_during_marriage and outside_children.number() > 5 else "" }
    - "outside_child_name_6": ${ outside_children[6].name.full(middle="full") if has_other_kids_during_marriage and outside_children.number() > 6 else "" }

---
attachment:
  variable name: additional_debts[i]
  name: additional_debts
  filename: additional_debts
  skip undefined: True
  editable: True
  pdf template file: additional_debts.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent__1": ${ other_parties[0].name.full(middle="full") }

    - "debt_creditor_5": ${ debts[5].name.text if include_debts else "" }
    - "debt_amount_5": ${ thousands(debts[5].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_5": ${ True if debts[5].payment_division == "Me" or debts[5].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_5": |
        % if include_debts:
        % if debts[5].payment_division == "Me":
        100
        % elif debts[5].payment_division == "split":
        ${ debts[5].pet_percent }
        % endif
        % endif
    - "debt_res_pay_5": ${True if debts[5].payment_division == "them" or debts[5].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_5": |
        % if include_debts:
        % if debts[5].payment_division == "them":
        100
        % elif debts[5].payment_division == "split":
        ${ 100 - debts[5].pet_percent }
        % endif
        % endif
    - "debt_creditor_6": ${ debts[6].name.text if include_debts else "" }
    - "debt_amount_6": ${ thousands(debts[6].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_6": ${ True if debts[6].payment_division == "Me" or debts[6].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_6": |
        % if include_debts:
        % if debts[6].payment_division == "Me":
        100
        % elif debts[6].payment_division == "split":
        ${ debts[6].pet_percent }
        % endif
        % endif
    - "debt_res_pay_6": ${True if debts[6].payment_division == "them" or debts[6].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_6": |
        % if include_debts:
        % if debts[6].payment_division == "them":
        100
        % elif debts[6].payment_division == "split":
        ${ 100 - debts[6].pet_percent }
        % endif
        % endif
    - "debt_creditor_7": ${ debts[7].name.text if include_debts else "" }
    - "debt_amount_7": ${ thousands(debts[7].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_7": ${ True if debts[7].payment_division == "Me" or debts[7].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_7": |
        % if include_debts:
        % if debts[7].payment_division == "Me":
        100
        % elif debts[7].payment_division == "split":
        ${ debts[7].pet_percent }
        % endif
        % endif
    - "debt_res_pay_7": ${True if debts[7].payment_division == "them" or debts[7].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_7": |
        % if include_debts:
        % if debts[7].payment_division == "them":
        100
        % elif debts[7].payment_division == "split":
        ${ 100 - debts[7].pet_percent }
        % endif
        % endif
    - "debt_creditor_8": ${ debts[8].name.text if include_debts else "" }
    - "debt_amount_8": ${ thousands(debts[8].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_8": ${ True if debts[8].payment_division == "Me" or debts[8].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_8": |
        % if include_debts:
        % if debts[8].payment_division == "Me":
        100
        % elif debts[8].payment_division == "split":
        ${ debts[8].pet_percent }
        % endif
        % endif
    - "debt_res_pay_8": ${True if debts[8].payment_division == "them" or debts[8].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_8": |
        % if include_debts:
        % if debts[8].payment_division == "them":
        100
        % elif debts[8].payment_division == "split":
        ${ 100 - debts[8].pet_percent }
        % endif
        % endif
    - "debt_creditor_9": ${ debts[9].name.text if include_debts else "" }
    - "debt_amount_9": ${ thousands(debts[9].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_9": ${ True if debts[9].payment_division == "Me" or debts[9].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_9": |
        % if include_debts:
        % if debts[9].payment_division == "Me":
        100
        % elif debts[9].payment_division == "split":
        ${ debts[9].pet_percent }
        % endif
        % endif
    - "debt_res_pay_9": ${True if debts[9].payment_division == "them" or debts[9].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_9": |
        % if include_debts:
        % if debts[9].payment_division == "them":
        100
        % elif debts[9].payment_division == "split":
        ${ 100 - debts[9].pet_percent }
        % endif
        % endif
    - "debt_creditor_10": ${ debts[10].name.text if include_debts else "" }
    - "debt_amount_10": ${ thousands(debts[10].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_10": ${ True if debts[10].payment_division == "Me" or debts[10].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_10": |
        % if include_debts:
        % if debts[10].payment_division == "Me":
        100
        % elif debts[10].payment_division == "split":
        ${ debts[10].pet_percent }
        % endif
        % endif
    - "debt_res_pay_10": ${True if debts[10].payment_division == "them" or debts[10].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_10": |
        % if include_debts:
        % if debts[10].payment_division == "them":
        100
        % elif debts[10].payment_division == "split":
        ${ 100 - debts[10].pet_percent }
        % endif
        % endif
    - "debt_creditor_11": ${ debts[11].name.text if include_debts else "" }
    - "debt_amount_11": ${ thousands(debts[11].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_11": ${ True if debts[11].payment_division == "Me" or debts[11].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_11": |
        % if include_debts:
        % if debts[11].payment_division == "Me":
        100
        % elif debts[11].payment_division == "split":
        ${ debts[11].pet_percent }
        % endif
        % endif
    - "debt_res_pay_11": ${True if debts[11].payment_division == "them" or debts[11].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_11": |
        % if include_debts:
        % if debts[11].payment_division == "them":
        100
        % elif debts[11].payment_division == "split":
        ${ 100 - debts[11].pet_percent }
        % endif
        % endif
    - "debt_creditor_12": ${ debts[12].name.text if include_debts else "" }
    - "debt_amount_12": ${ thousands(debts[12].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_12": ${ True if debts[12].payment_division == "Me" or debts[12].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_12": |
        % if include_debts:
        % if debts[12].payment_division == "Me":
        100
        % elif debts[12].payment_division == "split":
        ${ debts[12].pet_percent }
        % endif
        % endif
    - "debt_res_pay_12": ${True if debts[12].payment_division == "them" or debts[12].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_12": |
        % if include_debts:
        % if debts[12].payment_division == "them":
        100
        % elif debts[12].payment_division == "split":
        ${ 100 - debts[12].pet_percent }
        % endif
        % endif
    - "debt_creditor_13": ${ debts[13].name.text if include_debts else "" }
    - "debt_amount_13": ${ thousands(debts[13].amount, show_decimals=True) if include_debts else "" }
    - "debt_pet_pay_13": ${ True if debts[13].payment_division == "Me" or debts[13].payment_division == "split" and include_debts else "" }
    - "debt_pet_pct_13": |
        % if include_debts:
        % if debts[13].payment_division == "Me":
        100
        % elif debts[13].payment_division == "split":
        ${ debts[13].pet_percent }
        % endif
        % endif
    - "debt_res_pay_13": ${True if debts[13].payment_division == "them" or debts[13].payment_division == "split" and include_debts else ""}
    - "debt_res_pct_13": |
        % if include_debts:
        % if debts[13].payment_division == "them":
        100
        % elif debts[13].payment_division == "split":
        ${ 100 - debts[13].pet_percent }
        % endif
        % endif

---
attachment:
  variable name: additional_property[i]
  name: additional_property
  filename: additional_property
  skip undefined: True
  editable: True
  pdf template file: additional_property.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent__1": ${ other_parties[0].name.full(middle="full") }
    - "property_name_5": ${ property_list[5].name.text if property_list.number() > 5 else "" }
    - "property_to_pet_5": ${ property_list[5].party == "pet" if property_list.number() > 5 else "" }
    - "property_to_res_5": ${ property_list[5].party == "res" if property_list.number() > 5 else "" }
    - "property_name_6": ${ property_list[6].name.text if property_list.number() > 6 else "" }
    - "property_to_pet_6": ${ property_list[6].party == "pet" if property_list.number() > 6 else "" }
    - "property_to_res_6": ${ property_list[6].party == "res" if property_list.number() > 6 else "" }
    - "property_name_7": ${ property_list[7].name.text if property_list.number() > 7 else "" }
    - "property_to_pet_7": ${ property_list[7].party == "pet" if property_list.number() > 7 else "" }
    - "property_to_res_7": ${ property_list[7].party == "res" if property_list.number() > 7 else "" }
    - "property_name_8": ${ property_list[8].name.text if property_list.number() > 8 else "" }
    - "property_to_pet_8": ${ property_list[8].party == "pet" if property_list.number() > 8 else "" }
    - "property_to_res_8": ${ property_list[8].party == "res" if property_list.number() > 8 else "" }
    - "property_name_9": ${ property_list[9].name.text if property_list.number() > 9 else "" }
    - "property_to_pet_9": ${ property_list[9].party == "pet" if property_list.number() > 9 else "" }
    - "property_to_res_9": ${ property_list[9].party == "res" if property_list.number() > 9 else "" }
    - "property_name_10": ${ property_list[10].name.text if property_list.number() > 10 else "" }
    - "property_to_pet_10": ${ property_list[10].party == "pet" if property_list.number() > 10 else "" }
    - "property_to_res_10": ${ property_list[10].party == "res" if property_list.number() > 10 else "" }
    - "property_name_11": ${ property_list[11].name.text if property_list.number() > 11 else "" }
    - "property_to_pet_11": ${ property_list[11].party == "pet" if property_list.number() > 11 else "" }
    - "property_to_res_11": ${ property_list[11].party == "res" if property_list.number() > 11 else "" }
    - "property_name_12": ${ property_list[12].name.text if property_list.number() > 12 else "" }
    - "property_to_pet_12": ${ property_list[12].party == "pet" if property_list.number() > 12 else "" }
    - "property_to_res_12": ${ property_list[12].party == "res" if property_list.number() > 12 else "" }
    - "property_name_13": ${ property_list[13].name.text if property_list.number() > 13 else "" }
    - "property_to_pet_13": ${ property_list[13].party == "pet" if property_list.number() > 13 else "" }
    - "property_to_res_13": ${ property_list[13].party == "res" if property_list.number() > 13 else "" }
---
attachment:
  variable name: certification_agreement[i]
  name: certification_agreement
  filename: certification_agreement
  skip undefined: True
  editable: False
  pdf template file: certification_agreement.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent__1": ${ other_parties[0].name.full(middle="full") }
---
attachment:
  variable name: IDPH_certificate_instructions[i]
  name: IDPH_certificate_instructions
  filename: IDPH_certificate_instructions
  editable: False
  skip undefined: True
  pdf template file: IDPH_certificate_instructions.pdf  
  fields:
      - "fake": ${ "" }
---
attachment:
  variable name: IDPH_certificate_of_dissolution[i]
  name: IDPH_certificate_of_dissolution
  filename: IDPH_certificate_of_dissolution
  pdf template file: IDPH_certificate_of_dissolution.pdf  
---
attachment:
  variable name: child_support_instructions[i]
  name: child_support_instructions
  filename: child_support_instructions
  pdf template file: child_support_instructions.pdf  
---
attachment:
  variable name: child_support_order[i]
  name: child_support_order
  filename: child_support_order
  skip undefined: True
  editable: True
  pdf template file: child_support_order.pdf
  fields:
    - "county": ${ trial_court.address.county.upper() }
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent__1": ${ other_parties[0].name.full(middle="full") }
---
attachment:
  variable name: support_information_sheet[i]
  name: support_information_sheet
  filename: support_information_sheet
  skip undefined: True
  editable: True
  pdf template file: support_information_sheet.pdf
  fields:
    - "county": ${ trial_court.address.county.upper() }
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent__1": ${ other_parties[0].name.full(middle="full") }
    - "petitioner__2": ${ users[0].name.full(middle="full") }
    - "user_address__2": ${ users[0].address.on_one_line(bare=True) if hide_address else "" }
    - "user_dob": ${ users[0].birthdate }
    - "user_phone__2": ${ phone_number_formatted(users[0].phone_number) }
    - "user_employer": ${ users[0].employers[0].name.text if users[0].emp_status["Yes"] else "" }
    - "user_employer_address": ${ users[0].employers[0].address.on_one_line(bare=True) if users[0].emp_status["Yes"] else "" }
    - "user_employer_phone": ${ phone_number_formatted(users[0].employers[0].phone_number) if users[0].emp_status["Yes"] else "" }
    - "user_employer_2": ${ users[0].employers[1].name.text if users[0].emp_status["Yes"] and users[0].has_second_job else "" }
    - "user_employer_address_2": ${ users[0].employers[1].address.on_one_line(bare=True) if users[0].emp_status["Yes"] and users[0].has_second_job else "" }
    - "user_employer_phone_2": ${ phone_number_formatted(users[0].employers[1].phone_number) if users[0].emp_status["Yes"] and users[0].has_second_job else "" }

    - "respondent__2": ${ other_parties[0].name.full(middle="full") }
    - "resp_address": ${ other_parties[0].address.on_one_line(bare=True) if knows_resp_address else "" }
    - "resp_dob": ${ other_parties[0].birthdate }
    - "resp_phone": ${ phone_number_formatted(other_parties[0].phone_number) }
    - "resp_employer": ${ other_parties[0].employers[0].name.text if other_parties[0].emp_status["Yes"] else "" }
    - "resp_employer_address": ${ other_parties[0].employers[0].address.on_one_line(bare=True) if other_parties[0].emp_status["Yes"] else "" }
    - "resp_employer_phone": ${ phone_number_formatted(other_parties[0].employers[0].phone_number) if other_parties[0].emp_status["Yes"] else "" }
    - "resp_employer_2": ${ other_parties[0].employers[1].name.text if other_parties[0].emp_status["Yes"] and other_parties[0].has_second_job else "" }
    - "resp_employer_address_2": ${ other_parties[0].employers[1].address.on_one_line(bare=True) if other_parties[0].emp_status["Yes"] and other_parties[0].has_second_job else "" }
    - "resp_employer_phone_2": ${ phone_number_formatted(other_parties[0].employers[1].phone_number) if other_parties[0].emp_status["Yes"] and other_parties[0].has_second_job else "" }

    - "child_name_0": ${ children[0].name.full(middle="full") }
    - "child_dob_0": ${ children[0].birthdate }
    - "child_name_1": ${ children[1].name.full(middle="full") }
    - "child_dob_1": ${ children[1].birthdate }
    - "child_name_2": ${ children[2].name.full(middle="full") }
    - "child_dob_2": ${ children[2].birthdate }
    - "child_name_3": ${ children[3].name.full(middle="full") }
    - "child_dob_3": ${ children[3].birthdate }
    - "child_name_4": ${ children[4].name.full(middle="full") }
    - "child_dob_4": ${ children[4].birthdate }
    - "child_name_5": ${ children[5].name.full(middle="full") }
    - "child_dob_5": ${ children[5].birthdate }
    - "child_name_6": ${ children[6].name.full(middle="full") }
    - "child_dob_6": ${ children[6].birthdate }

    - "user_signature": ${ users[0].name.full(middle="full") if e_signature else '' }
    - "user__2": ${ users[0].name.full(middle="full") }
    - "user_address_line_1": ${ users[0].address.line_one(bare=True) }
    - "user_address_line_2": ${ users[0].address.line_two() }
    - "user_phone": ${ phone_number_formatted(users[0].phone_number) }
    - "user_atty_number": ${ '' }
    - "user_email": ${ users[0].email if users[0].has_email_address else "" }

---
attachment:
  variable name: income_withholding_instructions[i]
  name: income_withholding_instructions
  filename: income_withholding_instructions
  pdf template file: income_withholding_instructions.pdf  

---
attachment:
  variable name: income_withholding_for_support[i]
  name: income_withholding_for_support
  filename: income_withholding_for_support
  skip undefined: True
  editable: True  
  pdf template file: income_withholding_for_support.pdf  
  fields: 
    - "issuing_state": ${"Illinois"}
    - "payee_name": ${ "Illinois State Disbursement Unit (SDU)" }
    - "payee_address": ${ "PO Box 5400, Carol Stream, IL 60197-5400" }

---
attachment:
  variable name: income_withholding_letter_for_employer[i]
  name: income_withholding_letter_for_employer
  filename: income_withholding_letter_for_employer
  skip undefined: True
  editable: True  
  pdf template file: income_withholding_letter_for_employer.pdf  

---
attachment:
  variable name: divorce_summons[i]
  name: divorce_summons
  filename: divorce_summons
  skip undefined: True
  editable: False
  pdf template file: divorce_summons.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "county__2": ${ trial_court.address.county }
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "petitioner__2": ${ users[0].name.full(middle="full") }
    - "respondent__1": ${other_parties[0].name.full(middle="full")}
    - "respondent__2": ${other_parties[0].name.full(middle="full")}
    - "respondent__3": ${other_parties[0].name.full(middle="full")}
    - "courthouse_address": ${ courthouse_info }
    - "clerk_phone": ${ trial_court.phone }
    - "clerk_website": ${ trial_court.website }
    
    - "service_address_line_1": |
        % if service_address_choice == "other":
        ${ service_address.line_one(bare=True) }
        % elif service_address_choice == "home":
        ${ other_parties[0].address.line_one(bare=True) }        
        % elif service_address_choice == "work":
        ${ other_parties[0].employers[0].address.line_one(bare=True) }
        % else:
        ${ other_parties[0].employers[1].address.line_one(bare=True) }
        % endif
    - "service_address_csz": |
        % if service_address_choice == "other":
        ${ service_address.line_two() }
        % elif service_address_choice == "home":
        ${ other_parties[0].address.line_two() }        
        % elif service_address_choice == "work":
        ${ other_parties[0].employers[0].address.line_two() }        
        % else:
        ${ other_parties[0].employers[1].address.line_two() }        
        % endif
    - "respondent_phone": ${ phone_number_formatted(other_parties[0].phone_number) }
    - "respondent_email": ${ other_parties[0].email }
    - "service_alt_no": ${ not has_second_service_address }
    - "service_alt_yes": ${ has_second_service_address }      
    - "service_alt_address_line_1": |
        % if has_second_service_address == True:
        % if second_service_address_choice == "other":
        ${ second_service_address.line_one(bare=True) }
        % elif second_service_address_choice == "home":
        ${ other_parties[0].address.line_one(bare=True) }        
        % elif service_address_choice == "work":
        ${ other_parties[0].employers[0].address.line_one(bare=True) }
        % else:
        ${ other_parties[0].employers[1].address.line_one(bare=True) }
        % endif
        % endif
    - "service_alt_address_csz": |
        % if has_second_service_address == True:
        % if second_service_address_choice == "other":
        ${ second_service_address.line_two() }
        % elif second_service_address_choice == "home":
        ${ other_parties[0].address.line_two() }        
        % elif service_address_choice == "work":
        ${ other_parties[0].employers[0].address.line_two() }        
        % else:
        ${ other_parties[0].employers[1].address.line_two() }        
        % endif
        % endif
    - "respondent_alt_phone": ${ phone_number_formatted(other_parties[0].phone_number_alt) if has_second_service_address == True else "" }
    - "respondent_alt_email": ${ other_parties[0].email_alt if has_second_service_address == True else "" }

    - "service_method_sheriff": ${ True if service_method == "sheriff" and service_state == "IL" else ""}
    - "service_method_sheriff_outside_il": ${ True if service_method == "sheriff" and service_state != "IL" else ""}
    - "service_location_outside_il": |
        % if service_method == "sheriff" and service_state != "IL":
        ${ service_county + ", " + service_state }
        % endif
    - "service_method_sps": ${ True if service_method == "sps" else "" }
    - "service_method_detective": ${ True if service_method == "detective" else "" }
    - "user__2": ${ users[0].name.full(middle="full") }
    - "user_address_line_1": ${ users[0].address.line_one(bare=True) }
    - "user_address_line_2": ${ users[0].address.line_two() }
    - "user_phone": ${ phone_number_formatted(users[0].phone_number) }
    - "user_email": ${ users[0].email if users[0].has_email_address else "" }

---
attachment:
  variable name: letter_to_sheriff[i]
  name: letter_to_sheriff
  filename: letter_to_sheriff
  skip undefined: True
  editable: True  
  pdf template file: letter_to_sheriff.pdf  
  fields: 
    - "service_county": ${ service_county }
    - "service_state": ${ state_name(service_state) }
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent__1": ${other_parties[0].name.full(middle="full")}
    - "respondent__2": ${other_parties[0].name.full(middle="full")}
    - "county": ${ trial_court.address.county }
    - "county__2": ${ trial_court.address.county }
    - "user_signature": ${ users[0].name.full(middle="full") if e_signature else '' }
    - "user__2": ${ users[0].name.full(middle="full") }
    - "user_address": ${ users[0].address.on_one_line(bare=True) }
    - "user_phone": ${ phone_number_formatted(users[0].phone_number) }
    - "user_email": ${ users[0].email if users[0].has_email_address else "" }

---
attachment:
  variable name: divorce_appearance[i]
  name: divorce_appearance
  filename: divorce_appearance
  skip undefined: True
  editable: True
  pdf template file: divorce_appearance.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent__1": ${ other_parties[0].name.full(middle="full") }

---
############### Review page
id: review screen
event: review_answers
question: |
  Review screen
subquestion: |
  Edit your answers below.
review: 
  - note: |
      <h4>Basic info</h4>
  - Edit:
    - marriage_date
    button: |
      **Marriage or civil union date:**
      ${ marriage_date }
  - Edit:
    - marriage_in_america
    button: |
      **Place of marriage or civil union:**
      % if marriage_in_america:
      ${ marriage_county }, ${ marriage_state }, US
      % else:
      % if marriage_intl_text != "":
      ${ marriage_intl_text}, ${marriage_country}
      % else:
      ${marriage_country} 
      % endif      
      % endif
  - Edit:
    - previous_divorce
    button: |
      **Did you or your spouse file an earlier case to dissolve the marriage or civil union?**
      ${ previous_divorce }
  - Edit:
    - previous_divorce
    button: |
      **Earlier case filed in:**
      % if previous_divorce_in_us:
      ${ previous_divorce_county }, ${ previous_divorce_state }
      % else:
      ${previous_divorce_country}
      % endif      
    show if: previous_divorce == "Yes"
  - Edit: separation_date
    button: |
      **When did you separate?**
      ${ separation_date }
  - Edit:
    - divorce_grounds
    button: |
      **Reason to end marriage or civil union:**
      Irreconcilable differences
  
  - note: |
      <h4>About you</h4>
  - Edit: users[0].name.first
    button: |
      **Your name:**
      ${users[0].name.full(middle="full")}
  - Edit: hide_address
    button: |
      **Do you want to keep your address hidden?**
      ${ word(yesno(hide_address)) }
  - Edit: users[0].address.address
    button: |
      % if hide_address:
      **Your mailing address (will appear on your court papers):**
      % else:
      **Your home address:**
      % endif    
      ${ users[0].address.on_one_line(bare=True) }
  - Edit: users[0].residence_county
    button: |
      **County where you live:**
      ${ users[0].residence_county }
  - Edit: users[0].phone_number
    button: |
      **Your phone number:**
      ${ phone_number_formatted(users[0].phone_number) }
  - Edit: users[0].has_email_address
    button: |
      **Do you have an email address?**
      ${ word(yesno(users[0].has_email_address)) }
  - Edit: users[0].email
    button: |
      **Your email:**
      ${ users[0].email }
    show if: users[0].has_email_address
  - Edit: users[0].birthdate
    button: |
      **When were you born?**
      ${ users[0].birthdate }
  - Edit: users[0].emp_status
    button: |
      **Are you employed?**

      % if users[0].emp_status['Yes']:
      * Yes
      % endif
      % if users[0].emp_status['No']:
      * No
      % endif
      % if users[0].emp_status['ss']:
      * I receive Social Security, unemployment or other types of benefits.
      % endif
  - Edit: users[0].employers[0].job_title
    button: |
     **Job title:**
      ${ users[0].employers[0].job_title }
    show if: users[0].emp_status["Yes"]
  - Edit: users[0].employers[0].name.text
    button: |
      **Employer name:**
      ${ users[0].employers[0].name.text }
    show if: users[0].emp_status["Yes"]
  - Edit: users[0].employers[0].address.address
    button: |
      **Employer address:**
      ${ users[0].employers[0].address.on_one_line(bare=True) }
    show if: users[0].emp_status["Yes"]
  - Edit: users[0].employers[0].phone_number
    button: |
      **Employer phone:**
      % if users[0].employers[0].phone_number != "":
      ${ phone_number_formatted(users[0].employers[0].phone_number) }
      % else:
      None entered
      % endif
    show if: users[0].emp_status["Yes"]
  - Edit: users[0].has_second_job
    button: |
      **Do you have a second job?**
      ${word(yesno(users[0].has_second_job))}
    show if: users[0].emp_status["Yes"] == True
  - Edit: users[0].employers[1].job_title
    button: |
     **Second job title:**
      ${ users[0].employers[1].job_title }
    show if: users[0].emp_status["Yes"] == True and users[0].has_second_job
  - Edit: users[0].employers[1].name.text
    button: |
      **Second employer name:**
      ${ users[0].employers[1].name.text }
    show if: users[0].emp_status["Yes"] == True and users[0].has_second_job
  - Edit: users[0].employers[1].address.address
    button: |
      **Second employer address:**
      ${ users[0].employers[1].address.on_one_line(bare=True) }
    show if: users[0].emp_status["Yes"] == True and users[0].has_second_job
  - Edit: users[0].employers[1].phone_number
    button: |
      **Second employer phone:**
      % if users[0].employers[1].phone_number != "":
      ${ phone_number_formatted(users[0].employers[1].phone_number) }
      % else:
      None entered
      % endif
    show if: users[0].emp_status["Yes"] == True and users[0].has_second_job
  - Edit: users[0].use_former_name
    button: |
      **Do you want to go back to a former or maiden name?**
      ${word(yesno(users[0].use_former_name))}
  - Edit: users[0].use_former_name
    button: |
      **Former or maiden name:**
      ${ users[0].aliases[0].full(middle="full")}
    show if: users[0].use_former_name
      
  - note: |
      <h4>About your spouse</h4>
  - Edit: other_parties[0].name.first
    button: |
      **Your spouse's name:**
      ${other_parties[0].name.full(middle="full")}
  - Edit: other_parties[0].birthdate
    button: |
      **When was ${other_parties[0].name.full(middle="full")} spouse born?**
      ${ other_parties[0].birthdate }
  - Edit: other_parties[0].is_resident
    button: |
      **Does ${other_parties[0].name.full(middle="full")} live in Illinois?**
      ${ word(yesno(other_parties[0].is_resident)) }
  - Edit: other_parties[0].meets_90_day_requirement
    button: |
      **Has ${other_parties[0].name.full(middle="full")} lived in Illinois for longer than 90 days?**
      ${ word(yesno(other_parties[0].meets_90_day_requirement)) }
  - Edit: knows_resp_address
    button: |
      **Do you know ${other_parties[0].name.full(middle="full")}'s current address?**
      ${ word(yesno(knows_resp_address)) }
  - Edit: other_parties[0].address.address
    button: |
      **${other_parties[0].name.full(middle="full")}'s current address:**
      ${ other_parties[0].address.on_one_line(bare=True) }
    show if: knows_resp_address
  - Edit: other_parties[0].phone_number
    button: |
      **${other_parties[0].name.full(middle="full")}'s phone number:**
      % if other_parties[0].phone_number != "":
      ${ phone_number_formatted(other_parties[0].phone_number) }      
      % else:
      ${ "None entered" }
      % endif
  - Edit: other_parties[0].email
    button: |
      **${other_parties[0].name.full(middle="full")}'s email:**
      % if other_parties[0].email != "":
      ${ other_parties[0].email }
      % else:
      ${ "None entered" }
      % endif
    
  - Edit: other_parties[0].emp_status
    button: |
      **Is ${other_parties[0].name.full(middle="full")} employed?**

      % if other_parties[0].emp_status['Yes']:
      * Yes
      % endif
      % if other_parties[0].emp_status['No']:
      * No
      % endif
      % if other_parties[0].emp_status['ss']:
      * They receive Social Security, unemployment or other types of benefits.
      % endif
      % if other_parties[0].emp_status['idk']:
      * I don't know.
      % endif
  - Edit: other_parties[0].employers[0].job_title
    button: |
     **${other_parties[0].name.full(middle="full")}'s job title:**
      ${ other_parties[0].employers[0].job_title }
    show if: other_parties[0].emp_status["Yes"]
  - Edit: other_parties[0].employers[0].name.text
    button: |
      **${other_parties[0].name.full(middle="full")}'s employer name:**
      ${ other_parties[0].employers[0].name.text }
    show if: other_parties[0].emp_status["Yes"]
  - Edit: other_parties[0].employers[0].address.address
    button: |
      **${other_parties[0].name.full(middle="full")}'s employer address:**
      ${ other_parties[0].employers[0].address.on_one_line(bare=True) }
    show if: other_parties[0].emp_status["Yes"]
  - Edit: other_parties[0].employers[0].phone_number
    button: |
      **${other_parties[0].name.full(middle="full")}'s employer phone:**
      % if other_parties[0].employers[0].phone_number != "":
      ${ phone_number_formatted(other_parties[0].employers[0].phone_number) }
      % else:
      None entered
      % endif
    show if: other_parties[0].emp_status["Yes"]
  - Edit: other_parties[0].has_second_job
    button: |
      **Does ${other_parties[0].name.full(middle="full")} have a second job?**
      ${word(yesno(other_parties[0].has_second_job))}
    show if: other_parties[0].emp_status["Yes"] == True
  - Edit: other_parties[0].employers[1].job_title
    button: |
     **${other_parties[0].name.full(middle="full")}'s second job title:**
      ${ other_parties[0].employers[1].job_title }
    show if: other_parties[0].emp_status["Yes"] == True and other_parties[0].has_second_job
  - Edit: other_parties[0].employers[1].name.text
    button: |
      **${other_parties[0].name.full(middle="full")}'s second employer name:**
      ${ other_parties[0].employers[1].name.text }
    show if: other_parties[0].emp_status["Yes"] == True and other_parties[0].has_second_job
  - Edit: other_parties[0].employers[1].address.address
    button: |
      **Second employer address:**
      ${ other_parties[0].employers[1].address.on_one_line(bare=True) }
    show if: other_parties[0].emp_status["Yes"] == True and other_parties[0].has_second_job
  - Edit: other_parties[0].employers[1].phone_number
    button: |
      **${other_parties[0].name.full(middle="full")}'s second employer phone:**
      % if other_parties[0].employers[1].phone_number != "":
      ${ phone_number_formatted(other_parties[0].employers[1].phone_number) }
      % else:
      None entered
      % endif
    show if: other_parties[0].emp_status["Yes"] == True and other_parties[0].has_second_job
  - Edit: other_parties[0].is_active_duty
    button: |
      **Is ${other_parties[0].name.full(middle="full")} currently on active duty?**
      % if other_parties[0].is_active_duty == 'Yes':
      Yes
      % elif other_parties[0].is_active_duty == 'No':
      No
      % else:
      I don't know.
      % endif
      
  - note: |
      <h4>Children and support</h4>
  - Edit: pet_is_pregnant
    button: |
      **Are you pregnant?**
      ${ word(yesno(pet_is_pregnant)) }      
  - Edit: pet_pregnant_resp_parent
    button: |
      **Is ${other_parties[0].name.full(middle="full")} the other parent of the unborn child?**
      ${ pet_pregnant_resp_parent }
    show if: pet_is_pregnant
  - Edit: resp_is_pregnant
    button: |
      **Is ${other_parties[0].name.full(middle="full")} pregnant?**
      ${ resp_is_pregnant }
  - Edit: resp_pregnant_pet_parent
    button: |
      **Are you the other parent of the unborn child?**
      ${ resp_pregnant_pet_parent }
    show if: resp_is_pregnant == "Yes"
  - Edit: any_children_together
    button: |
      **Do you and ${other_parties[0].name.full(middle="full")} have any children together?**
      ${ word(yesno(any_children_together)) }      
  - Edit: children_status
    button: |
      **You and your spouse have children who are:**

      % if children_status['minors']:
      * Younger than 18.
      % endif
      % if children_status['support']:
      * 18 or older but are still in school or have a disability.
      % endif
      % if children_status['adults']:
      * Adults who do not need support to attend school or because of a disability.
      % endif
  - Edit: children.revisit
    button: |
      **Your children with ${other_parties[0].name.full(middle="full")}: (Edit to change names and details)**

      % for my_var in children:
        * ${ my_var.name.full(middle="full") }
      % endfor
    show if: children_status['minors'] or children_status['support']
  - Edit: adult_children.revisit
    button: |
      **Your adult children with ${other_parties[0].name.full(middle="full")}: (Edit to change names and details)**

      % for my_var in adult_children:
        * ${ my_var.name.full(middle="full") }
      % endfor
    show if: children_status['adults'] and children_status['minors'] == False and children_status['support'] == False

  - Edit: want_child_support
    button: |
      **Do you want the court to order child support for for the children of the marriage?**
      ${ word(yesno(want_child_support)) }        
    show if: children_status['minors'] or children_status['support']
  - Edit: current_child_support
    button: |
      **Is child support being paid for the children of the marriage?**
      ${ word(yesno(current_child_support)) }        
    show if: children_status['minors'] or children_status['support']
  - Edit: current_pt_schedule
    button: |
      **Is there currently a schedule for when the children are with you or ${other_parties[0].name.full(middle="full")}?**
      ${ word(yesno(current_pt_schedule)) }        
    show if: children_status['minors'] or children_status['support']
  - Edit: taxes_choice
    button: |
      **How will the children be claimed as dependents on tax returns?**

      % if taxes_choice == 'all':
      * One parent will claim all children
      % elif taxes_choice == 'turns':
      * Parents will take turns on even and odd tax years
      % elif taxes_choice == 'split':
      * Parents will split how many children they claim on their taxes
      % else:
      * I don't know.
      % endif
    show if: children_status['minors'] or children_status['support']

  
  - Edit: other_custody_case
    button: |
      **Have you been involved in another court case about custody or visitation with any of the children you have with ${other_parties[0].name.full(middle="full")}?**
      ${ word(yesno(other_custody_case)) }
    show if: any_children_together and (children_status['minors'] or children_status['support'])
  - Edit: custody_cases.revisit
    button: |
      **Other custody or visitation cases involving your children: (Edit to change details)**

      % for my_var in custody_cases:
      * Case number: ${my_var.name.text} in ${my_var.county}, ${my_var.state}
      % endfor
    show if: any_children_together and other_custody_case and (children_status['minors'] or children_status['support'])

  - Edit: other_case_involving_kids
    button: |
      **Do you know of another court case, not custody or visitation, that might affect any of the children you have with ${other_parties[0].name.full(middle="full")}?**
      ${ word(yesno(other_case_involving_kids)) }
    show if: any_children_together and (children_status['minors'] or children_status['support'])
  - Edit: other_cases.revisit
    button: |
      **Other cases involving your children: (Edit to change details)**

      % for my_var in other_cases:
      * Case number: ${my_var.name.text} in ${my_var.county}, ${my_var.state}
      % endfor
    show if: any_children_together and other_case_involving_kids and (children_status['minors'] or children_status['support'])
  - Edit: other_custodian
    button: |
      **Do you know of another person who has custody or rights to any of the children you have with ${other_parties[0].name.full(middle="full")}?**
      ${ word(yesno(other_custodian)) }
    show if: any_children_together and (children_status['minors'] or children_status['support'])
  - Edit: custodians.revisit
    button: |
      **Other people with custody or rights involving your children: (Edit to change details)**

      % for my_var in custodians:
      * ${my_var.name.full(middle="full")}
      % endfor
    show if: any_children_together and other_custodian and (children_status['minors'] or children_status['support'])
  - Edit: kids_lived_with_other_adult
    button: |
      **Have any of your children with ${other_parties[0].name.full(middle="full")} lived with another adult without either parent in the last 5 years?**
      ${ word(yesno(kids_lived_with_other_adult)) }
    show if: any_children_together and (children_status['minors'] or children_status['support'])
  - Edit: other_adults.revisit
    button: |
      **Other adults your children lived with in the last five years: (Edit to change details)**

      % for my_var in other_adults:
      * ${my_var.name.full(middle="full")}
      % endfor
    show if: any_children_together and kids_lived_with_other_adult and (children_status['minors'] or children_status['support'])
  - Edit: has_other_kids_during_marriage
    button: |
      **Did you or ${other_parties[0].name.full(middle="full")} have a child by birth or adoption with someone else since the date of marriage?**
      ${ word(yesno(has_other_kids_during_marriage)) }
    show if: any_children_together
  - Edit: outside_children.revisit
    button: |
      **Children born or adopted outside the marriage: (Edit to change names and details)**

      % for my_var in outside_children:
        * ${ my_var.name.full(middle="full") }
      % endfor
    show if: has_other_kids_during_marriage and any_children_together

  - Edit: current_maintenance
    button: |
      **Is maintenance (alimony) currently being paid from one spouse to the other?**
      ${ word(yesno(current_maintenance)) }
  - Edit: want_maintenance
    button: |
      **Do you want ${other_parties[0].name.full(middle="full")} to pay you maintenance (alimony)?**
      ${ word(yesno(want_maintenance)) }


  - note: |
      <h4>Debts</h4>
  - Edit: include_debts
    button: |
      **Do you want to add information about debts?**
      ${ word(yesno(include_debts)) }
  - Edit: debts.revisit
    button: |
      **Debts: (Edit to change details)**

      % for my_var in debts:
      * $${ thousands( my_var.amount, show_decimals=True) } owed to ${ my_var.name.text}
      % endfor
    show if: include_debts    
  - Edit: unlisted_debts
    button: |
      **How do you want other debts to be divided?**

      % if unlisted_debts['joint']:
      * Each of us will be responsible for 50% of each joint debt.
      % endif
      % if unlisted_debts['name']:
      * Each of us will pay all of the debts in their own name.
      % endif
      % if unlisted_debts.all_false():
      * I don't know. I will decide later.
      % endif
    show if: include_debts    
  - Edit: pet_has_nonmarital_debts
    button: |
      **Do you want to list your non-marital debts?**
      ${ word(yesno(pet_has_nonmarital_debts)) }
    show if: include_debts    
  - Edit: pet_nonmarital_debts
    button: |
      **Your non-marital debts:**
      ${pet_nonmarital_debts}
    show if: include_debts and pet_has_nonmarital_debts    
  - Edit: resp_has_nonmarital_debts
    button: |
      **Do you want to list ${other_parties[0].name.full(middle="full")}'s non-marital debts?**
      ${ word(yesno(resp_has_nonmarital_debts)) }
    show if: include_debts    
  - Edit: resp_nonmarital_debts
    button: |
      **${other_parties[0].name.full(middle="full")}'s non-marital debts:**
      ${resp_nonmarital_debts}
    show if: include_debts and resp_has_nonmarital_debts    


  - note: |
      <h4>Property</h4>
  - Edit: include_property
    button: |
      **Do you want to add information about personal property or bank accounts?**
      ${ word(yesno(include_property)) }
  - Edit: property_keep
    button: |
      **Do you want each person to keep the property and bank accounts in their own name or possession?**
      ${ word(yesno(property_keep)) }      
    show if: include_property    
  - Edit: property_list.revisit
    button: |
      **Personal property or bank accounts: (Edit to change details)**

      % for my_var in property_list:
      * ${ my_var.name.text}
      % endfor
    show if: include_property    

  - Edit: retirement_options
    button: |
      **Do you want to add information about retirement accounts and pensions?**
      
      % if retirement_options == "own":
      * Yes, each person should get the retirement accounts and pensions in their own name.
      % elif retirement_options == "split":
      * Yes, the retirement accounts and pensions should be split.
      % else:
      * No, I will add this later.
      % endif
  - Edit: enter_resp_pensions
    button: |
      **Do you want to include information about ${other_parties[0].name.full(middle="full")}'s retirement accounts and pensions now?**
      ${ word(yesno(enter_resp_pensions)) }      
    show if: retirement_options == "split"    
  - Edit: pensions_resp.revisit
    button: |
      **${other_parties[0].name.full(middle="full")}'s retirement accounts or pensions: (Edit to change details)**

      % for my_var in pensions_resp:
      * ${ my_var.name.text}
      % endfor
    show if: retirement_options == "split" and enter_resp_pensions
  - Edit: resp_pensions_qdro
    button: |
      **Who do you want to prepare the papwerwork for ${other_parties[0].name.full(middle="full")}'s retirement accounts and pensions?**
      
      % if resp_pensions_qdro == "Me":
      * I will prepare the paperwork.
      % elif resp_pensions_qdro == "Them":
      * ${other_parties[0].name.full(middle="full")} will prepare the paperwork.
      % else:
      * I don't know. I will decide later.
      % endif
    show if: retirement_options == "split" and enter_resp_pensions
  - Edit: enter_pet_pensions
    button: |
      **Do you want to include information about your retirement accounts and pensions now?**
      ${ word(yesno(enter_pet_pensions)) }      
    show if: retirement_options == "split"    
  - Edit: pensions_pet.revisit
    button: |
      **Your retirement accounts or pensions: (Edit to change details)**

      % for my_var in pensions_pet:
      * ${ my_var.name.text}
      % endfor
    show if: retirement_options == "split" and enter_pet_pensions
  - Edit: pet_pensions_qdro
    button: |
      **Who do you want to prepare the papwerwork for your retirement accounts and pensions?**
      
      % if resp_pensions_qdro == "Me":
      * I will prepare the paperwork.
      % elif resp_pensions_qdro == "Them":
      * ${other_parties[0].name.full(middle="full")} will prepare the paperwork.
      % else:
      * I don't know. I will decide later.
      % endif
    show if: retirement_options == "split" and enter_pet_pensions
  - Edit: pensions_other
    button: |
      **Do you want the final divorce judgment to say anything else about retirement accounts or pensions?**
      ${ word(yesno(pensions_other)) }      
    show if: retirement_options == "own" or retirement_options == "split"
  - Edit: pensions_other_text
    button: |
      **Other information about retirement accounts or pensions to include in the divorce judgment:**
      ${ pensions_other_text }      
    show if: (retirement_options == "own" or retirement_options == "split") and pensions_other
  - Edit: has_real_estate
    button: |
      **Do you and ${other_parties[0].name.full(middle="full")} own any marital real estate?**
      ${ word(yesno(has_real_estate)) }
  - Edit: real_estate.address
    button: |
      **Marital real estate address:**
      ${ real_estate.on_one_line(bare=True) }
    show if: has_real_estate
  - Edit: attach_legal_desc
    button: |
      **Will you attach a legal description of the real estate to the final divorce judgment?**
      ${ attach_legal_desc }
    show if: has_real_estate

  - Edit: pet_has_nonmarital_property
    button: |
      **Do you want to list your non-marital property?**
      ${ word(yesno(pet_has_nonmarital_property)) }
    show if: include_property    
  - Edit: pet_nonmarital_property
    button: |
      **Your non-marital property:**
      ${pet_nonmarital_property}
    show if: include_property and pet_has_nonmarital_property    
  - Edit: resp_has_nonmarital_property
    button: |
      **Do you want to list ${other_parties[0].name.full(middle="full")}'s non-marital property?**
      ${ word(yesno(resp_has_nonmarital_property)) }
    show if: include_property    
  - Edit: resp_nonmarital_property
    button: |
      **${other_parties[0].name.full(middle="full")}'s non-marital property:**
      ${resp_nonmarital_property}
    show if: include_property and resp_has_nonmarital_property    
  - Edit: property_exchange
    button: |
      **Do you want any exchange of personal property to happen within 30 days after the divorce judgment is entered?**
      ${ word(yesno(property_exchange)) }      
    show if: include_property
  - Edit: property_other
    button: |
      **Do you want the final divorce judgment to say anything else about property?**
      ${ word(yesno(property_other)) }      
    show if: include_property    
  - Edit: property_other_text
    button: |
      **Other information about property to include in the divorce judgment:**
      ${ property_other_text }      
    show if: include_property and property_other
      
  - note: |
      <h4>Filing details</h4>
  - Edit: 
      - trial_court_index
      - recompute:
        - trial_court
    button: |
      **County where you will file your case:**
      ${ trial_court.address.county }
  - Edit: cook_district
    button: |
      **Cook County courthouse:**
      
      % if cook_district == "15":
      * ${ "Daley Center, 50 W. Washington Street, Chicago" }
      % elif cook_district == "16":
      * ${ "Second Municipal District, 5600 Old Orchard Road, Skokie" }
      % elif cook_district == "17":
      * ${ "Third Municipal District, 2121 Euclid Avenue, Rolling Meadows" }
      % elif cook_district == "18":
      * ${ "Fourth Municipal District, 1500 Maybrook Drive, Maywood" }
      % elif cook_district == "19":
      * ${ "Fifth Municipal District, 10220 S. 76th Avenue, Bridgeview" }
      % else:
      * ${ "Sixth Municipal District, 16501 South Kedzie Parkway, Markham" }
      % endif      
    show if: trial_court_index == -1
  - Edit: previous_cook_case_type
    button: |
      **Previous Cook County case involving ${other_parties[0].name.full(middle="full")}:**
      ${ previous_cook_case_type.capitalize() }
    show if: trial_court_index == -1
  - Edit: previous_cook_case_date
    button: |
      **Previous Cook County ${ previous_cook_case_type } case info:**
      
      % if previous_cook_case_date == "" or previous_cook_case_date is None:
      * Date filed: None entered
      % else:
      * Date filed: ${ previous_cook_case_date }
      % endif
      % if previous_cook_case_number != "":
      * Case number: ${ previous_cook_case_number }
      % else:
      * Case number: None entered
      % endif
      % if previous_cook_case_judge != "":
      * Judge: ${ previous_cook_case_judge }
      % else:
      * Judge: None entered
      % endif
    show if: trial_court_index == -1 and previous_cook_case_type != "none"
  - Edit: case_type_marriage
    button: |
      **What kind of case are you filing?**
      % if case_type_marriage:
      Ending a marriage
      % else:
      Ending a civil union
      % endif
    show if: trial_court_index == -1
  - Edit: know_resp_location
    button: |
      **Do you have an address where ${other_parties[0].name.full(middle="full")} can be found?**
      ${ word(yesno(know_resp_location))}
  
  - Edit: service_address_choice
    button: |
      **Where can ${other_parties[0].name.full(middle="full")} be found for service?**
      
      % if service_address_choice == "other":
      * At an address I will enter
      % elif service_address_choice == "home":
      * At home: ${ other_parties[0].address.on_one_line(bare=True) }        
      % elif service_address_choice == "work":
      * At work: ${ other_parties[0].employers[0].address.on_one_line(bare=True) }
      % else:
      * At work: ${ other_parties[0].employers[1].address.on_one_line(bare=True) } 
      % endif
    show if: know_resp_location
  - Edit: service_address.address
    button: |
      **Service address:**
      ${ service_address.on_one_line(bare=True) }

    show if: service_address_choice == "other" and know_resp_location
  - Edit: service_county
    button: |
      **County where ${other_parties[0].name.full(middle="full")} can be served:**
      ${ service_county }
      
      **Note:** Be sure this county is correct if you change the address where ${other_parties[0].name.full(middle="full")} can be served.
    show if: know_resp_location
  - Edit: has_second_service_address
    button: |
      **Do you know another location where ${other_parties[0].name.full(middle="full")} can be found for service?**
      ${ word(yesno(has_second_service_address)) }
    show if: know_resp_location
  - Edit: second_service_address_choice
    button: |
      **Where else can ${other_parties[0].name.full(middle="full")} be found for service?**
      % if second_service_address_choice == "other":
      At another address
      % else:
      At ${ second_service_address_choice }
      % endif
    show if: has_second_service_address and know_resp_location
  - Edit: second_service_address.address
    button: |
      **Second service address:**
      ${ second_service_address.on_one_line(bare=True) }
    show if: has_second_service_address and second_service_address_choice == "other" and know_resp_location
  - Edit: other_parties[0].phone_number_alt
    button: |
      **${other_parties[0].name.full(middle="full")}'s other contact info:**
  
      % if other_parties[0].phone_number_alt != "":
      * ${other_parties[0].name.full(middle="full")}'s alternate phone: ${ phone_number_formatted(other_parties[0].phone_number_alt) }
      % else:
      * ${other_parties[0].name.full(middle="full")}'s alternate phone: None entered
      % endif
      % if other_parties[0].email_alt != "":
      * ${other_parties[0].name.full(middle="full")}'s alternate email: ${ other_parties[0].email_alt }
      % else:
      * ${other_parties[0].name.full(middle="full")}'s alternate email: None entered
      % endif
    show if: has_second_service_address and know_resp_location
  - Edit: service_method
    button: |
      **How do you want ${other_parties[0].name.full(middle="full")} to be served?**
      % if service_method == "sheriff":
      By the sheriff
      % elif service_method == "sps":
      By a special process server
      % elif service_method == "detective":
      By a licensed private detective
      % else:
      I don't know. I will decide later.
      % endif
    show if: know_resp_location

      
  - Edit: e_signature
    button: |
      **Do you want to add your e-signature to your forms?**
      ${ word(yesno(e_signature)) }



---
id: children revisit
continue button field: children.revisit
question: |
  Edit the children you have with ${other_parties[0].name.full(middle="full")}
subquestion: |
  ${ children.table }

  % if children.number_gathered() < 7:
  ${ children.add_action() }
  % endif

---
table: children.table
rows: children
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - Details (including birth date, school status, and residence history): |
      action_button_html(url_action(row_item.attr_name("review_child_details")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True

---
id: child details
continue button field: x.review_child_details
generic object: ALIndividual
question: |
  Edit ${ x.name.full(middle="full") }'s information
review: 
  - Edit: x.name.first
    button: |
      **Name:**
      ${ x.name.full(middle="full")  }
  - Edit: x.birthdate
    button: |
      **Birth date:**
      ${ x.birthdate } 
  - Edit: x.is_of_marriage
    button: |
      **Was born or adopted after the marriage:**
      ${ word(yesno(x.is_of_marriage)) }
  - Edit: x.has_a_disability
    button: |
      **Has a disability:**
      ${ word(yesno(x.has_a_disability)) }
  - Edit: x.is_in_school
    button: |
      **Is currently in school:**
      ${ word(yesno(x.is_in_school)) }
  - Edit: x.is_resident
    button: |
      **Has ${ x.name.full(middle="full") } lived in Illinois for the last 6 months or more?**
      % if x.is_resident == 'Yes':
      Yes
      % elif x.is_resident == 'No':
      No
      % else:
      I don't know.
      % endif
  - Edit: x.address.address
    button: |
      **Current address:**
      ${ x.address.on_one_line(bare=True) }      
  - Edit: x.has_former_address
    button: |
      **Has ${x.name.full(middle="full")} lived at any other addresses in the last five years?**
      ${ word(yesno(x.has_former_address)) }
  - Edit: x.former_addresses.revisit
    button: |
      **Former addresses: (Edit to change details)**

      % for former_address in x.former_addresses:
        * ${ former_address.on_one_line(bare=True) }
      % endfor
    show if: x.has_former_address
continue button label: Next
---
id: former addresses revisit
continue button field: children[i].former_addresses.revisit
question: |
  Edit ${children[i].name.full(middle="full")}'s former addresses
subquestion: |
  ${ children[i].former_addresses.table }

  % if children[i].former_addresses.number_gathered() < 4:
  ${ children[i].former_addresses.add_action() }
  % endif
---
table: children[i].former_addresses.table
rows: children[i].former_addresses
columns:
  - Former address: |
      row_item.on_one_line(bare=True) if defined("row_item.address") else ""
  - Edit: |
      action_button_html(url_action(row_item.attr_name("address")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True


---
id: adult children revisit
continue button field: adult_children.revisit
question: |
  Edit the adult children you have with ${other_parties[0].name.full(middle="full")}
subquestion: |
  ${ adult_children.table }

  ${ adult_children.add_action() }
---
table: adult_children.table
rows: adult_children
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - Details (including name and birth date): |
      action_button_html(url_action(row_item.attr_name("review_adult_child_details")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True

---
id: adult child details
continue button field: x.review_adult_child_details
generic object: ALIndividual
question: |
  Edit ${ x.name.full(middle="full") }'s information
review: 
  - Edit: x.name.first
    button: |
      **Name:**
      ${ x.name.full(middle="full")  }
  - Edit: x.birthdate
    button: |
      **Birth date:**
      ${ x.birthdate } 
continue button label: Next

---
id: outside children revisit
continue button field: outside_children.revisit
question: |
  Edit the children you or ${other_parties[0].name.full(middle="full")} had outside the marriage
subquestion: |
  ${ outside_children.table }

  % if outside_children.number_gathered() < 4:
  ${ outside_children.add_action() }
  % endif
---
table: outside_children.table
rows: outside_children
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - Who's child: |
      row_item.parent if defined("row_item.parent") else ""
  - Edit: |
      action_button_html(url_action(row_item.attr_name("parent")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True

---
id: custody cases revisit
continue button field: custody_cases.revisit
question: |
  Edit the other custody or visitation cases involving your children
subquestion: |
  ${ custody_cases.table }

  % if custody_cases.number_gathered() < 3:
  ${ custody_cases.add_action() }
  % endif
---
table: custody_cases.table
rows: custody_cases
columns:
  - Case number: |
      row_item.name.text if defined("row_item.name.text") else ""
  - County: |
      row_item.county if defined("row_item.county") else ""
  - State: |
      row_item.state if defined("row_item.state") else ""
  - Edit: |
      action_button_html(url_action(row_item.attr_name("name.text")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True

---
id: other cases revisit
continue button field: other_cases.revisit
question: |
  Edit the other cases involving your children
subquestion: |
  ${ other_cases.table }

  % if other_cases.number_gathered() < 3:
  ${ other_cases.add_action() }
  % endif
---
table: other_cases.table
rows: other_cases
columns:
  - Case number: |
      row_item.name.text if defined("row_item.name.text") else ""
  - County: |
      row_item.county if defined("row_item.county") else ""
  - State: |
      row_item.state if defined("row_item.state") else ""
  - Edit: |
      action_button_html(url_action(row_item.attr_name("name.text")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
id: custodians revisit
continue button field: custodians.revisit
question: |
  Edit the other people with custody or rights involving your children
subquestion: |
  ${ custodians.table }

  % if custodians.number_gathered() < 3:
  ${ custodians.add_action() }
  % endif
---
table: custodians.table
rows: custodians
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - Details (including address and children involved): |
      action_button_html(url_action(row_item.attr_name("name.first")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
id: other adults revisit
continue button field: other_adults.revisit
question: |
  Edit the other adults your children lived with in the last five years
subquestion: |
  ${ other_adults.table }

  % if other_adults.number_gathered() < 3:
  ${ other_adults.add_action() }
  % endif
---
table: other_adults.table
rows: other_adults
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - Details (including address, children involved and relationship): |
      action_button_html(url_action(row_item.attr_name("name.first")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True

---
id: debts revisit
continue button field: debts.revisit
question: |
  Edit debt information
subquestion: |
  ${ debts.table }

  % if debts.number_gathered() < 14:
  ${ debts.add_action() }
  % endif
---
table: debts.table
rows: debts
columns:
  - Creditor: |
      row_item.name.text if defined("row_item.name.text") else ""
  - Amount owed: |
      currency( row_item.amount) if defined("row_item.amount") else ""       
  - Details (including how debt will be divided): |
      action_button_html(url_action(row_item.attr_name("name.text")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True

---
id: property revisit
continue button field: property_list.revisit
question: |
  Edit personal property or bank account information
subquestion: |
  ${ property_list.table }

  % if property_list.number_gathered() < 14:
  ${ property_list.add_action() }
  % endif
---
table: property_list.table
rows: property_list
columns:
  - Description: |
      row_item.name.text if defined("row_item.name.text") else ""
  - Will go to: |
      "Me" if row_item.party == "pet" else other_parties[0].name.full(middle="full")       
  - Edit: |
      action_button_html(url_action(row_item.attr_name("name.text")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True

---
id: resp pensions revisit
continue button field: pensions_resp.revisit
question: |
  Edit information about ${other_parties[0].name.full(middle="full")}'s retirement accounts or pensions
subquestion: |
  ${ pensions_resp.table }

  % if pensions_resp.number_gathered() < 3:
  ${ pensions_resp.add_action() }
  % endif
---
table: pensions_resp.table
rows: pensions_resp
columns:
  - Account name: |
      row_item.name.text if defined("row_item.name.text") else ""
  - Details (including how you want it to be divided): |
      action_button_html(url_action(row_item.attr_name("name.text")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
id: user pensions revisit
continue button field: pensions_pet.revisit
question: |
  Edit information about your retirement accounts or pensions
subquestion: |
  ${ pensions_pet.table }

  % if pensions_pet.number_gathered() < 3:
  ${ pensions_pet.add_action() }
  % endif
---
table: pensions_pet.table
rows: pensions_pet
columns:
  - Account name: |
      row_item.name.text if defined("row_item.name.text") else ""
  - Details (including how you want it to be divided): |
      action_button_html(url_action(row_item.attr_name("name.text")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
